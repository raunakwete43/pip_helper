{"version":3,"file":"661.3b0a35b5a2d472d5afbe.js?v=3b0a35b5a2d472d5afbe","mappings":"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","sources":["webpack://@jupyter-lsp/jupyterlab-lsp/./style/console.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/diagnostics_listing.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/highlight.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/index.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/signature.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/statusbar.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/tooltip.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/variables/base.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/variables/cm-themes.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/variables/jupyterlab-dark.css","webpack://@jupyter-lsp/jupyterlab-lsp/./style/variables/jupyterlab-light.css","webpack://@jupyter-lsp/jupyterlab-lsp/./src/tokens.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/extractors/regexp.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/overrides/tokens.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./style/index.css?f019","webpack://@jupyter-lsp/jupyterlab-lsp/./src/overrides/maps.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/virtual/document.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/adapters/fileeditor.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/adapters/notebook.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./style/statusbar.css?6208","webpack://@jupyter-lsp/jupyterlab-lsp/./src/errors.tsx","webpack://@jupyter-lsp/jupyterlab-lsp/./src/components/icons.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/components/utils.tsx","webpack://@jupyter-lsp/jupyterlab-lsp/./src/components/statusbar.tsx","webpack://@jupyter-lsp/jupyterlab-lsp/./src/lsp.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/feature.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/converter.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/completion/overrides.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./style/console.css?11c0","webpack://@jupyter-lsp/jupyterlab-lsp/./src/virtual/console.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/completion/item.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/completion/model.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/completion/renderer.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/completion/provider.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/completion/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/context.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/utils.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/jump_to.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./style/diagnostics_listing.css?d3bd","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/diagnostics/listing.tsx","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/diagnostics/diagnostics.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/diagnostics/underline.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/diagnostics/feature.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/diagnostics/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/marks.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/highlights.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/components/free_tooltip.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/hover.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/edits.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/diagnostics/tokens.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/rename.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/signature.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/features/syntax_highlighting.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/overrides/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/components/serverSettings.tsx","webpack://@jupyter-lsp/jupyterlab-lsp/./src/settings.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython/extractors.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython/overrides.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython-bigquery/extractors.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython-bigquery/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython-rpy2/rpy2.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython-rpy2/extractors.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython-rpy2/overrides.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython-rpy2/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython-sql/extractors.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/ipython-sql/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/transclusions/defaults.ts","webpack://@jupyter-lsp/jupyterlab-lsp/./src/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.lsp-floating-console {\n  position: absolute;\n  width: 600px;\n  min-height: 350px;\n  height: 25%;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  border: 3px solid rgba(204, 204, 204, 0.7);\n  font-size: 12px;\n  overflow-y: auto;\n  margin: 0;\n  list-style-type: none;\n  padding: 5px;\n  z-index: 100;\n}\n\n.lsp-code {\n  font-family: monospace;\n  background: #eee;\n  border-radius: 2px;\n  padding: 2px 5px;\n}\n\n.lsp-kind {\n  padding: 2px 5px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/console.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;EACjB,WAAW;EACX,QAAQ;EACR,SAAS;EACT,oCAAoC;EACpC,0CAA0C;EAC1C,eAAe;EACf,gBAAgB;EAChB,SAAS;EACT,qBAAqB;EACrB,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,gBAAgB;EAChB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\".lsp-floating-console {\\n  position: absolute;\\n  width: 600px;\\n  min-height: 350px;\\n  height: 25%;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(255, 255, 255, 0.8);\\n  border: 3px solid rgba(204, 204, 204, 0.7);\\n  font-size: 12px;\\n  overflow-y: auto;\\n  margin: 0;\\n  list-style-type: none;\\n  padding: 5px;\\n  z-index: 100;\\n}\\n\\n.lsp-code {\\n  font-family: monospace;\\n  background: #eee;\\n  border-radius: 2px;\\n  padding: 2px 5px;\\n}\\n\\n.lsp-kind {\\n  padding: 2px 5px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.lsp-diagnostics-panel-content {\n  overflow-y: auto;\n}\n\n.lsp-diagnostics-placeholder {\n  padding: 8px;\n  color: var(--jp-content-font-color2);\n  text-align: center;\n}\n\n.lsp-diagnostics-placeholder > h3 {\n  margin-bottom: var(--jp-content-heading-margin-bottom);\n}\n\n.lsp-diagnostics-listing {\n  color: var(--jp-ui-font-color1);\n  background: var(--jp-layout-color1);\n  font-size: var(--jp-ui-font-size1);\n  border-spacing: 0;\n  /* required to preserve borders of \\`<th>\\` when using position:sticky */\n  border-collapse: separate;\n  width: 100%;\n}\n\n.lsp-diagnostics-listing thead {\n  box-shadow: var(--jp-toolbar-box-shadow);\n}\n\n.lsp-diagnostics-listing tbody {\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n\n.lsp-diagnostics-listing th,\n.lsp-diagnostics-listing td {\n  padding: 4px 12px 2px 12px;\n  height: 18px;\n}\n\n.lsp-diagnostics-listing th {\n  font-weight: 500;\n  text-align: left;\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color1);\n  background: var(--jp-layout-color1);\n  position: sticky;\n  top: 0;\n  z-index: 2;\n  white-space: nowrap;\n  user-select: none;\n}\n\n.lsp-diagnostics-listing th:not(:first-child) {\n  border-left: var(--jp-border-width) solid var(--jp-border-color2);\n}\n\n.lsp-diagnostics-listing th:hover {\n  background: var(--jp-layout-color2);\n}\n\n.lsp-diagnostics-listing tbody tr:hover {\n  background: var(--jp-layout-color2);\n}\n\n.lsp-diagnostics-listing thead th > div {\n  flex-direction: row;\n  display: flex;\n}\n\n.lsp-diagnostics-listing thead th > div > label {\n  flex: 1;\n  text-overflow: ellipsis;\n}\n\n.lsp-sort-icon {\n  flex: 0;\n  height: var(--jp-ui-font-size1);\n  width: var(--jp-ui-font-size1);\n}\n\n.lsp-sort-icon svg {\n  display: inline;\n  height: auto;\n}\n\n.lsp-diagnostics-listing thead th:not(.lsp-sorted-header) .lsp-sort-icon {\n  opacity: 0;\n}\n\n.lsp-diagnostics-listing thead th:not(.lsp-sorted-header):hover .lsp-sort-icon {\n  opacity: 0.5;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/diagnostics_listing.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,sDAAsD;AACxD;;AAEA;EACE,+BAA+B;EAC/B,mCAAmC;EACnC,kCAAkC;EAClC,iBAAiB;EACjB,sEAAsE;EACtE,yBAAyB;EACzB,WAAW;AACb;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;;EAEE,0BAA0B;EAC1B,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,mEAAmE;EACnE,mCAAmC;EACnC,gBAAgB;EAChB,MAAM;EACN,UAAU;EACV,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,iEAAiE;AACnE;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,OAAO;EACP,uBAAuB;AACzB;;AAEA;EACE,OAAO;EACP,+BAA+B;EAC/B,8BAA8B;AAChC;;AAEA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,YAAY;AACd\",\"sourcesContent\":[\".lsp-diagnostics-panel-content {\\n  overflow-y: auto;\\n}\\n\\n.lsp-diagnostics-placeholder {\\n  padding: 8px;\\n  color: var(--jp-content-font-color2);\\n  text-align: center;\\n}\\n\\n.lsp-diagnostics-placeholder > h3 {\\n  margin-bottom: var(--jp-content-heading-margin-bottom);\\n}\\n\\n.lsp-diagnostics-listing {\\n  color: var(--jp-ui-font-color1);\\n  background: var(--jp-layout-color1);\\n  font-size: var(--jp-ui-font-size1);\\n  border-spacing: 0;\\n  /* required to preserve borders of `<th>` when using position:sticky */\\n  border-collapse: separate;\\n  width: 100%;\\n}\\n\\n.lsp-diagnostics-listing thead {\\n  box-shadow: var(--jp-toolbar-box-shadow);\\n}\\n\\n.lsp-diagnostics-listing tbody {\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n}\\n\\n.lsp-diagnostics-listing th,\\n.lsp-diagnostics-listing td {\\n  padding: 4px 12px 2px 12px;\\n  height: 18px;\\n}\\n\\n.lsp-diagnostics-listing th {\\n  font-weight: 500;\\n  text-align: left;\\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color1);\\n  background: var(--jp-layout-color1);\\n  position: sticky;\\n  top: 0;\\n  z-index: 2;\\n  white-space: nowrap;\\n  user-select: none;\\n}\\n\\n.lsp-diagnostics-listing th:not(:first-child) {\\n  border-left: var(--jp-border-width) solid var(--jp-border-color2);\\n}\\n\\n.lsp-diagnostics-listing th:hover {\\n  background: var(--jp-layout-color2);\\n}\\n\\n.lsp-diagnostics-listing tbody tr:hover {\\n  background: var(--jp-layout-color2);\\n}\\n\\n.lsp-diagnostics-listing thead th > div {\\n  flex-direction: row;\\n  display: flex;\\n}\\n\\n.lsp-diagnostics-listing thead th > div > label {\\n  flex: 1;\\n  text-overflow: ellipsis;\\n}\\n\\n.lsp-sort-icon {\\n  flex: 0;\\n  height: var(--jp-ui-font-size1);\\n  width: var(--jp-ui-font-size1);\\n}\\n\\n.lsp-sort-icon svg {\\n  display: inline;\\n  height: auto;\\n}\\n\\n.lsp-diagnostics-listing thead th:not(.lsp-sorted-header) .lsp-sort-icon {\\n  opacity: 0;\\n}\\n\\n.lsp-diagnostics-listing thead th:not(.lsp-sorted-header):hover .lsp-sort-icon {\\n  opacity: 0.5;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./variables/base.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./variables/cm-themes.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./variables/jupyterlab-dark.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_3___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./variables/jupyterlab-light.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_3___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.cm-lsp-diagnostic-tag-Unnecessary {\n  /*\n   * LSP: \"Clients are allowed to render diagnostics with this tag faded out instead of having an error squiggle.\"\n   */\n  filter: grayscale(1);\n  opacity: 0.7;\n  text-decoration: none !important;\n}\n\n.cm-lsp-diagnostic-tag-Deprecated {\n  /*\n   * LSP: \"Clients are allowed to rendered diagnostics with this tag strike through.\"\n   */\n  text-decoration: line-through !important;\n}\n\n/* hover */\n.cm-lsp-hover-available {\n  text-decoration: var(--jp-editor-mirror-lsp-hover-decoration-style);\n  text-decoration-color: var(--jp-editor-mirror-lsp-hover-decoration-color);\n  text-decoration-line: underline;\n  text-decoration-skip-ink: none;\n}\n\n/* highlight */\n.cm-lsp-highlight-Read {\n  /* highlight on places where variable is accessed, e.g. \\`print(var)\\` */\n  background-color: var(--jp-editor-mirror-lsp-highlight-background-color);\n  outline: 1px solid var(--jp-editor-mirror-lsp-highlight-background-color);\n}\n\n.cm-lsp-highlight-Write {\n  /* highlight on places where variable is defined, e.g. \\`var = 1\\` */\n  background-color: var(--jp-editor-mirror-lsp-highlight-background-color);\n  outline: 1px solid var(--jp-editor-mirror-lsp-highlight-border-color);\n}\n\n.cm-lsp-highlight-Text {\n  /* highlight on places where variable was matched based on text rather than semantics */\n  background-color: var(--jp-editor-mirror-lsp-highlight-background-color);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/highlight.css\"],\"names\":[],\"mappings\":\"AAKA;EACE;;IAEE;EACF,oBAAoB;EACpB,YAAY;EACZ,gCAAgC;AAClC;;AAEA;EACE;;IAEE;EACF,wCAAwC;AAC1C;;AAEA,UAAU;AACV;EACE,mEAAmE;EACnE,yEAAyE;EACzE,+BAA+B;EAC/B,8BAA8B;AAChC;;AAEA,cAAc;AACd;EACE,sEAAsE;EACtE,wEAAwE;EACxE,yEAAyE;AAC3E;;AAEA;EACE,kEAAkE;EAClE,wEAAwE;EACxE,qEAAqE;AACvE;;AAEA;EACE,uFAAuF;EACvF,wEAAwE;AAC1E\",\"sourcesContent\":[\"@import url('./variables/base.css');\\n@import url('./variables/cm-themes.css');\\n@import url('./variables/jupyterlab-dark.css');\\n@import url('./variables/jupyterlab-light.css');\\n\\n.cm-lsp-diagnostic-tag-Unnecessary {\\n  /*\\n   * LSP: \\\"Clients are allowed to render diagnostics with this tag faded out instead of having an error squiggle.\\\"\\n   */\\n  filter: grayscale(1);\\n  opacity: 0.7;\\n  text-decoration: none !important;\\n}\\n\\n.cm-lsp-diagnostic-tag-Deprecated {\\n  /*\\n   * LSP: \\\"Clients are allowed to rendered diagnostics with this tag strike through.\\\"\\n   */\\n  text-decoration: line-through !important;\\n}\\n\\n/* hover */\\n.cm-lsp-hover-available {\\n  text-decoration: var(--jp-editor-mirror-lsp-hover-decoration-style);\\n  text-decoration-color: var(--jp-editor-mirror-lsp-hover-decoration-color);\\n  text-decoration-line: underline;\\n  text-decoration-skip-ink: none;\\n}\\n\\n/* highlight */\\n.cm-lsp-highlight-Read {\\n  /* highlight on places where variable is accessed, e.g. `print(var)` */\\n  background-color: var(--jp-editor-mirror-lsp-highlight-background-color);\\n  outline: 1px solid var(--jp-editor-mirror-lsp-highlight-background-color);\\n}\\n\\n.cm-lsp-highlight-Write {\\n  /* highlight on places where variable is defined, e.g. `var = 1` */\\n  background-color: var(--jp-editor-mirror-lsp-highlight-background-color);\\n  outline: 1px solid var(--jp-editor-mirror-lsp-highlight-border-color);\\n}\\n\\n.cm-lsp-highlight-Text {\\n  /* highlight on places where variable was matched based on text rather than semantics */\\n  background-color: var(--jp-editor-mirror-lsp-highlight-background-color);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./highlight.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./tooltip.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./signature.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.lsp-document-locator:hover {\n  cursor: pointer;\n}\n\n.lsp-document-locator span:not(:last-child)::after {\n  content: ' > ';\n}\n\n.lsp-icon-flip-x {\n  transform: scaleX(-1);\n  transform-origin: center center;\n}\n\n.lsp-external-link {\n  color: var(--jp-content-link-color);\n}\n\n.lsp-ServerSettings-list {\n  grid-area: listing;\n  min-width: 175px;\n}\n\n.lsp-ServerSettings-list ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.lsp-ServerSettings-list li {\n  text-overflow: ellipsis;\n  overflow-x: hidden;\n  white-space: nowrap;\n  padding: 3px 0;\n  border-left: 3px solid transparent;\n  padding-left: 4px;\n}\n\n.lsp-ServerSettings-title {\n  font-size: var(--jp-content-font-size2);\n  color: var(--jp-ui-font-color0);\n  font-weight: 300;\n  margin: 0;\n  padding: 0;\n}\n\n.lsp-ServerSettings-list-group {\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: var(--jp-ui-font-size0);\n  padding: 8px 8px 8px 12px;\n  margin: 10px;\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color2);\n  border-top: var(--jp-border-width) solid var(--jp-border-color2);\n  color: var(--jp-content-font-color1);\n}\n\n.lsp-ServerSettings-list li.lsp-selected {\n  border-color: var(--jp-brand-color1);\n}\n\n.lsp-ServerSettings-list li:hover {\n  background-color: var(--jp-layout-color2);\n  transition: background-color 100ms ease-in-out;\n}\n\n.lsp-ServerSettings-content {\n  grid-area: content;\n  min-width: 0;\n  width: 100%;\n  overflow-y: scroll;\n  max-height: 1000px;\n}\n\n.lsp-ServerSettings-content-name {\n  font-size: var(--jp-content-font-size2);\n  color: var(--jp-ui-font-color0);\n  font-weight: normal;\n  margin: 1em;\n}\n\n.lsp-ServerSettings-content-specOverrides {\n  margin: 1em;\n}\n\n.lsp-ServerSettings-content > .form-group {\n  padding-top: 0;\n}\n\n.lsp-ServerSettings-content .lsp-server-links-list {\n  margin: 0;\n}\n\n.lsp-ServerSettings-tabs {\n  display: grid;\n  grid-template: 'listing content';\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/index.css\"],\"names\":[],\"mappings\":\"AAIA;EACE,eAAe;AACjB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,qBAAqB;EACrB,+BAA+B;AACjC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,mBAAmB;EACnB,cAAc;EACd,kCAAkC;EAClC,iBAAiB;AACnB;;AAEA;EACE,uCAAuC;EACvC,+BAA+B;EAC/B,gBAAgB;EAChB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,mBAAmB;EACnB,kCAAkC;EAClC,yBAAyB;EACzB,YAAY;EACZ,mEAAmE;EACnE,gEAAgE;EAChE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,yCAAyC;EACzC,8CAA8C;AAChD;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,uCAAuC;EACvC,+BAA+B;EAC/B,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,aAAa;EACb,gCAAgC;AAClC\",\"sourcesContent\":[\"@import url('./highlight.css');\\n@import url('./tooltip.css');\\n@import url('./signature.css');\\n\\n.lsp-document-locator:hover {\\n  cursor: pointer;\\n}\\n\\n.lsp-document-locator span:not(:last-child)::after {\\n  content: ' > ';\\n}\\n\\n.lsp-icon-flip-x {\\n  transform: scaleX(-1);\\n  transform-origin: center center;\\n}\\n\\n.lsp-external-link {\\n  color: var(--jp-content-link-color);\\n}\\n\\n.lsp-ServerSettings-list {\\n  grid-area: listing;\\n  min-width: 175px;\\n}\\n\\n.lsp-ServerSettings-list ul {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.lsp-ServerSettings-list li {\\n  text-overflow: ellipsis;\\n  overflow-x: hidden;\\n  white-space: nowrap;\\n  padding: 3px 0;\\n  border-left: 3px solid transparent;\\n  padding-left: 4px;\\n}\\n\\n.lsp-ServerSettings-title {\\n  font-size: var(--jp-content-font-size2);\\n  color: var(--jp-ui-font-color0);\\n  font-weight: 300;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.lsp-ServerSettings-list-group {\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  letter-spacing: 1px;\\n  font-size: var(--jp-ui-font-size0);\\n  padding: 8px 8px 8px 12px;\\n  margin: 10px;\\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color2);\\n  border-top: var(--jp-border-width) solid var(--jp-border-color2);\\n  color: var(--jp-content-font-color1);\\n}\\n\\n.lsp-ServerSettings-list li.lsp-selected {\\n  border-color: var(--jp-brand-color1);\\n}\\n\\n.lsp-ServerSettings-list li:hover {\\n  background-color: var(--jp-layout-color2);\\n  transition: background-color 100ms ease-in-out;\\n}\\n\\n.lsp-ServerSettings-content {\\n  grid-area: content;\\n  min-width: 0;\\n  width: 100%;\\n  overflow-y: scroll;\\n  max-height: 1000px;\\n}\\n\\n.lsp-ServerSettings-content-name {\\n  font-size: var(--jp-content-font-size2);\\n  color: var(--jp-ui-font-color0);\\n  font-weight: normal;\\n  margin: 1em;\\n}\\n\\n.lsp-ServerSettings-content-specOverrides {\\n  margin: 1em;\\n}\\n\\n.lsp-ServerSettings-content > .form-group {\\n  padding-top: 0;\\n}\\n\\n.lsp-ServerSettings-content .lsp-server-links-list {\\n  margin: 0;\\n}\\n\\n.lsp-ServerSettings-tabs {\\n  display: grid;\\n  grid-template: 'listing content';\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.lsp-signature-help code {\n  font-size: var(--jp-code-font-size);\n}\n\n.lsp-signature-help code > mark {\n  color: var(--jp-lsp-signature-mark-color);\n  background: var(--jp-lsp-signature-mark-background);\n}\n\n.lsp-signature-help code > mark > span {\n  /* override syntax highlight colour to ensure contrast */\n  color: var(--jp-lsp-signature-mark-color) !important;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/signature.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,mCAAmC;AACrC;;AAEA;EACE,yCAAyC;EACzC,mDAAmD;AACrD;;AAEA;EACE,wDAAwD;EACxD,oDAAoD;AACtD\",\"sourcesContent\":[\".lsp-signature-help code {\\n  font-size: var(--jp-code-font-size);\\n}\\n\\n.lsp-signature-help code > mark {\\n  color: var(--jp-lsp-signature-mark-color);\\n  background: var(--jp-lsp-signature-mark-background);\\n}\\n\\n.lsp-signature-help code > mark > span {\\n  /* override syntax highlight colour to ensure contrast */\\n  color: var(--jp-lsp-signature-mark-color) !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.lsp-popover {\n  /* jupyterlab Menu */\n  z-index: 10000;\n  padding: 4px 0px;\n  background: var(--jp-layout-color0);\n  color: var(--jp-ui-font-color1);\n  border: var(--jp-border-width) solid var(--jp-border-color1);\n  font-size: var(--jp-ui-font-size1);\n  box-shadow: var(--jp-elevation-z6);\n}\n\n.lsp-popover-content {\n  padding: 5px 10px;\n}\n\n.lsp-servers-title {\n  margin-bottom: 5px;\n}\n\n.lsp-servers-menu {\n  height: 350px;\n  overflow-y: auto;\n}\n\n.lsp-server-status,\n.lsp-missing-server,\n.lsp-documents-by-language {\n  margin-left: 20px;\n}\n\nh5 .lsp-language-server-name {\n  color: var(--jp-ui-font-color2);\n}\n\n.lsp-documents-by-language ul,\n.lsp-server-status ul {\n  margin: 0;\n  padding-left: 25px;\n}\n\n.lsp-servers-menu h5 {\n  font-weight: normal;\n  font-size: 100%;\n  white-space: nowrap;\n}\n\n.lsp-servers-lists {\n  margin-left: 5px;\n}\n\n.lsp-popover-status {\n  padding-top: 5px;\n  border-top: 1px solid var(--jp-border-color1);\n}\n\n.lsp-popover-status a {\n  color: var(--jp-content-link-color);\n}\n\n.lsp-servers-menu h3,\nh4,\nh5 {\n  margin: 0;\n}\n\n.lsp-documents-by-language li {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.lsp-document-status {\n  float: right;\n  padding-left: 15px;\n}\n\n.lsp-document-status-icon {\n  margin-left: 5px;\n  position: relative;\n  top: 3px;\n}\n\n.lsp-collapsible-list h4 {\n  cursor: pointer;\n}\n\n.lsp-collapsible-list .lsp-caret-icon {\n  position: relative;\n  top: 3px;\n}\n\n.lsp-collapsible-list.lsp-collapsed div {\n  display: none;\n}\n\n.lsp-statusbar-item {\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.lsp-status-icon.ready svg g {\n  fill: var(--jp-success-color0);\n}\n\n.lsp-status-icon.preparing svg g {\n  fill: var(--jp-warn-color0);\n}\n\n.lsp-status-icon.error svg g {\n  fill: var(--jp-error-color0);\n}\n\n.lsp-status-icon.inactive svg g {\n  fill: var(--jp-layout-color3);\n}\n\n.lsp-status-message {\n  user-select: none;\n}\n\nbody[data-jp-theme-light='false'] .lsp-status-icon.ready svg g {\n  fill: var(--jp-success-color1);\n}\n\n.lsp-statusbar-item.jp-mod-clicked .jp-icon-selectable[fill] {\n  fill: #fff;\n}\n\n.jp-ToolbarButton .lsp-status-icon svg {\n  top: 5px;\n}\n\n.lsp-help-button {\n  background: var(--jp-layout-color2);\n  border: 1px solid var(--jp-brand-color0);\n  float: right;\n}\n\n.lsp-help-button:hover {\n  background: var(--jp-layout-color3);\n}\n\n.lsp-server-links-list a {\n  color: var(--jp-content-link-color);\n}\n\n.lsp-troubleshoot-section {\n  white-space: pre-wrap;\n  margin: 10px 0;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/statusbar.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,oBAAoB;EACpB,cAAc;EACd,gBAAgB;EAChB,mCAAmC;EACnC,+BAA+B;EAC/B,4DAA4D;EAC5D,kCAAkC;EAClC,kCAAkC;AACpC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;;;EAGE,iBAAiB;AACnB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;;EAEE,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,6CAA6C;AAC/C;;AAEA;EACE,mCAAmC;AACrC;;AAEA;;;EAGE,SAAS;AACX;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,QAAQ;AACV;;AAEA;EACE,mCAAmC;EACnC,wCAAwC;EACxC,YAAY;AACd;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB\",\"sourcesContent\":[\".lsp-popover {\\n  /* jupyterlab Menu */\\n  z-index: 10000;\\n  padding: 4px 0px;\\n  background: var(--jp-layout-color0);\\n  color: var(--jp-ui-font-color1);\\n  border: var(--jp-border-width) solid var(--jp-border-color1);\\n  font-size: var(--jp-ui-font-size1);\\n  box-shadow: var(--jp-elevation-z6);\\n}\\n\\n.lsp-popover-content {\\n  padding: 5px 10px;\\n}\\n\\n.lsp-servers-title {\\n  margin-bottom: 5px;\\n}\\n\\n.lsp-servers-menu {\\n  height: 350px;\\n  overflow-y: auto;\\n}\\n\\n.lsp-server-status,\\n.lsp-missing-server,\\n.lsp-documents-by-language {\\n  margin-left: 20px;\\n}\\n\\nh5 .lsp-language-server-name {\\n  color: var(--jp-ui-font-color2);\\n}\\n\\n.lsp-documents-by-language ul,\\n.lsp-server-status ul {\\n  margin: 0;\\n  padding-left: 25px;\\n}\\n\\n.lsp-servers-menu h5 {\\n  font-weight: normal;\\n  font-size: 100%;\\n  white-space: nowrap;\\n}\\n\\n.lsp-servers-lists {\\n  margin-left: 5px;\\n}\\n\\n.lsp-popover-status {\\n  padding-top: 5px;\\n  border-top: 1px solid var(--jp-border-color1);\\n}\\n\\n.lsp-popover-status a {\\n  color: var(--jp-content-link-color);\\n}\\n\\n.lsp-servers-menu h3,\\nh4,\\nh5 {\\n  margin: 0;\\n}\\n\\n.lsp-documents-by-language li {\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.lsp-document-status {\\n  float: right;\\n  padding-left: 15px;\\n}\\n\\n.lsp-document-status-icon {\\n  margin-left: 5px;\\n  position: relative;\\n  top: 3px;\\n}\\n\\n.lsp-collapsible-list h4 {\\n  cursor: pointer;\\n}\\n\\n.lsp-collapsible-list .lsp-caret-icon {\\n  position: relative;\\n  top: 3px;\\n}\\n\\n.lsp-collapsible-list.lsp-collapsed div {\\n  display: none;\\n}\\n\\n.lsp-statusbar-item {\\n  overflow: hidden;\\n  white-space: nowrap;\\n}\\n\\n.lsp-status-icon.ready svg g {\\n  fill: var(--jp-success-color0);\\n}\\n\\n.lsp-status-icon.preparing svg g {\\n  fill: var(--jp-warn-color0);\\n}\\n\\n.lsp-status-icon.error svg g {\\n  fill: var(--jp-error-color0);\\n}\\n\\n.lsp-status-icon.inactive svg g {\\n  fill: var(--jp-layout-color3);\\n}\\n\\n.lsp-status-message {\\n  user-select: none;\\n}\\n\\nbody[data-jp-theme-light='false'] .lsp-status-icon.ready svg g {\\n  fill: var(--jp-success-color1);\\n}\\n\\n.lsp-statusbar-item.jp-mod-clicked .jp-icon-selectable[fill] {\\n  fill: #fff;\\n}\\n\\n.jp-ToolbarButton .lsp-status-icon svg {\\n  top: 5px;\\n}\\n\\n.lsp-help-button {\\n  background: var(--jp-layout-color2);\\n  border: 1px solid var(--jp-brand-color0);\\n  float: right;\\n}\\n\\n.lsp-help-button:hover {\\n  background: var(--jp-layout-color3);\\n}\\n\\n.lsp-server-links-list a {\\n  color: var(--jp-content-link-color);\\n}\\n\\n.lsp-troubleshoot-section {\\n  white-space: pre-wrap;\\n  margin: 10px 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.lsp-tooltip .jp-RenderedHTMLCommon {\n  /* Reduce the default padding from 20px to 0px */\n  padding-right: 0px;\n}\n\n.lsp-tooltip .jp-RenderedHTMLCommon > *:last-child {\n  /* Reduce the default margin */\n  margin-bottom: 0;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/tooltip.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gDAAgD;EAChD,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;EAC9B,gBAAgB;AAClB\",\"sourcesContent\":[\".lsp-tooltip .jp-RenderedHTMLCommon {\\n  /* Reduce the default padding from 20px to 0px */\\n  padding-right: 0px;\\n}\\n\\n.lsp-tooltip .jp-RenderedHTMLCommon > *:last-child {\\n  /* Reduce the default margin */\\n  margin-bottom: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n  /* highlight */\n  --jp-editor-mirror-lsp-highlight-background-color: color-mix(\n    in srgb,\n    var(--jp-layout-color3) 25%,\n    transparent\n  );\n  --jp-editor-mirror-lsp-highlight-border-color: var(--jp-layout-color3);\n  /* diagnostics */\n  --jp-editor-mirror-lsp-diagnostic-decoration-style: dashed;\n  --jp-editor-mirror-lsp-diagnostic-error-decoration-color: var(\n    --jp-error-color1\n  );\n  --jp-editor-mirror-lsp-diagnostic-warning-decoration-color: var(\n    --jp-warn-color1\n  );\n  --jp-editor-mirror-lsp-diagnostic-information-decoration-color: var(\n    --jp-info-color1\n  );\n  --jp-editor-mirror-lsp-diagnostic-hint-decoration-color: var(\n    --jp-success-color1\n  );\n  /* hover */\n  --jp-editor-mirror-lsp-hover-decoration-style: dotted;\n  --jp-editor-mirror-lsp-hover-decoration-color: var(--jp-brand-color1);\n  /* signature */\n  --jp-lsp-signature-mark-color: black;\n  --jp-lsp-signature-mark-background: yellow;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/variables/base.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,cAAc;EACd;;;;GAIC;EACD,sEAAsE;EACtE,gBAAgB;EAChB,0DAA0D;EAC1D;;GAEC;EACD;;GAEC;EACD;;GAEC;EACD;;GAEC;EACD,UAAU;EACV,qDAAqD;EACrD,qEAAqE;EACrE,cAAc;EACd,oCAAoC;EACpC,0CAA0C;AAC5C\",\"sourcesContent\":[\":root {\\n  /* highlight */\\n  --jp-editor-mirror-lsp-highlight-background-color: color-mix(\\n    in srgb,\\n    var(--jp-layout-color3) 25%,\\n    transparent\\n  );\\n  --jp-editor-mirror-lsp-highlight-border-color: var(--jp-layout-color3);\\n  /* diagnostics */\\n  --jp-editor-mirror-lsp-diagnostic-decoration-style: dashed;\\n  --jp-editor-mirror-lsp-diagnostic-error-decoration-color: var(\\n    --jp-error-color1\\n  );\\n  --jp-editor-mirror-lsp-diagnostic-warning-decoration-color: var(\\n    --jp-warn-color1\\n  );\\n  --jp-editor-mirror-lsp-diagnostic-information-decoration-color: var(\\n    --jp-info-color1\\n  );\\n  --jp-editor-mirror-lsp-diagnostic-hint-decoration-color: var(\\n    --jp-success-color1\\n  );\\n  /* hover */\\n  --jp-editor-mirror-lsp-hover-decoration-style: dotted;\\n  --jp-editor-mirror-lsp-hover-decoration-color: var(--jp-brand-color1);\\n  /* signature */\\n  --jp-lsp-signature-mark-color: black;\\n  --jp-lsp-signature-mark-background: yellow;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.cm-s-abcdef {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(144, 199, 255, 0.2);\n}\n\n.cm-s-base16-dark {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\n}\n\n.cm-s-base16-light {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(186, 192, 161, 0.1);\n}\n\n.cm-s-default {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\n}\n\n.cm-s-hopscotch {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(207, 18, 255, 0.2);\n}\n\n.cm-s-material {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 255, 58, 0.2);\n}\n\n.cm-s-mbo {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\n}\n\n.cm-s-material {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\n}\n\n.cm-s-mdn-like {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\n}\n\n.cm-s-seti {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\n}\n\n.cm-s-solarized {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\n}\n\n.cm-s-the-matrix {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.1);\n}\n\n.cm-s-xq-light {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\n}\n\n.cm-s-zenburn {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/variables/cm-themes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,2EAA2E;AAC7E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,0EAA0E;AAC5E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,2EAA2E;AAC7E\",\"sourcesContent\":[\".cm-s-abcdef {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(144, 199, 255, 0.2);\\n}\\n\\n.cm-s-base16-dark {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-base16-light {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(186, 192, 161, 0.1);\\n}\\n\\n.cm-s-default {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-hopscotch {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(207, 18, 255, 0.2);\\n}\\n\\n.cm-s-material {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 255, 58, 0.2);\\n}\\n\\n.cm-s-mbo {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-material {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-mdn-like {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-seti {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-solarized {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-the-matrix {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.1);\\n}\\n\\n.cm-s-xq-light {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-zenburn {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body[data-jp-theme-light='false'] .cm-s-jupyter {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(151, 173, 255, 0.3);\n}\n\nbody[data-jp-theme-light='false'] {\n  --jp-lsp-signature-mark-color: white;\n  --jp-lsp-signature-mark-background: #607e01;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/variables/jupyterlab-dark.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,2EAA2E;AAC7E;;AAEA;EACE,oCAAoC;EACpC,2CAA2C;AAC7C\",\"sourcesContent\":[\"body[data-jp-theme-light='false'] .cm-s-jupyter {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(151, 173, 255, 0.3);\\n}\\n\\nbody[data-jp-theme-light='false'] {\\n  --jp-lsp-signature-mark-color: white;\\n  --jp-lsp-signature-mark-background: #607e01;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body[data-jp-theme-light='true'] .cm-s-jupyter {\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/variables/jupyterlab-light.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,yEAAyE;AAC3E\",\"sourcesContent\":[\"body[data-jp-theme-light='true'] .cm-s-jupyter {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { Token } from '@lumino/coreutils';\n\nimport { LanguageServer1 as LSPLanguageServerSettings } from './_plugin';\nimport * as SCHEMA from './_schema';\n\nexport type TLanguageId = string;\n\n/**\n * Example server keys==ids that are expected. The list is not exhaustive.\n * Custom server keys are allowed. Constraining the values helps avoid errors,\n * but at runtime any value is allowed.\n */\nexport type TLanguageServerId =\n  | 'pylsp'\n  | 'bash-language-server'\n  | 'dockerfile-language-server-nodejs'\n  | 'javascript-typescript-langserver'\n  | 'unified-language-server'\n  | 'vscode-css-languageserver-bin'\n  | 'vscode-html-languageserver-bin'\n  | 'vscode-json-languageserver-bin'\n  | 'yaml-language-server'\n  | 'r-languageserver';\nexport type TServerKeys = TLanguageServerId;\n\nexport type TLanguageServerSpec = SCHEMA.LanguageServerSpec;\nexport type TSessionMap = Map<TServerKeys, SCHEMA.LanguageServerSession>;\nexport type TSpecsMap = Map<TServerKeys, SCHEMA.LanguageServerSpec>;\n\nexport type TLanguageServerConfigurations = Partial<\n  Record<TServerKeys, LSPLanguageServerSettings>\n>;\n\nexport interface ILogConsoleCore {\n  debug(...args: any[]): void;\n  log(...args: any[]): void;\n  warn(...args: any[]): void;\n  error(...args: any[]): void;\n}\n\nexport interface ILSPLogConsole extends ILogConsoleCore {\n  scope(scope: string): ILSPLogConsole;\n}\n\nexport const PLUGIN_ID = '@jupyter-lsp/jupyterlab-lsp';\n\nexport const ILSPLogConsole = new Token<ILSPLogConsole>(\n  PLUGIN_ID + ':ILSPLogConsole'\n);\n","import { CodeEditor } from '@jupyterlab/codeeditor';\nimport {\n  positionAtOffset,\n  IExtractedCode,\n  IForeignCodeExtractor\n} from '@jupyterlab/lsp';\n\nimport { replacer } from '../overrides/tokens';\n\nexport function getIndexOfCaptureGroup(\n  expression: RegExp,\n  matchedString: string,\n  valueOfCapturedGroup: string\n): number {\n  // TODO: use https://github.com/tc39/proposal-regexp-match-indices once supported in >95% of browsers\n  //  (probably around 2025)\n\n  // get index of the part that is being extracted to foreign document\n  let capturedGroups = expression.exec(matchedString);\n\n  if (capturedGroups == null) {\n    console.warn(\n      `No capture group found for ${expression} in ${matchedString}`\n    );\n    return -1;\n  }\n\n  let offsetInMatch = 0;\n\n  // first element is a full match\n  let fullMatched = capturedGroups[0];\n\n  for (let group of capturedGroups.slice(1)) {\n    if (typeof group === 'undefined') {\n      continue;\n    }\n\n    if (group === valueOfCapturedGroup) {\n      offsetInMatch += fullMatched.indexOf(group);\n      break;\n    }\n\n    let groupEndOffset = fullMatched.indexOf(group) + group.length;\n\n    fullMatched = fullMatched.slice(groupEndOffset);\n    offsetInMatch += groupEndOffset;\n  }\n\n  return offsetInMatch;\n}\n\nexport class RegExpForeignCodeExtractor implements IForeignCodeExtractor {\n  options: RegExpForeignCodeExtractor.IOptions;\n  language: string;\n  globalExpression: RegExp;\n  testExpression: RegExp;\n  expression: RegExp;\n  standalone: boolean;\n  fileExtension: string;\n  cellType: string[] = ['code'];\n\n  constructor(options: RegExpForeignCodeExtractor.IOptions) {\n    this.language = options.language;\n    this.options = options;\n    this.globalExpression = new RegExp(options.pattern, 'g');\n    this.testExpression = new RegExp(options.pattern, 'g');\n    this.expression = new RegExp(options.pattern);\n    this.standalone = this.options.isStandalone;\n    this.fileExtension = this.options.fileExtension;\n  }\n\n  hasForeignCode(code: string): boolean {\n    const result = this.testExpression.test(code);\n    this.testExpression.lastIndex = 0;\n    return result;\n  }\n\n  extractForeignCode(code: string): IExtractedCode[] {\n    const lines = code.split('\\n');\n\n    const extracts = new Array<IExtractedCode>();\n\n    let startedFrom = this.globalExpression.lastIndex;\n    let match: RegExpExecArray | null = this.globalExpression.exec(code);\n    let hostCodeFragment: string;\n\n    let chosenReplacer: string | replacer;\n    let isNewApiReplacer: boolean = false;\n\n    if (typeof this.options.foreignReplacer !== 'undefined') {\n      chosenReplacer = this.options.foreignReplacer;\n      isNewApiReplacer = true;\n    } else if (typeof this.options.foreignCaptureGroups !== 'undefined') {\n      chosenReplacer = '$' + this.options.foreignCaptureGroups.join('$');\n      isNewApiReplacer = true;\n    } else if (this.options.extractToForeign) {\n      chosenReplacer = this.options.extractToForeign;\n    } else {\n      console.warn(\n        `Foreign replacer not defined for extractor: {this.expression} - this is deprecated; use 'foreignReplacer' to define it`\n      );\n      return [];\n    }\n\n    while (match != null) {\n      let matchedString = match[0];\n      let positionShift: CodeEditor.IPosition | null = null;\n\n      let foreignCodeFragment = matchedString.replace(\n        this.expression,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        chosenReplacer\n      );\n      let prefix = '';\n      if (typeof this.options.extractArguments !== 'undefined') {\n        prefix = matchedString.replace(\n          this.expression,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          this.options.extractArguments\n        );\n        positionShift = positionAtOffset(prefix.length, prefix.split('\\n'));\n      }\n\n      // NOTE:\n      // match.index + matchedString.length === this.sticky_expression.lastIndex\n\n      let endIndex = this.globalExpression.lastIndex;\n\n      if (this.options.keepInHost || this.options.keepInHost == null) {\n        hostCodeFragment = code.substring(startedFrom, endIndex);\n      } else {\n        if (startedFrom === match.index) {\n          hostCodeFragment = '';\n        } else {\n          hostCodeFragment = code.substring(startedFrom, match.index) + '\\n';\n        }\n      }\n\n      let foreignCodeGroupValue = foreignCodeFragment;\n\n      if (isNewApiReplacer) {\n        foreignCodeGroupValue = matchedString.replace(\n          this.expression,\n          '$' + Math.min(...this.options.foreignCaptureGroups!)\n        );\n      }\n\n      const foreignGroupIndexInMatch = getIndexOfCaptureGroup(\n        this.expression,\n        matchedString,\n        foreignCodeGroupValue\n      );\n\n      let startOffset = match.index + foreignGroupIndexInMatch;\n\n      let start = positionAtOffset(startOffset, lines);\n      let end = positionAtOffset(\n        startOffset + foreignCodeFragment.length,\n        lines\n      );\n\n      extracts.push({\n        hostCode: hostCodeFragment,\n        foreignCode: prefix + foreignCodeFragment,\n        range: { start, end },\n        virtualShift: positionShift\n      });\n\n      startedFrom = this.globalExpression.lastIndex;\n      match = this.globalExpression.exec(code);\n    }\n\n    if (startedFrom !== code.length) {\n      let finalHostCodeFragment = code.substring(startedFrom, code.length);\n      extracts.push({\n        hostCode: finalHostCodeFragment,\n        foreignCode: null,\n        range: null,\n        virtualShift: null\n      });\n    }\n\n    return extracts;\n  }\n}\n\nnamespace RegExpForeignCodeExtractor {\n  export interface IOptions {\n    /**\n     * The foreign language.\n     */\n    language: string;\n    /**\n     * String giving regular expression to test cells for the foreign language presence.\n     *\n     * For example:\n     *   - `%%R( (.*))?\\n(.*)` will match R cells of rpy2\n     *   - `(.*)'<html>(.*)</html>'(.*)` will match html documents in strings of any language using single ticks\n     */\n    pattern: string;\n    /**\n     * Array of numbers specifying match groups to be extracted from the regular expression match,\n     * for the use in virtual document of the foreign language.\n     * For the R example this should be `3`. Please not that these are 1-based, as the 0th index is the full match.\n     * If multiple groups are given, those will be concatenated.\n     *\n     * If additional code is needed in between the groups, use `foreignReplacer` in addition to\n     * `foreignCaptureGroups` (but not instead!).\n     *\n     * `foreignCaptureGroups` is required for proper offset calculation and will no longer be optional in 4.0.\n     */\n    foreignCaptureGroups?: number[];\n    /**\n     * Function to compose the foreign document code, in case if using a capture group alone is not sufficient;\n     * If specified, `foreign_capture_group` should be specified as well, so that it points to the first occurrence\n     * of the foreign code. When both are specified, `foreignReplacer` takes precedence.\n     *\n     * See:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n     */\n    foreignReplacer?: replacer;\n    /**\n     * @deprecated `extractToForeign` will be removed in 4.0; use `foreign_capture_group` or `foreignReplacer` instead\n     */\n    extractToForeign?: string | replacer;\n    /**\n     * If arguments from the cell or line magic are to be extracted and prepended before the extracted code,\n     * set extractArguments to a replacer function taking the code and returning the string to be prepended.\n     */\n    extractArguments?: replacer;\n    /**\n     * Boolean if everything (true, default) or nothing (false) should be kept in the host document.\n     *\n     * For the R example this should be empty if we wish to ignore the cell,\n     * but usually a better option is to retain the foreign code and use language\n     * specific overrides to suppress the magic in a more controlled way, providing\n     * dummy python code to handle cell input/output.\n     *\n     * Setting to false is DEPRECATED as it breaks the edit feature (while it could be fixed,\n     * it would make the code considerably more complex).\n     *\n     * @deprecated `keepInHost` will be removed in 4.0\n     */\n    keepInHost?: boolean;\n    /**\n     * Should the foreign code be appended (False) to the previously established virtual document of the same language,\n     * or is it standalone snippet which requires separate connection?\n     */\n    isStandalone: boolean;\n    fileExtension: string;\n  }\n}\n","import { Token } from '@lumino/coreutils';\n\nimport { LanguageIdentifier } from '../lsp';\nimport { PLUGIN_ID } from '../tokens';\n\nexport type replacer = (...args: string[]) => string;\n\nexport type OverrideScope =\n  | /**\n   * Overrides for kernel-specific constructs contained to a single cell, such as cell magics in IPython.\n   * If a match for expresion in the key is found at the beginning of a cell, the entire cell is replaced with the value.\n   */\n  'cell'\n  /**\n   * Overrides for kernel-specific constructs contained to a single line, such as line magics in IPython.\n   * If a match for expresion in the key is found against a line, the line is replaced with the value.\n   */\n  | 'line';\n\n/**\n * The expressions will be tested in the order of definition\n */\nexport interface ICodeOverride {\n  pattern: string;\n  replacement: string | replacer;\n  reverse?: this;\n}\n\nexport interface ICodeOverridesRegistry {\n  [language: string]: {\n    cell: ICodeOverride[];\n    line: ICodeOverride[];\n  };\n}\n\nexport interface IScopedCodeOverride extends ICodeOverride {\n  scope: OverrideScope;\n}\n\n/**\n * Interactive kernels often provide additional functionality invoked by so-called magics,\n * which use distinctive syntax. This features may however not be interpreted correctly by\n * the general purpose language linters. To avoid false-positives making the linter useless\n * for any specific language when magics are used, regular expressions can be used to replace\n * the magics with linter-friendly substitutes; this will be made user configurable.\n */\nexport interface ILSPCodeOverridesManager {\n  readonly registry: ICodeOverridesRegistry;\n  /**\n   * Register a code override to replace code fragments in documents of specified language.\n   */\n  register(override: IScopedCodeOverride, language: LanguageIdentifier): void;\n}\n\nexport const ILSPCodeOverridesManager = new Token<ILSPCodeOverridesManager>(\n  PLUGIN_ID + ':ILSPCodeOverridesManager'\n);\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { ICodeOverride, replacer } from './tokens';\n\nabstract class OverridesMap extends Map<RegExp, string | replacer> {\n  protected constructor(magicOverrides: ICodeOverride[]) {\n    super(magicOverrides.map(m => [new RegExp(m.pattern), m.replacement]));\n  }\n\n  abstract overrideFor(code: string): string | null;\n\n  protected _overrideFor(code: string): string | null {\n    for (let [key, value] of this) {\n      if (code.match(key)) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return code.replace(key, value);\n      }\n    }\n    return null;\n  }\n}\n\nexport class ReversibleOverridesMap extends OverridesMap {\n  private overrides: ICodeOverride[];\n\n  constructor(magicOverrides: ICodeOverride[]) {\n    super(magicOverrides);\n    this.overrides = magicOverrides;\n  }\n\n  get reverse(): OverridesMap {\n    return this.type(\n      this.overrides\n        .filter(override => override.reverse != null)\n        .map(override => override.reverse!)\n    );\n  }\n\n  type(overrides: ICodeOverride[]) {\n    return new ReversibleOverridesMap(overrides);\n  }\n\n  overrideFor(cell: string): string | null {\n    return super._overrideFor(cell);\n  }\n\n  replaceAll(\n    rawLines: string[],\n    map: OverridesMap = this\n  ): { lines: string[]; skipInspect: boolean[] } {\n    let substitutedLines = new Array<string>();\n    let skipInspect = new Array<boolean>();\n\n    for (let i = 0; i < rawLines.length; i++) {\n      let line = rawLines[i];\n      let override = map.overrideFor(line);\n      substitutedLines.push(override == null ? line : override);\n      skipInspect.push(override != null);\n    }\n    return {\n      lines: substitutedLines,\n      skipInspect: skipInspect\n    };\n  }\n\n  reverseReplaceAll(rawLines: string[]): string[] {\n    return this.replaceAll(rawLines, this.reverse).lines;\n  }\n}\n","// TODO: develop a better API upstream\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport type {\n  IVirtualPosition,\n  IRootPosition,\n  Document,\n  ForeignDocumentsMap,\n  IForeignCodeExtractor\n} from '@jupyterlab/lsp';\nimport { VirtualDocument as VirtualDocumentBase } from '@jupyterlab/lsp';\n\nimport { ReversibleOverridesMap } from '../overrides/maps';\nimport { ICodeOverridesRegistry } from '../overrides/tokens';\n\nexport namespace VirtualDocument {\n  export interface IOptions extends VirtualDocumentBase.IOptions {\n    overridesRegistry: ICodeOverridesRegistry;\n  }\n}\n\nexport class VirtualDocument extends VirtualDocumentBase {\n  private cellMagicsOverrides: ReversibleOverridesMap;\n  private lineMagicsOverrides: ReversibleOverridesMap;\n\n  constructor(options: VirtualDocument.IOptions) {\n    super(options);\n    const overrides =\n      this.language in options.overridesRegistry\n        ? options.overridesRegistry[this.language]\n        : null;\n    this.cellMagicsOverrides = new ReversibleOverridesMap(\n      overrides ? overrides.cell : []\n    );\n    this.lineMagicsOverrides = new ReversibleOverridesMap(\n      overrides ? overrides.line : []\n    );\n    // override private `chooseForeignDocument` as a workaround for\n    // https://github.com/jupyter-lsp/jupyterlab-lsp/issues/959\n    this['chooseForeignDocument'] = this._chooseForeignDocument;\n  }\n\n  // TODO: this could be moved out\n  decodeCodeBlock(rawCode: string): string {\n    // TODO: add back previously extracted foreign code\n    const cellOverride = this.cellMagicsOverrides.reverse.overrideFor(rawCode);\n    if (cellOverride != null) {\n      return cellOverride;\n    } else {\n      let lines = this.lineMagicsOverrides.reverseReplaceAll(\n        rawCode.split('\\n')\n      );\n      return lines.join('\\n');\n    }\n  }\n\n  /**\n   * Extends parent method to hook cell magics overrides.\n   */\n  prepareCodeBlock(\n    block: Document.ICodeBlockOptions,\n    editorShift: CodeEditor.IPosition = { line: 0, column: 0 }\n  ) {\n    let lines: Array<string>;\n    let skipInspect: Array<Array<VirtualDocumentBase.idPath>>;\n\n    let { cellCodeKept, foreignDocumentsMap } = this.extractForeignCode(\n      block,\n      editorShift\n    );\n    const cellCode = cellCodeKept;\n\n    // cell magics are replaced if requested and matched\n    const cellOverride = this.cellMagicsOverrides.overrideFor(cellCode);\n    if (cellOverride != null) {\n      lines = cellOverride.split('\\n');\n      skipInspect = lines.map(_line => [this.idPath]);\n    } else {\n      // otherwise, we replace line magics - if any\n      let result = this.lineMagicsOverrides.replaceAll(cellCode.split('\\n'));\n      lines = result.lines;\n      skipInspect = result.skipInspect.map(skip => (skip ? [this.idPath] : []));\n    }\n\n    return { lines, foreignDocumentsMap, skipInspect };\n  }\n\n  appendCodeBlock(\n    block: Document.ICodeBlockOptions,\n    editorShift: CodeEditor.IPosition = { line: 0, column: 0 },\n    virtualShift?: CodeEditor.IPosition\n  ): void {\n    let cellCode = block.value;\n    let ceEditor = block.ceEditor;\n\n    if (this.isDisposed) {\n      console.warn('Cannot append code block: document disposed');\n      return;\n    }\n    let sourceCellLines = cellCode.split('\\n');\n    let { lines, foreignDocumentsMap, skipInspect } = this.prepareCodeBlock(\n      block,\n      editorShift\n    );\n\n    for (let i = 0; i < lines.length; i++) {\n      this.virtualLines.set(this.lastVirtualLine + i, {\n        skipInspect: skipInspect[i],\n        editor: ceEditor,\n        // TODO this is incorrect, wont work if something was extracted\n        sourceLine: this.lastSourceLine + i\n      });\n    }\n    for (let i = 0; i < sourceCellLines.length; i++) {\n      this.sourceLines.set(this.lastSourceLine + i, {\n        editorLine: i,\n        editorShift: {\n          line: editorShift.line - (virtualShift?.line || 0),\n          column: i === 0 ? editorShift.column - (virtualShift?.column || 0) : 0\n        },\n        // TODO: move those to a new abstraction layer (DocumentBlock class)\n        editor: ceEditor,\n        foreignDocumentsMap,\n        // TODO this is incorrect, wont work if something was extracted\n        virtualLine: this.lastVirtualLine + i\n      });\n    }\n\n    this.lastVirtualLine += lines.length;\n\n    // one empty line is necessary to separate code blocks, next 'n' lines are to silence linters;\n    // the final cell does not get the additional lines (thanks to the use of join, see below)\n\n    this.lineBlocks.push(lines.join('\\n') + '\\n');\n\n    // adding the virtual lines for the blank lines\n    for (let i = 0; i < this.blankLinesBetweenCells; i++) {\n      this.virtualLines.set(this.lastVirtualLine + i, {\n        skipInspect: [this.idPath],\n        editor: ceEditor,\n        sourceLine: null\n      });\n    }\n\n    this.lastVirtualLine += this.blankLinesBetweenCells;\n    this.lastSourceLine += sourceCellLines.length;\n  }\n\n  /**\n   * Close all expired documents.\n   */\n  closeExpiredDocuments(): void {\n    // TODO: remove once https://github.com/jupyterlab/jupyterlab/pull/15105 is in\n    const usedDocuments = new Set<VirtualDocument>();\n    for (const line of this.sourceLines.values()) {\n      for (const block of line.foreignDocumentsMap.values()) {\n        usedDocuments.add(block.virtualDocument as VirtualDocument);\n      }\n    }\n\n    const documentIDs = new Map<VirtualDocument, string[]>();\n    for (const [id, document] of (\n      this.foreignDocuments as Map<string, VirtualDocument>\n    ).entries()) {\n      const ids = documentIDs.get(document);\n      if (typeof ids !== 'undefined') {\n        documentIDs.set(document, [...ids, id]);\n      }\n      documentIDs.set(document, [id]);\n    }\n    const allDocuments = new Set<VirtualDocument>(documentIDs.keys());\n    const unusedVirtualDocuments = new Set(\n      [...allDocuments].filter(x => !usedDocuments.has(x))\n    );\n\n    for (let document of unusedVirtualDocuments.values()) {\n      document.remainingLifetime -= 1;\n      if (document.remainingLifetime <= 0) {\n        document.dispose();\n        const ids = documentIDs.get(document)!;\n        for (const id of ids) {\n          this.foreignDocuments.delete(id);\n        }\n      }\n    }\n  }\n\n  /**\n   * @experimental\n   */\n  transformVirtualToRoot(position: IVirtualPosition): IRootPosition | null {\n    let editor = this.virtualLines.get(position.line)!.editor;\n    let editorPosition = this.transformVirtualToEditor(position);\n    // only root holds the full editor mapping\n    return this.root.transformFromEditorToRoot(editor, editorPosition!);\n  }\n\n  /**\n   * @experimental\n   */\n  getForeignDocuments(editorAccessor: Document.IEditor): ForeignDocumentsMap[] {\n    let maps = new Set<ForeignDocumentsMap>();\n    for (let line of this.sourceLines.values()) {\n      if (line.editor === editorAccessor) {\n        maps.add(line.foreignDocumentsMap);\n      }\n    }\n    return [...maps.values()];\n  }\n\n  /**\n   * Get the foreign document that can be opened with the input extractor.\n   */\n  private _chooseForeignDocument(\n    extractor: IForeignCodeExtractor\n  ): VirtualDocumentBase {\n    let foreignDocument: VirtualDocumentBase;\n    // if not standalone, try to append to existing document\n    let foreignExists = this.foreignDocuments.has(extractor.language);\n    if (!extractor.standalone && foreignExists) {\n      foreignDocument = this.foreignDocuments.get(extractor.language)!;\n    } else {\n      // if standalone, try to re-use existing connection to the server\n      let unusedStandalone = this.unusedStandaloneDocuments.get(\n        extractor.language\n      );\n      if (extractor.standalone && unusedStandalone.length > 0) {\n        foreignDocument = unusedStandalone.pop()!;\n        this.unusedDocuments.delete(foreignDocument);\n      } else {\n        // if (previous document does not exists) or (extractor produces standalone documents\n        // and no old standalone document could be reused): create a new document\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        foreignDocument = this.openForeign(\n          extractor.language,\n          extractor.standalone,\n          extractor.fileExtension\n        );\n      }\n    }\n    return foreignDocument;\n  }\n}\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { IDocumentWidget } from '@jupyterlab/docregistry';\nimport {\n  FileEditorAdapter as UpstreamFileEditorAdapter,\n  FileEditor,\n  IFileEditorAdapterOptions,\n  IEditorTracker\n} from '@jupyterlab/fileeditor';\nimport {\n  ILSPCodeExtractorsManager,\n  ILSPFeatureManager,\n  ILSPDocumentConnectionManager\n} from '@jupyterlab/lsp';\n\nimport { ILSPCodeOverridesManager } from '../overrides/tokens';\nimport { VirtualDocument } from '../virtual/document';\n\ninterface IAdapterOptions extends IFileEditorAdapterOptions {\n  codeOverridesManager: ILSPCodeOverridesManager;\n}\n\nexport class FileEditorAdapter extends UpstreamFileEditorAdapter {\n  constructor(\n    public editorWidget: IDocumentWidget<FileEditor>,\n    protected options: IAdapterOptions\n  ) {\n    super(editorWidget, options);\n  }\n\n  /**\n   * Generate the virtual document associated with the document.\n   */\n  createVirtualDocument(): VirtualDocument {\n    return new VirtualDocument({\n      language: this.language,\n      foreignCodeExtractors: this.options.foreignCodeExtractorsManager,\n      path: this.documentPath,\n      fileExtension: this.languageFileExtension,\n      // notebooks are continuous, each cell is dependent on the previous one\n      standalone: true,\n      // notebooks are not supported by LSP servers\n      hasLspSupportedFile: true,\n      overridesRegistry: this.options.codeOverridesManager.registry\n    });\n  }\n}\n\n/**\n * Activate the language server for file editor.\n */\nfunction activateFileEditorLanguageServer(\n  app: JupyterFrontEnd,\n  editors: IEditorTracker,\n  connectionManager: ILSPDocumentConnectionManager,\n  featureManager: ILSPFeatureManager,\n  extractorManager: ILSPCodeExtractorsManager,\n  codeOverridesManager: ILSPCodeOverridesManager\n): void {\n  editors.widgetAdded.connect(async (_, editor) => {\n    const adapter = new FileEditorAdapter(editor, {\n      connectionManager,\n      featureManager,\n      foreignCodeExtractorsManager: extractorManager,\n      docRegistry: app.docRegistry,\n      codeOverridesManager\n    });\n    connectionManager.registerAdapter(editor.context.path, adapter);\n  });\n}\n\nexport const FILEEDITOR_ADAPTER_PLUGIN: JupyterFrontEndPlugin<void> = {\n  id: '@jupyter-lsp/fileeditor-adapter',\n  description: 'Adds language server capability to the notebooks.',\n  requires: [\n    IEditorTracker,\n    ILSPDocumentConnectionManager,\n    ILSPFeatureManager,\n    ILSPCodeExtractorsManager,\n    ILSPCodeOverridesManager\n  ],\n  activate: activateFileEditorLanguageServer,\n  autoStart: true\n};\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport {\n  IAdapterOptions as IUpstreamIAdapterOptions,\n  ILSPCodeExtractorsManager,\n  ILSPFeatureManager,\n  ILSPDocumentConnectionManager,\n  Document\n} from '@jupyterlab/lsp';\nimport {\n  NotebookAdapter as UpstreamNotebookAdapter,\n  INotebookTracker,\n  NotebookPanel\n} from '@jupyterlab/notebook';\n\nimport { ILSPCodeOverridesManager } from '../overrides/tokens';\nimport { VirtualDocument } from '../virtual/document';\n\ninterface IAdapterOptions extends IUpstreamIAdapterOptions {\n  codeOverridesManager: ILSPCodeOverridesManager;\n}\n\nexport class NotebookAdapter extends UpstreamNotebookAdapter {\n  constructor(\n    public editorWidget: NotebookPanel,\n    protected options: IAdapterOptions\n  ) {\n    super(editorWidget, options);\n  }\n\n  /**\n   * Generate the virtual document associated with the document.\n   */\n  createVirtualDocument(): VirtualDocument {\n    return new VirtualDocument({\n      language: this.language,\n      foreignCodeExtractors: this.options.foreignCodeExtractorsManager,\n      path: this.documentPath,\n      fileExtension: this.languageFileExtension,\n      // notebooks are continuous, each cell is dependent on the previous one\n      standalone: false,\n      // notebooks are not supported by LSP servers\n      hasLspSupportedFile: false,\n      overridesRegistry: this.options.codeOverridesManager.registry\n    });\n  }\n\n  protected async onForeignDocumentOpened(\n    virtualDocument: VirtualDocument,\n    context: Document.IForeignContext\n  ): Promise<void> {\n    /*\n    Opening a standalone foreign document can result in an infinite loop,\n    as a new connection gets opened for these, and once that is ready\n    `updateDocuments()` gets called.\n\n    To avoid the problem, `updateDocuments()` gets suppressed for standalone\n    documents. It does not affect non-standalone documents, because no new\n    connection gets opened for these.\n\n    https://github.com/jupyter-lsp/jupyterlab-lsp/issues/959\n    */\n    try {\n      this._blockUpdates = true;\n      await super.onForeignDocumentOpened(virtualDocument, context);\n    } finally {\n      this._blockUpdates = false;\n    }\n  }\n\n  updateDocuments(): Promise<void> {\n    if (this._blockUpdates) {\n      return Promise.resolve();\n    }\n    return super.updateDocuments();\n  }\n  private _blockUpdates = false;\n}\n\n/**\n * Activate the language server for notebook.\n */\nfunction activateNotebookLanguageServer(\n  app: JupyterFrontEnd,\n  notebooks: INotebookTracker,\n  connectionManager: ILSPDocumentConnectionManager,\n  featureManager: ILSPFeatureManager,\n  codeExtractorManager: ILSPCodeExtractorsManager,\n  codeOverridesManager: ILSPCodeOverridesManager\n): void {\n  notebooks.widgetAdded.connect(async (_, notebook) => {\n    const adapter = new NotebookAdapter(notebook, {\n      connectionManager,\n      featureManager,\n      foreignCodeExtractorsManager: codeExtractorManager,\n      codeOverridesManager\n    });\n    connectionManager.registerAdapter(notebook.context.path, adapter);\n  });\n}\n\nexport const NOTEBOOK_ADAPTER_PLUGIN: JupyterFrontEndPlugin<void> = {\n  id: '@jupyter-lsp/notebook-adapter',\n  description: 'Adds language server capability to the notebooks.',\n  requires: [\n    INotebookTracker,\n    ILSPDocumentConnectionManager,\n    ILSPFeatureManager,\n    ILSPCodeExtractorsManager,\n    ILSPCodeOverridesManager\n  ],\n  activate: activateNotebookLanguageServer,\n  autoStart: true\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./statusbar.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./statusbar.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nfunction externalLink(url: string, label: string) {\n  return (\n    <a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"lsp-external-link\"\n    >\n      {label}\n    </a>\n  );\n}\n\nconst migrationGuideUrl =\n  'https://jupyter-server.readthedocs.io/en/latest/operators/migrate-from-nbserver.html';\nconst jupyterHubMigrationUrl =\n  'https://github.com/jupyterhub/jupyterhub/pull/3329/files';\n\nexport const SERVER_EXTENSION_404 = (\n  <div>\n    <p>\n      It appears that the required Jupyter server extension (\n      <code>jupyter-lsp</code>) is not installed (or not enabled) in this\n      environment.\n    </p>\n    <h3>What are the likely reasons?</h3>\n    <ul>\n      <li>\n        It might be that you just installed it and need to restart JupyterLab to\n        make it available on startup.\n      </li>\n      <li>\n        Alternatively, you may be using an older <code>notebook</code> server\n        instead of the new <code>jupyter_server</code>; please refer to the{' '}\n        {externalLink(migrationGuideUrl, 'migration guide')} or if you are a\n        JupyterHub user please ensure that you start the JupyterLab using{' '}\n        <code>jupyter_server</code> and not the old <code>notebook</code>, as\n        documented in{' '}\n        {externalLink(jupyterHubMigrationUrl, 'this pull request')}.\n      </li>\n      <li>\n        There may be schema errors or language server errors preventing the\n        extension from loading - please check the logs of JupyterLab (in the\n        console where you execute <code>jupyter lab</code>\n      </li>\n    </ul>\n    <h3>How do I check if the extension is installed?</h3>\n    <p>\n      Please ensure that <code>jupyter server extension list</code> includes\n      jupyter-lsp and that it is enabled. If it is enabled please try to restart\n      JupyterLab. If the server extension is installed but not enabled and all\n      other suggestions listed above failed try the following:\n      <code>jupyter server extension enable --user --py jupyter_lsp</code>\n    </p>\n  </div>\n);\n","import { LabIcon } from '@jupyterlab/ui-components';\n\nimport codeCheckSvg from '../../style/icons/code-check.svg';\nimport codeClock from '../../style/icons/code-clock.svg';\nimport codeWarning from '../../style/icons/code-warning.svg';\n\nexport const codeWarningIcon = new LabIcon({\n  name: 'lsp:codeWarning',\n  svgstr: codeWarning\n});\nexport const codeClockIcon = new LabIcon({\n  name: 'lsp:codeClock',\n  svgstr: codeClock\n});\n\nexport const codeCheckIcon = new LabIcon({\n  name: 'lsp:codeCheck',\n  svgstr: codeCheckSvg\n});\n","import { IDocumentWidget } from '@jupyterlab/docregistry';\nimport { VirtualDocument, WidgetLSPAdapter, Document } from '@jupyterlab/lsp';\nimport { nullTranslator, TranslationBundle } from '@jupyterlab/translation';\nimport React from 'react';\n\nimport { TLanguageServerSpec } from '../tokens';\n\nexport function getBreadcrumbs(\n  document: VirtualDocument,\n  adapter: WidgetLSPAdapter<IDocumentWidget>,\n  trans?: TranslationBundle,\n  collapse = true\n): JSX.Element[] {\n  if (!trans) {\n    trans = nullTranslator.load('');\n  }\n  return document.ancestry.map((document: VirtualDocument) => {\n    if (!document.parent) {\n      let path = document.path;\n      if (\n        !document.hasLspSupportedFile &&\n        document.fileExtension &&\n        path.endsWith(document.fileExtension)\n      ) {\n        path = path.slice(0, -document.fileExtension.length - 1);\n      }\n      const fullPath = path;\n      if (collapse) {\n        let parts = path.split('/');\n        if (parts.length > 2) {\n          path = parts[0] + '/.../' + parts[parts.length - 1];\n        }\n      }\n      return (\n        <span key={document.uri} title={fullPath}>\n          {path}\n        </span>\n      );\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const virtualLines = document.virtualLines;\n\n    if (!virtualLines.size) {\n      return <span key={document.uri}>Empty document</span>;\n    }\n    try {\n      if (adapter.hasMultipleEditors) {\n        let firstLine = virtualLines.get(0)!;\n        let lastLine = virtualLines.get(document.lastVirtualLine - 1)!;\n\n        let firstCell = adapter.getEditorIndex(firstLine.editor);\n        let lastCell = adapter.getEditorIndex(lastLine.editor);\n\n        let cellLocator =\n          firstCell === lastCell\n            ? trans!.__('cell %1', firstCell + 1)\n            : trans!.__('cells: %1-%2', firstCell + 1, lastCell + 1);\n\n        return (\n          <span key={document.uri}>\n            {document.language} ({cellLocator})\n          </span>\n        );\n      }\n    } catch (e) {\n      console.warn('LSP: could not display document cell location', e);\n    }\n    return <span key={document.uri}>{document.language}</span>;\n  });\n}\n\nasync function focusEditor(accessor: Document.IEditor) {\n  if (!accessor) {\n    return;\n  }\n  await accessor.reveal();\n  const editor = accessor.getEditor();\n  editor!.focus();\n}\n\nexport function DocumentLocator(props: {\n  document: VirtualDocument;\n  adapter: WidgetLSPAdapter<any>;\n  trans?: TranslationBundle;\n}) {\n  let { document, adapter } = props;\n  let target: Document.IEditor | null = null;\n  if (adapter.hasMultipleEditors) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    let firstLine = document.virtualLines.get(0);\n    if (firstLine) {\n      target = firstLine.editor;\n    } else {\n      console.warn('Could not get first line of ', document);\n    }\n  }\n  let breadcrumbs = getBreadcrumbs(document, adapter, props.trans);\n  return (\n    <div\n      className={'lsp-document-locator'}\n      onClick={() => (target ? focusEditor(target) : null)}\n    >\n      {breadcrumbs}\n    </div>\n  );\n}\n\nexport function ServerLinksList(props: { specification: TLanguageServerSpec }) {\n  return (\n    <ul className={'lsp-server-links-list'}>\n      {Object.entries(props.specification?.urls || {}).map(([name, url]) => (\n        <li key={props.specification.serverId + '-url-' + name}>\n          {name}:{' '}\n          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n            {url}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n// Based on the @jupyterlab/codemirror-extension statusbar\n\nimport { JupyterFrontEnd } from '@jupyterlab/application';\nimport {\n  VDomModel,\n  VDomRenderer,\n  Dialog,\n  showDialog\n} from '@jupyterlab/apputils';\nimport { DocumentRegistry, IDocumentWidget } from '@jupyterlab/docregistry';\nimport {\n  ILSPConnection,\n  collectDocuments,\n  ILSPDocumentConnectionManager,\n  VirtualDocument,\n  WidgetLSPAdapter,\n  ILanguageServerManager\n} from '@jupyterlab/lsp';\nimport { INotebookModel, NotebookPanel } from '@jupyterlab/notebook';\nimport { GroupItem, Popup, TextItem, showPopup } from '@jupyterlab/statusbar';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport {\n  LabIcon,\n  caretDownIcon,\n  caretUpIcon,\n  circleEmptyIcon,\n  circleIcon,\n  stopIcon\n} from '@jupyterlab/ui-components';\nimport React from 'react';\n\nimport '../../style/statusbar.css';\nimport * as SCHEMA from '../_schema';\nimport { SERVER_EXTENSION_404 } from '../errors';\nimport { TSessionMap, TLanguageServerId, TSpecsMap } from '../tokens';\n\nimport { codeCheckIcon, codeClockIcon, codeWarningIcon } from './icons';\nimport { DocumentLocator, ServerLinksList } from './utils';\n\nimport okButton = Dialog.okButton;\n\ninterface IServerStatusProps {\n  server: SCHEMA.LanguageServerSession;\n}\n\nfunction ServerStatus(props: IServerStatusProps) {\n  let list = props.server.spec.languages!.map((language, i) => (\n    <li key={i}>{language}</li>\n  ));\n  return (\n    <div className={'lsp-server-status'}>\n      <h5>{props.server.spec.display_name}</h5>\n      <ul>{list}</ul>\n    </div>\n  );\n}\n\nexport interface IListProps {\n  /**\n   * A title to display.\n   */\n  title: string;\n  list: any[];\n  /**\n   * By default the list will be expanded; to change the initial state to collapsed, set to true.\n   */\n  startCollapsed?: boolean;\n}\n\nexport interface ICollapsibleListStates {\n  isCollapsed: boolean;\n}\n\nclass CollapsibleList extends React.Component<\n  IListProps,\n  ICollapsibleListStates\n> {\n  constructor(props: IListProps) {\n    super(props);\n    this.state = { isCollapsed: props.startCollapsed || false };\n  }\n\n  handleClick = () => {\n    this.setState(state => ({\n      isCollapsed: !state.isCollapsed\n    }));\n  };\n\n  render() {\n    const collapseExpandIcon = !this.state.isCollapsed\n      ? caretUpIcon\n      : caretDownIcon;\n    return (\n      <div\n        className={\n          'lsp-collapsible-list ' +\n          (this.state.isCollapsed ? 'lsp-collapsed' : '')\n        }\n      >\n        <h4 onClick={this.handleClick}>\n          <collapseExpandIcon.react tag=\"span\" className=\"lsp-caret-icon\" />\n          {this.props.title}: {this.props.list.length}\n        </h4>\n        <div>{this.props.list}</div>\n      </div>\n    );\n  }\n}\n\ninterface IHelpButtonProps {\n  language: string;\n  servers: TSpecsMap;\n  trans: TranslationBundle;\n}\n\ninterface ILanguageServerInfo {\n  serverId: TLanguageServerId;\n  specs: SCHEMA.LanguageServerSpec;\n  trans: TranslationBundle;\n}\n\nclass LanguageServerInfo extends React.Component<ILanguageServerInfo, any> {\n  render() {\n    const specification = this.props.specs;\n    const trans = this.props.trans;\n    return (\n      <div>\n        <h3>{specification.display_name}</h3>\n        <div>\n          <ServerLinksList specification={specification} />\n          <h4>{trans.__('Troubleshooting')}</h4>\n          <p className={'lsp-troubleshoot-section'}>\n            {specification.troubleshoot\n              ? specification.troubleshoot\n              : trans.__(\n                  'In case of issues with installation feel welcome to ask a question on GitHub.'\n                )}\n          </p>\n          <h4>{trans.__('Installation')}</h4>\n          <ul>\n            {specification?.install\n              ? Object.entries(specification?.install || {}).map(\n                  ([name, command]) => (\n                    <li key={this.props.serverId + '-install-' + name}>\n                      {name}: <code>{command}</code>\n                    </li>\n                  )\n                )\n              : trans.__(\n                  'No installation instructions were provided with this specification.'\n                )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass HelpButton extends React.Component<IHelpButtonProps, any> {\n  handleClick = () => {\n    const trans = this.props.trans;\n\n    showDialog({\n      title: trans.__(\n        'No language server for %1 detected',\n        this.props.language\n      ),\n      body: (\n        <div>\n          {this.props.servers.size ? (\n            <div>\n              <p>\n                {trans._n(\n                  'There is %1 language server you can easily install that supports %2.',\n                  'There are %1 language servers you can easily install that supports %2.',\n                  this.props.servers.size,\n                  this.props.language\n                )}\n              </p>\n              {[...this.props.servers.entries()].map(([key, specification]) => (\n                <LanguageServerInfo\n                  specs={specification}\n                  serverId={key}\n                  key={key}\n                  trans={trans}\n                />\n              ))}\n            </div>\n          ) : (\n            <div>\n              <p>\n                {trans.__(\n                  'We do not have an auto-detection ready for a language servers supporting %1 yet.',\n                  this.props.language\n                )}\n              </p>\n              <p>\n                {trans.__(\n                  'You may contribute a specification for auto-detection as described in our '\n                )}{' '}\n                <a\n                  href={\n                    'https://jupyterlab-lsp.readthedocs.io/en/latest/Contributing.html#specs'\n                  }\n                >\n                  {trans.__('documentation')}\n                </a>\n              </p>\n            </div>\n          )}\n        </div>\n      ),\n      buttons: [okButton()]\n    }).catch(console.warn);\n  };\n\n  render() {\n    return (\n      <button\n        type={'button'}\n        className={'jp-Button lsp-help-button'}\n        onClick={this.handleClick}\n      >\n        ?\n      </button>\n    );\n  }\n}\n\nclass LSPPopup extends VDomRenderer<LSPStatus.Model> {\n  constructor(model: LSPStatus.Model) {\n    super(model);\n    this.addClass('lsp-popover');\n  }\n  render() {\n    if (!this.model?.connectionManager) {\n      return null;\n    }\n    const serversAvailable = this.model.serversAvailableNotInUse.map(\n      (session, i) => <ServerStatus key={i} server={session} />\n    );\n\n    let runningServers = new Array<any>();\n    let key = -1;\n    for (let [\n      session,\n      documentsByLanguage\n    ] of this.model.documentsByServer.entries()) {\n      key += 1;\n      let documentsHtml = new Array<any>();\n      for (let [language, documents] of documentsByLanguage) {\n        // TODO: stop button\n        // TODO: add a config buttons next to the language header\n        let list = documents.map((document, i) => {\n          let connection = this.model.connectionManager.connections.get(\n            document.uri\n          );\n\n          let status = '';\n          if (connection?.isInitialized) {\n            status = 'initialized';\n          } else if (connection?.isConnected) {\n            status = 'connected';\n          } else {\n            status = 'not connected';\n          }\n\n          const icon = status === 'initialized' ? circleIcon : circleEmptyIcon;\n\n          return (\n            <li key={i}>\n              <DocumentLocator\n                document={document}\n                adapter={this.model.adapter!}\n              />\n              <span className={'lsp-document-status'}>\n                {this.model.trans.__(status)}\n                <icon.react\n                  tag=\"span\"\n                  className=\"lsp-document-status-icon\"\n                  elementSize={'small'}\n                />\n              </span>\n            </li>\n          );\n        });\n\n        documentsHtml.push(\n          <div key={key} className={'lsp-documents-by-language'}>\n            <h5>\n              {language}{' '}\n              <span className={'lsp-language-server-name'}>\n                ({session.spec.display_name})\n              </span>\n            </h5>\n            <ul>{list}</ul>\n          </div>\n        );\n      }\n\n      runningServers.push(<div key={key}>{documentsHtml}</div>);\n    }\n\n    const missingLanguages = this.model.missingLanguages.map((language, i) => {\n      const specsForMissing = this.model.languageServerManager.getMatchingSpecs(\n        { language }\n      );\n      return (\n        <div key={i} className={'lsp-missing-server'}>\n          {language}\n          {specsForMissing.size ? (\n            <HelpButton\n              language={language}\n              servers={specsForMissing}\n              trans={this.model.trans}\n            />\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    });\n    const trans = this.model.trans;\n    return (\n      <div className={'lsp-popover-content'}>\n        <div className={'lsp-servers-menu'}>\n          <h3 className={'lsp-servers-title'}>{trans.__('LSP servers')}</h3>\n          <div className={'lsp-servers-lists'}>\n            {serversAvailable.length ? (\n              <CollapsibleList\n                key={'available'}\n                title={trans.__('Available')}\n                list={serversAvailable}\n                startCollapsed={true}\n              />\n            ) : (\n              ''\n            )}\n            {runningServers.length ? (\n              <CollapsibleList\n                key={'running'}\n                title={trans.__('Running')}\n                list={runningServers}\n              />\n            ) : (\n              ''\n            )}\n            {missingLanguages.length ? (\n              <CollapsibleList\n                key={'missing'}\n                title={trans.__('Missing')}\n                list={missingLanguages}\n              />\n            ) : (\n              ''\n            )}\n          </div>\n        </div>\n        <div className={'lsp-popover-status'}>\n          {trans.__('Documentation:')}{' '}\n          <a\n            href={\n              'https://jupyterlab-lsp.readthedocs.io/en/latest/Language%20Servers.html'\n            }\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {trans.__('Language Servers')}\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * StatusBar item.\n */\nexport class LSPStatus extends VDomRenderer<LSPStatus.Model> {\n  protected _popup: Popup | null = null;\n  private trans: TranslationBundle;\n  /**\n   * Construct a new VDomRenderer for the status item.\n   */\n  constructor(\n    protected displayText: boolean = true,\n    shell: JupyterFrontEnd.IShell,\n    trans: TranslationBundle\n  ) {\n    super(new LSPStatus.Model(shell, trans));\n    this.addClass('jp-mod-highlighted');\n    this.addClass('lsp-statusbar-item');\n    this.trans = trans;\n    this.title.caption = this.trans.__('LSP status');\n  }\n\n  /**\n   * Render the status item.\n   */\n  render() {\n    const { model } = this;\n\n    if (model == null) {\n      return null;\n    }\n\n    return (\n      <GroupItem\n        spacing={this.displayText ? 2 : 0}\n        title={model.longMessage}\n        onClick={this.handleClick}\n        className={'lsp-status-group'}\n      >\n        <model.statusIcon.react\n          top={'2px'}\n          stylesheet={'statusBar'}\n          title={this.trans.__('LSP Code Intelligence')}\n        />\n        {this.displayText ? (\n          <TextItem\n            className={'lsp-status-message'}\n            source={model.shortMessage}\n          />\n        ) : (\n          <></>\n        )}\n      </GroupItem>\n    );\n  }\n\n  handleClick = () => {\n    if (this._popup) {\n      this._popup.dispose();\n    }\n    if (this.model.status.status == 'noServerExtension') {\n      showDialog({\n        title: this.trans.__('LSP server extension not found'),\n        body: SERVER_EXTENSION_404,\n        buttons: [okButton()]\n      }).catch(console.warn);\n    } else {\n      this._popup = showPopup({\n        body: new LSPPopup(this.model),\n        anchor: this,\n        align: 'left',\n        hasDynamicSize: true\n      });\n    }\n  };\n}\n\nexport class StatusButtonExtension\n  implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n{\n  constructor(\n    private options: {\n      languageServerManager: ILanguageServerManager;\n      connectionManager: ILSPDocumentConnectionManager;\n      shell: JupyterFrontEnd.IShell;\n      translatorBundle: TranslationBundle;\n    }\n  ) {}\n\n  /**\n   * For statusbar registration and for internal use.\n   */\n  createItem(displayText: boolean = true): LSPStatus {\n    const statusBarItem = new LSPStatus(\n      displayText,\n      this.options.shell,\n      this.options.translatorBundle\n    );\n    statusBarItem.model.languageServerManager =\n      this.options.languageServerManager;\n    statusBarItem.model.connectionManager = this.options.connectionManager;\n    return statusBarItem;\n  }\n\n  /**\n   * For registration on notebook panels.\n   */\n  createNew(\n    panel: NotebookPanel,\n    context: DocumentRegistry.IContext<INotebookModel>\n  ): LSPStatus {\n    const item = this.createItem(false);\n    item.addClass('jp-ToolbarButton');\n    panel.toolbar.insertAfter('spacer', 'LSPStatus', item);\n\n    return item;\n  }\n}\n\ntype StatusCode =\n  | 'noServerExtension'\n  | 'waiting'\n  | 'initializing'\n  | 'initialized'\n  | 'connecting'\n  | 'initializedButSomeMissing';\n\nexport interface IStatus {\n  connectedDocuments: Set<VirtualDocument>;\n  initializedDocuments: Set<VirtualDocument>;\n  openConnections: Array<ILSPConnection>;\n  detectedDocuments: Set<VirtualDocument>;\n  status: StatusCode;\n}\n\nfunction collectLanguages(virtualDocument: VirtualDocument): Set<string> {\n  let documents = collectDocuments(virtualDocument);\n  return new Set(\n    [...documents].map(document => document.language.toLocaleLowerCase())\n  );\n}\n\ntype StatusMap = Record<StatusCode, string>;\ntype StatusIconClass = Record<StatusCode, string>;\n\nconst classByStatus: StatusIconClass = {\n  noServerExtension: 'error',\n  waiting: 'inactive',\n  initialized: 'ready',\n  initializing: 'preparing',\n  initializedButSomeMissing: 'ready',\n  connecting: 'preparing'\n};\n\nconst iconByStatus: Record<StatusCode, LabIcon> = {\n  noServerExtension: codeWarningIcon,\n  waiting: codeClockIcon,\n  initialized: codeCheckIcon,\n  initializing: codeClockIcon,\n  initializedButSomeMissing: codeWarningIcon,\n  connecting: codeClockIcon\n};\n\nexport namespace LSPStatus {\n  /**\n   * A VDomModel for the LSP of current file editor/notebook.\n   */\n  export class Model extends VDomModel {\n    languageServerManager: ILanguageServerManager;\n    trans: TranslationBundle;\n    private _connectionManager: ILSPDocumentConnectionManager;\n    private _shortMessageByStatus: StatusMap;\n\n    constructor(\n      private _shell: JupyterFrontEnd.IShell,\n      trans: TranslationBundle\n    ) {\n      super();\n      this.trans = trans;\n      this._shortMessageByStatus = {\n        noServerExtension: trans.__('Server extension missing'),\n        waiting: trans.__('Waiting…'),\n        initialized: trans.__('Fully initialized'),\n        initializedButSomeMissing: trans.__(\n          'Initialized (additional servers needed)'\n        ),\n        initializing: trans.__('Initializing…'),\n        connecting: trans.__('Connecting…')\n      };\n    }\n\n    get availableServers(): TSessionMap {\n      return this.languageServerManager.sessions;\n    }\n\n    get supportedLanguages(): Set<string> {\n      const languages = new Set<string>();\n      for (let server of this.availableServers.values()) {\n        for (let language of server.spec.languages!) {\n          languages.add(language.toLocaleLowerCase());\n        }\n      }\n      return languages;\n    }\n\n    private _isServerRunning(\n      id: TLanguageServerId,\n      server: SCHEMA.LanguageServerSession\n    ): boolean {\n      for (const language of this.detectedLanguages) {\n        const matchedServers = this.languageServerManager.getMatchingServers({\n          language\n        });\n        // TODO server.status === \"started\" ?\n        // TODO update once multiple servers are allowed\n        if (matchedServers.length && matchedServers[0] === id) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    get documentsByServer(): Map<\n      SCHEMA.LanguageServerSession,\n      Map<string, VirtualDocument[]>\n    > {\n      let data = new Map<\n        SCHEMA.LanguageServerSession,\n        Map<string, VirtualDocument[]>\n      >();\n      if (!this.adapter?.virtualDocument) {\n        return data;\n      }\n\n      let mainDocument = this.adapter.virtualDocument;\n      let documents = collectDocuments(mainDocument);\n\n      for (let document of documents.values()) {\n        let language = document.language.toLocaleLowerCase();\n        let serverIds =\n          this._connectionManager.languageServerManager.getMatchingServers({\n            language: document.language\n          });\n        if (serverIds.length === 0) {\n          continue;\n        }\n        // For now only use the server with the highest priority\n        let server = this.languageServerManager.sessions.get(serverIds[0])!;\n\n        if (!data.has(server)) {\n          data.set(server, new Map<string, VirtualDocument[]>());\n        }\n\n        let documentsMap = data.get(server)!;\n\n        if (!documentsMap.has(language)) {\n          documentsMap.set(language, new Array<VirtualDocument>());\n        }\n\n        let documents = documentsMap.get(language)!;\n        documents.push(document);\n      }\n      return data;\n    }\n\n    get serversAvailableNotInUse(): Array<SCHEMA.LanguageServerSession> {\n      return [...this.availableServers.entries()]\n        .filter(([id, server]) => !this._isServerRunning(id, server))\n        .map(([id, server]) => server);\n    }\n\n    get detectedLanguages(): Set<string> {\n      if (!this.adapter?.virtualDocument) {\n        return new Set<string>();\n      }\n\n      let document = this.adapter.virtualDocument;\n      return collectLanguages(document);\n    }\n\n    get missingLanguages(): Array<string> {\n      // TODO: false negative for r vs R?\n      return [...this.detectedLanguages].filter(\n        language => !this.supportedLanguages.has(language.toLocaleLowerCase())\n      );\n    }\n\n    get status(): IStatus {\n      let detectedDocuments: Map<string, VirtualDocument>;\n\n      if (!this.adapter?.virtualDocument) {\n        detectedDocuments = new Map();\n      } else {\n        let mainDocument = this.adapter.virtualDocument;\n        const allDocuments = this._connectionManager.documents;\n        // detected documents that are open in the current virtual editor\n        const detectedDocumentsSet = collectDocuments(mainDocument);\n        detectedDocuments = new Map(\n          [...allDocuments].filter(([id, doc]) => detectedDocumentsSet.has(doc))\n        );\n      }\n\n      let connectedDocuments = new Set<VirtualDocument>();\n      let initializedDocuments = new Set<VirtualDocument>();\n      let absentDocuments = new Set<VirtualDocument>();\n      // detected documents with LSP servers available\n      let documentsWithAvailableServers = new Set<VirtualDocument>();\n      // detected documents with LSP servers known\n      let documentsWithKnownServers = new Set<VirtualDocument>();\n\n      detectedDocuments.forEach((document, uri) => {\n        let connection = this._connectionManager.connections.get(uri);\n        let serverIds =\n          this._connectionManager.languageServerManager.getMatchingServers({\n            language: document.language\n          });\n\n        if (serverIds.length !== 0) {\n          documentsWithKnownServers.add(document);\n        }\n        if (!connection) {\n          absentDocuments.add(document);\n          return;\n        } else {\n          documentsWithAvailableServers.add(document);\n        }\n\n        if (connection.isConnected) {\n          connectedDocuments.add(document);\n        }\n        if (connection.isInitialized) {\n          initializedDocuments.add(document);\n        }\n      });\n\n      // there may be more open connections than documents if a document was recently closed\n      // and the grace period has not passed yet\n      let openConnections = new Array<ILSPConnection>();\n      this._connectionManager.connections.forEach((connection, path) => {\n        if (connection.isConnected) {\n          openConnections.push(connection);\n        }\n      });\n\n      let status: StatusCode;\n      if (this.languageServerManager.statusCode === 404) {\n        status = 'noServerExtension';\n      } else if (detectedDocuments.size === 0) {\n        status = 'waiting';\n      } else if (initializedDocuments.size === detectedDocuments.size) {\n        status = 'initialized';\n      } else if (\n        initializedDocuments.size === documentsWithAvailableServers.size &&\n        detectedDocuments.size > documentsWithKnownServers.size\n      ) {\n        status = 'initializedButSomeMissing';\n      } else if (\n        connectedDocuments.size === documentsWithAvailableServers.size\n      ) {\n        status = 'initializing';\n      } else {\n        status = 'connecting';\n      }\n\n      return {\n        openConnections,\n        connectedDocuments,\n        initializedDocuments,\n        detectedDocuments: new Set([...detectedDocuments.values()]),\n        status\n      };\n    }\n\n    get statusIcon(): LabIcon {\n      if (!this.adapter) {\n        return stopIcon;\n      }\n      return iconByStatus[this.status.status].bindprops({\n        className: 'lsp-status-icon ' + classByStatus[this.status.status]\n      });\n    }\n\n    get shortMessage(): string {\n      if (!this.adapter) {\n        return this.trans.__('Not initialized');\n      }\n      return this._shortMessageByStatus[this.status.status];\n    }\n\n    get longMessage(): string {\n      if (!this.adapter) {\n        return this.trans.__('not initialized');\n      }\n      let status = this.status;\n      let msg = '';\n      if (status.status === 'waiting') {\n        msg = this.trans.__('Waiting for documents initialization...');\n      } else if (status.status === 'initialized') {\n        msg = this.trans._n(\n          'Fully connected & initialized (%2 virtual document)',\n          'Fully connected & initialized (%2 virtual document)',\n          status.detectedDocuments.size,\n          status.detectedDocuments.size\n        );\n      } else if (status.status === 'initializing') {\n        const uninitialized = new Set<VirtualDocument>(\n          status.detectedDocuments\n        );\n        for (let initialized of status.initializedDocuments.values()) {\n          uninitialized.delete(initialized);\n        }\n        // servers for n documents did not respond to the initialization request\n        msg = this.trans._np(\n          'pluralized',\n          'Fully connected, but %2/%3 virtual document stuck uninitialized: %4',\n          'Fully connected, but %2/%3 virtual documents stuck uninitialized: %4',\n          status.detectedDocuments.size,\n          uninitialized.size,\n          status.detectedDocuments.size,\n          [...uninitialized].map(document => document.idPath).join(', ')\n        );\n      } else {\n        const unconnected = new Set<VirtualDocument>(status.detectedDocuments);\n        for (let connected of status.connectedDocuments.values()) {\n          unconnected.delete(connected);\n        }\n\n        msg = this.trans._np(\n          'pluralized',\n          '%2/%3 virtual document connected (%4 connections; waiting for: %5)',\n          '%2/%3 virtual documents connected (%4 connections; waiting for: %5)',\n          status.detectedDocuments.size,\n          status.connectedDocuments.size,\n          status.detectedDocuments.size,\n          status.openConnections.length,\n          [...unconnected].map(document => document.idPath).join(', ')\n        );\n      }\n      return msg;\n    }\n\n    get adapter(): WidgetLSPAdapter<IDocumentWidget> | null {\n      const adapter = [...this.connectionManager.adapters.values()].find(\n        adapter => adapter.widget == this._shell.currentWidget\n      );\n      return adapter ?? null;\n    }\n\n    get connectionManager() {\n      return this._connectionManager;\n    }\n\n    /**\n     * Note: it is ever only set once, as connectionManager is a singleton.\n     */\n    set connectionManager(connectionManager) {\n      if (this._connectionManager != null) {\n        this._connectionManager.connected.disconnect(this._onChange);\n        this._connectionManager.initialized.connect(this._onChange);\n        this._connectionManager.disconnected.disconnect(this._onChange);\n        this._connectionManager.closed.disconnect(this._onChange);\n        this._connectionManager.documentsChanged.disconnect(this._onChange);\n      }\n\n      if (connectionManager != null) {\n        connectionManager.connected.connect(this._onChange);\n        connectionManager.initialized.connect(this._onChange);\n        connectionManager.disconnected.connect(this._onChange);\n        connectionManager.closed.connect(this._onChange);\n        connectionManager.documentsChanged.connect(this._onChange);\n      }\n\n      this._connectionManager = connectionManager;\n    }\n\n    private _onChange = () => {\n      this.stateChanged.emit(void 0);\n    };\n  }\n}\n","import type * as lsp from 'vscode-languageserver-protocol';\n\n/** Workaround to silence a bug in https://github.com/microsoft/vscode-languageserver-node/pull/720 */\nexport type ClientCapabilities = Omit<\n  lsp.ClientCapabilities,\n  'textDocument'\n> & { textDocument?: Omit<lsp.TextDocumentClientCapabilities, 'moniker'> };\n\nexport enum DiagnosticSeverity {\n  Error = 1,\n  Warning = 2,\n  Information = 3,\n  Hint = 4\n}\n\nexport enum DiagnosticTag {\n  Unnecessary = 1,\n  Deprecated = 2\n}\n\nexport enum CompletionItemTag {\n  Deprecated = 1\n}\n\nexport enum CompletionItemKind {\n  Text = 1,\n  Method = 2,\n  Function = 3,\n  Constructor = 4,\n  Field = 5,\n  Variable = 6,\n  Class = 7,\n  Interface = 8,\n  Module = 9,\n  Property = 10,\n  Unit = 11,\n  Value = 12,\n  Enum = 13,\n  Keyword = 14,\n  Snippet = 15,\n  Color = 16,\n  File = 17,\n  Reference = 18,\n  Folder = 19,\n  EnumMember = 20,\n  Constant = 21,\n  Struct = 22,\n  Event = 23,\n  Operator = 24,\n  TypeParameter = 25\n}\n\nexport enum DocumentHighlightKind {\n  Text = 1,\n  Read = 2,\n  Write = 3\n}\n\nexport enum CompletionTriggerKind {\n  Invoked = 1,\n  TriggerCharacter = 2,\n  TriggerForIncompleteCompletions = 3\n}\n\nexport enum AdditionalCompletionTriggerKinds {\n  AutoInvoked = 9999\n}\n\nexport type ExtendedCompletionTriggerKind =\n  | CompletionTriggerKind\n  | AdditionalCompletionTriggerKinds;\n\nexport type CompletionItemKindStrings = keyof typeof CompletionItemKind;\n\n/**\n * The language identifier for LSP, with the preferred identifier as defined in the documentation\n * see the table in https://microsoft.github.io/language-server-protocol/specification#textDocumentItem\n */\nexport enum Languages {\n  'abap' = 'ABAP',\n  'bat' = 'Windows Bat',\n  'bibtex' = 'BibTeX',\n  'clojure' = 'Clojure',\n  'coffeescript' = 'Coffeescript',\n  'c' = 'C',\n  'cpp' = 'C++',\n  'csharp' = 'C#',\n  'css' = 'CSS',\n  'diff' = 'Diff',\n  'dart' = 'Dart',\n  'dockerfile' = 'Dockerfile',\n  'elixir' = 'Elixir',\n  'erlang' = 'Erlang',\n  'fsharp' = 'F#',\n  'git-commit' = 'Git (commit)',\n  'git-rebase' = 'Git (rebase)',\n  'go' = 'Go',\n  'groovy' = 'Groovy',\n  'handlebars' = 'Handlebars',\n  'html' = 'HTML',\n  'ini' = 'Ini',\n  'java' = 'Java',\n  'javascript' = 'JavaScript',\n  'javascriptreact' = 'JavaScript React',\n  'json' = 'JSON',\n  'latex' = 'LaTeX',\n  'less' = 'Less',\n  'lua' = 'Lua',\n  'makefile' = 'Makefile',\n  'markdown' = 'Markdown',\n  'objective-c' = 'Objective-C',\n  'objective-cpp' = 'Objective-C++',\n  'perl' = 'Perl',\n  'perl6' = 'Perl 6',\n  'php' = 'PHP',\n  'powershell' = 'Powershell',\n  'jade' = 'Pug',\n  'python' = 'Python',\n  'r' = 'R',\n  'razor' = 'Razor (cshtml)',\n  'ruby' = 'Ruby',\n  'rust' = 'Rust',\n  'scss' = 'SCSS (syntax using curly brackets)',\n  'sass' = 'SCSS (indented syntax)',\n  'scala' = 'Scala',\n  'shaderlab' = 'ShaderLab',\n  'shellscript' = 'Shell Script (Bash)',\n  'sql' = 'SQL',\n  'swift' = 'Swift',\n  'typescript' = 'TypeScript',\n  'typescriptreact' = 'TypeScript React',\n  'tex' = 'TeX',\n  'vb' = 'Visual Basic',\n  'xml' = 'XML',\n  'xsl' = 'XSL',\n  'yaml' = 'YAML'\n}\n\nexport type RecommendedLanguageIdentifier = keyof typeof Languages;\n\n/**\n * Language identifier for the LSP server, allowing any string but preferring\n * the identifiers as recommended by the LSP documentation.\n */\nexport type LanguageIdentifier = RecommendedLanguageIdentifier | string;\n","import { IFeature, ILSPDocumentConnectionManager } from '@jupyterlab/lsp';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport * as lsProtocol from 'vscode-languageserver-protocol';\n\nexport interface IFeatureSettings<T> {\n  readonly composite: Required<T>;\n  readonly changed: Signal<IFeatureSettings<T>, void>;\n  readonly ready?: Promise<void>;\n\n  set(setting: keyof T, value: any): void;\n}\n\nexport namespace Feature {\n  export interface IOptions {\n    connectionManager: ILSPDocumentConnectionManager;\n  }\n}\n\nexport abstract class Feature implements IFeature {\n  abstract readonly id: string;\n  abstract readonly capabilities?: lsProtocol.ClientCapabilities;\n  protected connectionManager: ILSPDocumentConnectionManager;\n\n  constructor(options: Feature.IOptions) {\n    this.connectionManager = options.connectionManager;\n  }\n\n  //getConnection(): ILSPConnection {\n\n  //}\n}\n\nexport class FeatureSettings<T> implements IFeatureSettings<T> {\n  protected settings: ISettingRegistry.ISettings;\n  public changed: Signal<FeatureSettings<T>, void>;\n  private _ready = new PromiseDelegate<void>();\n\n  constructor(protected settingRegistry: ISettingRegistry, featureID: string) {\n    this.changed = new Signal(this);\n    if (!(featureID in settingRegistry.plugins)) {\n      this._ready.reject(\n        `${featureID} settings schema could not be found and was not loaded`\n      );\n    } else {\n      settingRegistry\n        .load(featureID)\n        .then(settings => {\n          this.settings = settings;\n          this._ready.resolve(void 0);\n          this.changed.emit();\n          settings.changed.connect(() => {\n            this.settings = settings;\n            this.changed.emit();\n          });\n        })\n        .catch(console.warn);\n    }\n  }\n\n  get ready(): Promise<void> {\n    return this._ready.promise;\n  }\n\n  get composite(): Required<T> {\n    return this.settings.composite as unknown as Required<T>;\n  }\n\n  set(setting: keyof T, value: any) {\n    this.settings.set(setting as string, value).catch(console.warn);\n  }\n}\n","import { CodeEditor } from '@jupyterlab/codeeditor';\nimport type {\n  ISourcePosition,\n  IVirtualPosition,\n  IRootPosition,\n  IPosition,\n  IEditorPosition,\n  WidgetLSPAdapter,\n  Document\n} from '@jupyterlab/lsp';\nimport type * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport { VirtualDocument } from './virtual/document';\n\nexport class PositionConverter {\n  static lsp_to_cm(position: lsProtocol.Position): IPosition {\n    return { line: position.line, ch: position.character };\n  }\n\n  static cm_to_lsp(position: IPosition): lsProtocol.Position {\n    return { line: position.line, character: position.ch };\n  }\n\n  static lsp_to_ce(position: lsProtocol.Position): CodeEditor.IPosition {\n    return { line: position.line, column: position.character };\n  }\n\n  static cm_to_ce(position: IPosition): CodeEditor.IPosition {\n    return { line: position.line, column: position.ch };\n  }\n\n  static ce_to_cm(position: CodeEditor.IPosition): IPosition {\n    return { line: position.line, ch: position.column };\n  }\n}\n\n/** TODO should it be wrapped into an object? Where should these live? */\n\nexport interface IEditorRange {\n  start: IEditorPosition;\n  end: IEditorPosition;\n  editor: CodeEditor.IEditor;\n}\n\nexport function documentAtRootPosition(\n  adapter: WidgetLSPAdapter<any>,\n  position: IRootPosition\n): VirtualDocument {\n  let rootAsSource = position as ISourcePosition;\n  if (!adapter.virtualDocument) {\n    throw Error('Virtual document of adapter disposed!');\n  }\n  if (adapter.virtualDocument.root !== adapter.virtualDocument) {\n    throw Error('Virtual document on adapter must be the root document');\n  }\n  return adapter.virtualDocument.documentAtSourcePosition(\n    rootAsSource\n  ) as VirtualDocument;\n}\n\nexport function editorAtRootPosition(\n  adapter: WidgetLSPAdapter<any>,\n  position: IRootPosition\n): Document.IEditor {\n  let rootAsSource = position as ISourcePosition;\n  if (!adapter.virtualDocument) {\n    throw Error('Virtual document of adapter disposed!');\n  }\n  if (adapter.virtualDocument.root !== adapter.virtualDocument) {\n    throw Error('Virtual document on adapter must be the root document');\n  }\n  return adapter.virtualDocument.getEditorAtSourceLine(rootAsSource);\n}\n\nexport function rootPositionToVirtualPosition(\n  adapter: WidgetLSPAdapter<any>,\n  position: IRootPosition\n): IVirtualPosition {\n  let rootAsSource = position as ISourcePosition;\n  if (!adapter.virtualDocument) {\n    throw Error('Virtual document of adapter disposed!');\n  }\n  if (adapter.virtualDocument.root !== adapter.virtualDocument) {\n    throw Error('Virtual document on adapter must be the root document');\n  }\n  return adapter.virtualDocument!.virtualPositionAtDocument(rootAsSource);\n}\n\nexport function rootPositionToEditorPosition(\n  adapter: WidgetLSPAdapter<any>,\n  position: IRootPosition\n): IEditorPosition {\n  let rootAsSource = position as ISourcePosition;\n  if (!adapter.virtualDocument) {\n    throw Error('Virtual document of adapter disposed!');\n  }\n  if (adapter.virtualDocument.root !== adapter.virtualDocument) {\n    throw Error('Virtual document on adapter must be the root document');\n  }\n  return adapter.virtualDocument.transformSourceToEditor(rootAsSource);\n}\n\nexport function editorPositionToRootPosition(\n  adapter: WidgetLSPAdapter<any>,\n  editor: Document.IEditor,\n  position: IEditorPosition\n): IRootPosition | null {\n  if (!adapter.virtualDocument) {\n    throw Error('Virtual document of adapter disposed!');\n  }\n  return adapter.virtualDocument.transformFromEditorToRoot(editor, position);\n}\n\nexport function rangeToEditorRange(\n  adapter: WidgetLSPAdapter<any>,\n  range: lsProtocol.Range,\n  editor: CodeEditor.IEditor | null,\n  virtualDocument: VirtualDocument\n): IEditorRange {\n  let start = PositionConverter.lsp_to_cm(range.start) as IVirtualPosition;\n  let end = PositionConverter.lsp_to_cm(range.end) as IVirtualPosition;\n\n  // because `openForeign()` does not use new this.constructor, we need to workaround it for now:\n  // const startInRoot = virtualDocument.transformVirtualToRoot(start);\n  // https://github.com/jupyterlab/jupyterlab/issues/15126\n  const startInRoot = VirtualDocument.prototype.transformVirtualToRoot.call(\n    virtualDocument,\n    start\n  );\n\n  if (!startInRoot) {\n    throw Error('Could not determine position in root');\n  }\n\n  if (editor == null) {\n    let editorAccessor = editorAtRootPosition(adapter, startInRoot);\n    const candidate = editorAccessor.getEditor();\n    if (!candidate) {\n      throw Error('Editor could not be accessed');\n    }\n    editor = candidate;\n  }\n\n  const document = documentAtRootPosition(adapter, startInRoot);\n\n  return {\n    start: document.transformVirtualToEditor(start)!,\n    end: document.transformVirtualToEditor(end)!,\n    editor: editor\n  };\n}\n","import {\n  ILSPCompletionThemeManager,\n  KernelKind\n} from '@jupyter-lsp/completion-theme';\nimport {\n  ContextCompleterProvider,\n  KernelCompleterProvider,\n  CompletionHandler,\n  ICompletionContext\n} from '@jupyterlab/completer';\nimport { IDocumentWidget } from '@jupyterlab/docregistry';\nimport {\n  ILSPDocumentConnectionManager,\n  IEditorPosition\n} from '@jupyterlab/lsp';\nimport { LabIcon } from '@jupyterlab/ui-components';\n\nimport { CodeCompletion as LSPCompletionSettings } from '../../_completion';\nimport {\n  editorPositionToRootPosition,\n  PositionConverter,\n  documentAtRootPosition\n} from '../../converter';\nimport { FeatureSettings } from '../../feature';\n\ninterface IOptions {\n  settings: FeatureSettings<LSPCompletionSettings>;\n  iconsThemeManager: ILSPCompletionThemeManager;\n  connectionManager: ILSPDocumentConnectionManager;\n}\n\nexport class EnhancedContextCompleterProvider extends ContextCompleterProvider {\n  readonly label = 'context';\n\n  constructor(protected options: IOptions) {\n    super();\n  }\n\n  async fetch(\n    request: CompletionHandler.IRequest,\n    context: ICompletionContext\n  ): Promise<CompletionHandler.ICompletionItemsReply> {\n    const result = await super.fetch(request, context);\n    result.items = result.items.map((item, order) => {\n      return {\n        ...item,\n        icon: this.iconFor(item.type ?? 'Text') ?? this.iconFor('Text'),\n        type: item.type === '<unknown>' ? undefined : (item.type as string),\n        sortText: String.fromCharCode(order),\n        source: this.label\n      };\n    });\n    return result;\n  }\n\n  protected iconFor(type: string): LabIcon | undefined {\n    const icon = this.options.iconsThemeManager.getIcon(type) as LabIcon | null;\n    return icon ? icon : undefined;\n  }\n}\n\nexport class EnhancedKernelCompleterProvider extends KernelCompleterProvider {\n  readonly label = 'kernel';\n\n  constructor(protected options: IOptions) {\n    super();\n  }\n\n  async fetch(\n    request: CompletionHandler.IRequest,\n    context: ICompletionContext\n  ): Promise<CompletionHandler.ICompletionItemsReply> {\n    const result = await super.fetch(request, context);\n    result.items = result.items.map((item, order) => {\n      return {\n        ...item,\n        icon: this.iconFor(item.type ?? KernelKind) ?? this.iconFor(KernelKind),\n        sortText: String.fromCharCode(order),\n        source: this.label\n      };\n    });\n    return result;\n  }\n\n  async isApplicable(context: ICompletionContext): Promise<boolean> {\n    // Note: this method logs errors instead of throwing to ensure we do not ever\n    // break the upstream kernel completer, even if there is an error elsewhere.\n    const upstream = await super.isApplicable(context);\n\n    if (upstream === false) {\n      return false;\n    }\n\n    const manager = this.options.connectionManager;\n    const widget = context.widget as IDocumentWidget;\n    const adapter = manager.adapters.get(widget.context.path);\n\n    if (!adapter) {\n      return upstream;\n    }\n\n    if (!context.editor) {\n      // TODO: why is editor optional in the first place?\n      console.error('No editor');\n      return upstream;\n    }\n    const editor = context.editor;\n\n    const editorPosition = PositionConverter.ce_to_cm(\n      editor.getCursorPosition()\n    ) as IEditorPosition;\n\n    const block = adapter.editors.find(\n      value => value.ceEditor.getEditor() == editor\n    );\n\n    if (!block) {\n      console.error('Could not get block with editor');\n      return upstream;\n    }\n    const rootPosition = editorPositionToRootPosition(\n      adapter,\n      block.ceEditor,\n      editorPosition\n    );\n\n    if (!rootPosition) {\n      console.error('Could not get root position');\n      return upstream;\n    }\n    const virtualDocument = documentAtRootPosition(adapter, rootPosition);\n    return virtualDocument === adapter.virtualDocument;\n  }\n\n  protected iconFor(type: string): LabIcon | undefined {\n    const icon = this.options.iconsThemeManager.getIcon(type) as LabIcon | null;\n    return icon ? icon : undefined;\n  }\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./console.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./console.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import '../../style/console.css';\nimport { JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { Signal } from '@lumino/signaling';\n\nimport {\n  LanguageServers as LSPSettings,\n  LoggingConsoleVerbosityLevel\n} from '../_plugin';\nimport { ILSPLogConsole, ILogConsoleCore, PLUGIN_ID } from '../tokens';\n\ninterface ILogConsoleImplementation extends ILogConsoleCore {\n  dispose(): void;\n  bindThis(): any;\n}\n\nfunction toString(args: any[]): string {\n  return args\n    .map(arg => {\n      let textual: string;\n      if (typeof arg === 'string') {\n        return arg;\n      }\n      try {\n        textual = JSON.stringify({ k: arg }).slice(5, -1);\n      } catch {\n        textual = '' + arg;\n      }\n      return '<span class=\"lsp-code\">' + textual + '</span>';\n    })\n    .join(' ');\n}\n\nclass FloatingConsole implements ILogConsoleImplementation {\n  // likely to be replaced by JupyterLab console: https://github.com/jupyterlab/jupyterlab/pull/6833#issuecomment-543016425\n  private readonly element: HTMLElement;\n\n  constructor(scope: string[] = ['LSP'], element: HTMLElement | null = null) {\n    if (element) {\n      this.element = element;\n    } else {\n      this.element = document.createElement('ul');\n      this.element.className = 'lsp-floating-console';\n      document.body.appendChild(this.element);\n    }\n  }\n\n  bindThis(): any {\n    return this;\n  }\n\n  dispose() {\n    this.element.remove();\n  }\n\n  append(text: string, kind = 'log') {\n    let entry = document.createElement('li');\n    entry.innerHTML = '<span class=\"lsp-kind\">' + kind + '</span>' + text;\n    this.element.appendChild(entry);\n    this.element.scrollTop = this.element.scrollHeight;\n  }\n\n  debug(...args: any[]) {\n    this.append(toString(args), 'debug');\n  }\n  log(...args: any[]) {\n    this.append(toString(args), 'log');\n  }\n  warn(...args: any[]) {\n    this.append(toString(args), 'warn');\n  }\n  error(...args: any[]) {\n    this.append(toString(args), 'error');\n  }\n}\n\n/**\n * Used both as a console implementation, and as a dummy ILSPLogConsole\n */\nexport class BrowserConsole\n  implements ILogConsoleImplementation, ILSPLogConsole\n{\n  debug = window.console.debug.bind(window.console);\n  log = window.console.log.bind(window.console);\n  warn = window.console.warn.bind(window.console);\n  error = window.console.error.bind(window.console);\n\n  dispose(): void {\n    return;\n  }\n  scope(scope: string): BrowserConsole {\n    return this;\n  }\n\n  bindThis(): any {\n    return window.console;\n  }\n}\n\nclass ConsoleWrapper implements ILSPLogConsole {\n  private readonly singleton: ConsoleSingleton;\n  private readonly breadcrumbs: string[];\n  private readonly _scope: string;\n\n  constructor(scope: string[] = ['LSP'], singleton: ConsoleSingleton) {\n    this.breadcrumbs = scope;\n    this._scope = this.breadcrumbs.join('.') + ':';\n    this.singleton = singleton;\n    this.singleton.changed.connect(this._rebindFunctions.bind(this));\n    this._rebindFunctions();\n  }\n\n  /**\n   * Re-binding directly to the underlying functions allows to get nice\n   * location (file:line) of the actual call rather than of this wrapper\n   * when using with the browser implementation.\n   */\n  _rebindFunctions() {\n    const noOp = () => {\n      // do nothing\n    };\n    const bindArg = this.implementation.bindThis();\n\n    if (this.verbosity === 'debug') {\n      this.debug = this.implementation.debug.bind(bindArg, this._scope);\n    } else {\n      this.debug = noOp;\n    }\n\n    if (this.verbosity === 'debug' || this.verbosity === 'log') {\n      this.log = this.implementation.log.bind(bindArg, this._scope);\n    } else {\n      this.log = noOp;\n    }\n\n    if (\n      this.verbosity === 'debug' ||\n      this.verbosity === 'log' ||\n      this.verbosity === 'warn'\n    ) {\n      this.warn = this.implementation.warn.bind(bindArg, this._scope);\n    } else {\n      this.warn = noOp;\n    }\n\n    this.error = this.implementation.error.bind(bindArg, this._scope);\n  }\n\n  get verbosity() {\n    return this.singleton.verbosity;\n  }\n\n  get implementation() {\n    return this.singleton.implementation;\n  }\n\n  debug(...args: any[]) {\n    return this.implementation.debug(this._scope, ...args);\n  }\n  log(...args: any[]) {\n    return this.implementation.log(this._scope, ...args);\n  }\n  warn(...args: any[]) {\n    return this.implementation.warn(this._scope, ...args);\n  }\n  error(...args: any[]) {\n    return this.implementation.error(this._scope, ...args);\n  }\n\n  scope(scope: string): ILSPLogConsole {\n    return new ConsoleWrapper([...this.breadcrumbs, scope], this.singleton);\n  }\n}\n\nclass ConsoleSingleton {\n  public verbosity: LoggingConsoleVerbosityLevel;\n  public implementation: ILogConsoleImplementation;\n  public changed: Signal<ConsoleSingleton, void>;\n\n  constructor(settingRegistry: ISettingRegistry) {\n    // until loaded log everything, to browser console\n    this.verbosity = 'debug';\n    this.implementation = new BrowserConsole();\n    this.changed = new Signal(this);\n\n    settingRegistry\n      .load(PLUGIN_ID + ':plugin')\n      .then(settings => {\n        this.updateSettings(settings);\n        settings.changed.connect(() => {\n          this.updateSettings(settings);\n        });\n      })\n      .catch(console.warn);\n  }\n\n  updateSettings(settings: ISettingRegistry.ISettings) {\n    const composite = settings.composite as LSPSettings;\n    const kind = composite.loggingConsole;\n\n    if (this.implementation) {\n      this.implementation.dispose();\n    }\n\n    if (kind === 'browser') {\n      this.implementation = new BrowserConsole();\n    } else if (kind === 'floating') {\n      this.implementation = new FloatingConsole();\n    } else {\n      console.warn(\n        'Unknown console type',\n        kind,\n        'falling back to browser console'\n      );\n      this.implementation = new BrowserConsole();\n    }\n\n    this.verbosity = composite.loggingLevel!;\n    this.changed.emit();\n  }\n}\n\nexport const LOG_CONSOLE: JupyterFrontEndPlugin<ILSPLogConsole> = {\n  id: PLUGIN_ID + ':ILSPLogConsole',\n  requires: [ISettingRegistry],\n  activate: (app, settingRegistry: ISettingRegistry) => {\n    const singleton = new ConsoleSingleton(settingRegistry);\n    return new ConsoleWrapper(['LSP'], singleton);\n  },\n  provides: ILSPLogConsole,\n  autoStart: true\n};\n","import { CompletionHandler } from '@jupyterlab/completer';\nimport { ILSPConnection } from '@jupyterlab/lsp';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport * as lsProtocol from 'vscode-languageserver-types';\n\n/**\n * To be upstreamed\n */\nexport interface IExtendedCompletionItem\n  extends CompletionHandler.ICompletionItem {\n  insertText: string;\n  sortText: string;\n  source: string;\n}\n\nnamespace CompletionItem {\n  export interface IOptions {\n    /**\n     * Type of this completion item.\n     */\n    type: string;\n    /**\n     * LabIcon object for icon to be rendered with completion type.\n     */\n    icon: LabIcon | null;\n    match: lsProtocol.CompletionItem;\n    connection: ILSPConnection;\n    source: string;\n  }\n}\n\nexport class CompletionItem implements IExtendedCompletionItem {\n  /**\n   * Self-reference to make sure that the instance for will remain accessible\n   * after any copy operation (whether via spread syntax or Object.assign)\n   * performed by the JupyterLab completer internals.\n   */\n  public self: CompletionItem;\n  public element: HTMLLIElement;\n  public source: string;\n\n  get isDocumentationMarkdown(): boolean {\n    return this._isDocumentationMarkdown;\n  }\n\n  /**\n   * User facing completion.\n   * If insertText is not set, this will be inserted.\n   */\n  public label: string;\n\n  icon: LabIcon | undefined;\n\n  constructor(protected options: CompletionItem.IOptions) {\n    const match = options.match;\n    this.label = match.label;\n    this._setDocumentation(match.documentation);\n    this._resolved = false;\n    this._detail = match.detail;\n    this._match = match;\n    this.self = this;\n    this.source = options.source;\n    this.icon = options.icon ? options.icon : undefined;\n\n    // Upstream is sometimes using spread operator to copy the object (in reconciliator),\n    // which does not copy getters because these are not enumerable; we should use\n    // `Object.assign` upstream, but them, but for now marking relevant properties as enumerable is enough\n    // Ideally this would be fixed and tested e2e in JupyterLab 4.0.7.\n    // https://github.com/jupyterlab/jupyterlab/issues/15125\n    makeGetterEnumerable(this, 'insertText');\n    makeGetterEnumerable(this, 'sortText');\n    makeGetterEnumerable(this, 'filterText');\n  }\n\n  get type() {\n    return this.options.type;\n  }\n\n  /**\n   * Completion to be inserted.\n   */\n  get insertText(): string {\n    return (\n      this._currentInsertText || this._match.insertText || this._match.label\n    );\n  }\n  set insertText(text: string) {\n    this._currentInsertText = text;\n  }\n\n  get sortText(): string {\n    return this._currentSortText || this._match.sortText || this._match.label;\n  }\n  set sortText(text: string) {\n    this._currentSortText = text;\n  }\n\n  get filterText(): string | undefined {\n    return this._match.filterText;\n  }\n  set filterText(text: string | undefined) {\n    this._match.filterText = text;\n  }\n\n  get detail(): string | undefined {\n    return this._detail;\n  }\n\n  public needsResolution(): boolean {\n    if (this.documentation) {\n      return false;\n    }\n\n    if (this._resolved) {\n      return false;\n    }\n\n    return this._supportsResolution();\n  }\n\n  public isResolved() {\n    return this._resolved;\n  }\n\n  /**\n   * Resolve (fetch) details such as documentation.\n   */\n  public async resolve(): Promise<CompletionItem> {\n    if (this._resolved) {\n      return this;\n    }\n    if (!this._supportsResolution()) {\n      return this;\n    }\n\n    const connection = this.options.connection;\n\n    const resolvedCompletionItem = await connection.clientRequests[\n      'completionItem/resolve'\n    ].request(this._match);\n\n    if (resolvedCompletionItem === null) {\n      return this;\n    }\n    this._setDocumentation(resolvedCompletionItem?.documentation);\n    this._detail = resolvedCompletionItem?.detail;\n    // TODO: implement in pylsp and enable with proper LSP communication\n    // this.label = resolvedCompletionItem.label;\n    this._resolved = true;\n    return this;\n  }\n\n  /**\n   * A human-readable string with additional information\n   * about this item, like type or symbol information.\n   */\n  get documentation(): string | undefined {\n    if (this._documentation) {\n      return this._documentation;\n    }\n    return undefined;\n  }\n\n  /**\n   * Indicates if the item is deprecated.\n   */\n  get deprecated(): boolean {\n    if (this._match.deprecated) {\n      return this._match.deprecated;\n    }\n    return (\n      this._match.tags != null &&\n      this._match.tags.some(\n        tag => tag == lsProtocol.CompletionItemTag.Deprecated\n      )\n    );\n  }\n\n  private _setDocumentation(\n    documentation: string | lsProtocol.MarkupContent | undefined\n  ) {\n    if (lsProtocol.MarkupContent.is(documentation)) {\n      this._documentation = documentation.value;\n      this._isDocumentationMarkdown = documentation.kind === 'markdown';\n    } else {\n      this._documentation = documentation;\n      this._isDocumentationMarkdown = false;\n    }\n  }\n\n  private _supportsResolution(): boolean {\n    const connection = this.options.connection;\n    return (\n      connection.serverCapabilities.completionProvider?.resolveProvider ?? false\n    );\n  }\n\n  private _detail: string | undefined;\n  private _documentation: string | undefined;\n  private _isDocumentationMarkdown: boolean;\n  private _resolved: boolean;\n  private _currentInsertText: string;\n  private _currentSortText: string;\n  private _match: lsProtocol.CompletionItem;\n}\n\nfunction makeGetterEnumerable(instance: object, name: string) {\n  const generatedDescriptor = findDescriptor(instance, name);\n  Object.defineProperty(instance, name, {\n    enumerable: true,\n    get: generatedDescriptor.get,\n    set: generatedDescriptor.set\n  });\n}\n\nfunction findDescriptor(instance: object, name: string) {\n  while (instance) {\n    const desc = Object.getOwnPropertyDescriptor(instance, name);\n    if (desc) {\n      return desc;\n    }\n    instance = Object.getPrototypeOf(instance);\n  }\n  throw Error(`No ${name} descriptor found.`);\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { CompleterModel, CompletionHandler } from '@jupyterlab/completer';\nimport { StringExt } from '@lumino/algorithm';\n\nimport { CompletionItem } from './item';\n\ninterface ICompletionMatch<T extends CompletionHandler.ICompletionItem> {\n  /**\n   * A score which indicates the strength of the match.\n   *\n   * A lower score is better. Zero is the best possible score.\n   */\n  score: number;\n  item: T;\n}\n\nfunction escapeHTML(text: string) {\n  let node = document.createElement('span');\n  node.textContent = text;\n  return node.innerHTML;\n}\n\n/**\n * A lot of this was contributed upstream\n */\nexport class GenericCompleterModel<\n  T extends CompletionHandler.ICompletionItem\n> extends CompleterModel {\n  public settings: GenericCompleterModel.IOptions;\n\n  constructor(settings: GenericCompleterModel.IOptions = {}) {\n    super();\n    // TODO: refactor upstream so that it does not block \"options\"?\n    this.settings = { ...GenericCompleterModel.defaultOptions, ...settings };\n  }\n\n  completionItems(): T[] {\n    let query = this.query;\n    // (setting query is bad because it resets the cache; ideally we would\n    // modify the sorting and filtering algorithm upstream).\n\n    // TODO processedItemsCache\n    this.query = '';\n\n    let unfilteredItems = (\n      super.completionItems() as CompletionHandler.ICompletionItem[]\n    ).map(this.harmoniseItem);\n\n    this.query = query;\n\n    // always want to sort\n    // TODO does this behave strangely with %%<tab> if always sorting?\n    return this._sortAndFilter(query, unfilteredItems);\n  }\n\n  protected harmoniseItem(item: CompletionHandler.ICompletionItem): T {\n    return item as T;\n  }\n\n  setCompletionItems(newValue: T[]) {\n    super.setCompletionItems(newValue);\n\n    if (this.current && this.cursor) {\n      // set initial query to pre-filter items; in future we should use:\n      // https://github.com/jupyterlab/jupyterlab/issues/9763#issuecomment-1001603348\n\n      // note: start/end from cursor are not ideal because these get populated from fetch\n      // reply which will vary depending on what providers decide to return; we want the\n      // actual position in token, the same as passed in request to fetch. We can get it\n      // by searching for longest common prefix as seen below (or by counting characters).\n      // Maybe upstream should expose it directly?\n      const { start, end } = this.cursor;\n      const { text, line, column } = this.original!;\n\n      const queryRange = text.substring(start, end).trim();\n      const linePrefix = text.split('\\n')[line].substring(0, column).trim();\n      let query = '';\n      for (let i = queryRange.length; i > 0; i--) {\n        if (queryRange.slice(0, i) == linePrefix.slice(-i)) {\n          query = linePrefix.slice(-i);\n          break;\n        }\n      }\n      if (!query) {\n        return;\n      }\n\n      let trimmedQuotes = false;\n      // special case for \"Completes Paths In Strings\" test case\n      if (query.startsWith('\"') || query.startsWith(\"'\")) {\n        query = query.substring(1);\n        trimmedQuotes = true;\n      }\n      if (query.endsWith('\"') || query.endsWith(\"'\")) {\n        query = query.substring(0, -1);\n        trimmedQuotes = true;\n      }\n      if (this.settings.preFilterMatches || trimmedQuotes) {\n        this.query = query;\n      }\n    }\n  }\n\n  private _markFragment(value: string): string {\n    return `<mark>${value}</mark>`;\n  }\n\n  protected getFilterText(item: T) {\n    return this.getHighlightableLabelRegion(item);\n  }\n\n  protected getHighlightableLabelRegion(item: T) {\n    // TODO: ideally label and params would be separated so we don't have to do\n    //  things like these which are not language-agnostic\n    //  (assume that params follow after first opening parenthesis which may not be the case);\n    //  the upcoming LSP 3.17 includes CompletionItemLabelDetails\n    //  which separates parameters from the label\n    // With ICompletionItems, the label may include parameters, so we exclude them from the matcher.\n    // e.g. Given label `foo(b, a, r)` and query `bar`,\n    // don't count parameters, `b`, `a`, and `r` as matches.\n    const index = item.label.indexOf('(');\n    return index > -1 ? item.label.substring(0, index) : item.label;\n  }\n\n  createPatch(patch: string) {\n    if (this.subsetMatch) {\n      // Prevent insertion code path when auto-populating subset on tab, to avoid problems with\n      // prefix which is a subset of token incorrectly replacing a string with file system path.\n      // - Q: Which code path is being blocked?\n      //   A: The code path (b) discussed in https://github.com/jupyterlab/jupyterlab/issues/15130.\n      // - Q: Why are we short- circuiting here?\n      //   A: we want to prevent `onCompletionSelected()` from proceeding with text insertion,\n      //      but direct extension of Completer handler is difficult.\n      return undefined;\n    }\n    return super.createPatch(patch);\n  }\n\n  private _sortAndFilter(query: string, items: T[]): T[] {\n    let results: ICompletionMatch<T>[] = [];\n\n    for (let item of items) {\n      // See if label matches query string\n\n      let matched: boolean;\n\n      let filterText: string | null = null;\n      let filterMatch: StringExt.IMatchResult | null = null;\n\n      let lowerCaseQuery = query.toLowerCase();\n\n      if (query) {\n        filterText = this.getFilterText(item);\n        if (this.settings.caseSensitive) {\n          filterMatch = StringExt.matchSumOfSquares(filterText, query);\n        } else {\n          filterMatch = StringExt.matchSumOfSquares(\n            filterText.toLowerCase(),\n            lowerCaseQuery\n          );\n        }\n        matched = !!filterMatch;\n        if (!this.settings.includePerfectMatches) {\n          matched = matched && filterText != query;\n        }\n      } else {\n        matched = true;\n      }\n\n      // Filter non-matching items. Filtering may happen on a criterion different than label.\n      if (matched) {\n        // If the matches are substrings of label, highlight them\n        // in this part of the label that can be highlighted (must be a prefix),\n        // which is intended to avoid highlighting matches in function arguments etc.\n        let labelMatch: StringExt.IMatchResult | null = null;\n        if (query) {\n          let labelPrefix = escapeHTML(this.getHighlightableLabelRegion(item));\n          if (labelPrefix == filterText) {\n            labelMatch = filterMatch;\n          } else {\n            labelMatch = StringExt.matchSumOfSquares(labelPrefix, query);\n          }\n        }\n\n        let label: string;\n        let score: number;\n\n        if (labelMatch) {\n          // Highlight label text if there's a match\n          // there won't be a match if filter text includes additional keywords\n          // for easier search that are not a part of the label\n          let marked = StringExt.highlight(\n            escapeHTML(item.label),\n            labelMatch.indices,\n            this._markFragment\n          );\n          label = marked.join('');\n          score = labelMatch.score;\n        } else {\n          label = escapeHTML(item.label);\n          score = 0;\n        }\n        // preserve getters (allow for lazily retrieved documentation)\n        const itemClone = Object.create(\n          Object.getPrototypeOf(item),\n          Object.getOwnPropertyDescriptors(item)\n        );\n        itemClone.label = label;\n        // If no insertText is present, preserve original label value\n        // by setting it as the insertText.\n        itemClone.insertText = item.insertText ? item.insertText : item.label;\n\n        results.push({\n          item: itemClone,\n          score: score\n        });\n      }\n    }\n\n    results.sort(this.compareMatches.bind(this));\n\n    return results.map(x => x.item);\n  }\n\n  protected compareMatches(\n    a: ICompletionMatch<T>,\n    b: ICompletionMatch<T>\n  ): number {\n    const delta = a.score - b.score;\n    if (delta !== 0) {\n      return delta;\n    }\n    return a.item.insertText?.localeCompare(b.item.insertText ?? '') ?? 0;\n  }\n}\n\nexport namespace GenericCompleterModel {\n  export interface IOptions {\n    /**\n     * Whether matching should be case-sensitive (default = true)\n     */\n    caseSensitive?: boolean;\n    /**\n     * Whether perfect matches should be included (default = true)\n     */\n    includePerfectMatches?: boolean;\n    /**\n     * Whether matches should be pre-filtered (default = true)\n     */\n    preFilterMatches?: boolean;\n    /**\n     * Whether kernel completions should be shown first.\n     */\n    kernelCompletionsFirst?: boolean;\n  }\n  export const defaultOptions: IOptions = {\n    caseSensitive: true,\n    includePerfectMatches: true,\n    preFilterMatches: true,\n    kernelCompletionsFirst: false\n  };\n}\n\ntype MaybeCompletionItem = Partial<CompletionItem> &\n  CompletionHandler.ICompletionItem;\n\nexport class LSPCompleterModel extends GenericCompleterModel<MaybeCompletionItem> {\n  protected getFilterText(item: MaybeCompletionItem): string {\n    if (item.filterText) {\n      return item.filterText;\n    }\n    return super.getFilterText(item);\n  }\n\n  protected harmoniseItem(item: CompletionHandler.ICompletionItem) {\n    if ((item as any).self) {\n      const self = (item as any).self;\n      // reflect any changes made on copy\n      self.insertText = item.insertText;\n      return self;\n    }\n    return super.harmoniseItem(item);\n  }\n\n  protected compareMatches(\n    a: ICompletionMatch<MaybeCompletionItem>,\n    b: ICompletionMatch<MaybeCompletionItem>\n  ): number {\n    // TODO: take source order from provider ranks, upstream this code\n    const sourceOrder = {\n      LSP: 1,\n      kernel: this.settings.kernelCompletionsFirst ? 0 : 2,\n      context: 3\n    };\n    const aRank = a.item.source\n      ? sourceOrder[a.item.source as keyof typeof sourceOrder] ?? 4\n      : 4;\n    const bRank = b.item.source\n      ? sourceOrder[b.item.source as keyof typeof sourceOrder] ?? 4\n      : 4;\n    return (\n      aRank - bRank ||\n      (a.item.sortText ?? 'z').localeCompare(b.item.sortText ?? 'z') ||\n      a.score - b.score\n    );\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Completer } from '@jupyterlab/completer';\nimport { IRenderMime } from '@jupyterlab/rendermime';\n\nimport { CodeCompletion as LSPCompletionSettings } from '../../_completion';\nimport { FeatureSettings } from '../../feature';\nimport { ILSPLogConsole } from '../../tokens';\n\nimport { CompletionItem, IExtendedCompletionItem } from './item';\n\nexport interface ICompletionData {\n  item: CompletionItem;\n  element: HTMLLIElement;\n}\n\nexport class LSPCompletionRenderer\n  extends Completer.Renderer\n  implements Completer.IRenderer\n{\n  // observers\n  private visibilityObserver: IntersectionObserver;\n  // element data maps (with weak references for better GC)\n  private elementToItem: WeakMap<HTMLLIElement, CompletionItem>;\n\n  protected ITEM_PLACEHOLDER_CLASS = 'lsp-detail-placeholder';\n  protected EXTRA_INFO_CLASS = 'jp-Completer-typeExtended';\n  protected LABEL_CLASS = 'jp-Completer-match';\n\n  constructor(protected options: LSPCompletionRenderer.IOptions) {\n    super();\n    this.elementToItem = new WeakMap();\n\n    this.visibilityObserver = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (!entry.isIntersecting) {\n            return;\n          }\n          let li = entry.target as HTMLLIElement;\n          let item = this.elementToItem.get(li)!;\n          item.resolve().catch(console.error);\n        });\n      },\n      {\n        threshold: 0.25\n      }\n    );\n  }\n\n  protected getExtraInfo(item: CompletionItem): string {\n    const labelExtra = this.options.settings.composite.labelExtra;\n    switch (labelExtra) {\n      case 'detail':\n        return item?.detail || '';\n      case 'type':\n        return item?.type?.toLowerCase?.();\n      case 'source':\n        return item?.source;\n      case 'auto':\n        return [\n          item?.detail || '',\n          item?.type?.toLowerCase?.(),\n          item?.source\n        ].filter(x => !!x)[0];\n      default:\n        this.options.console.warn(\n          'labelExtra does not match any of the expected values',\n          labelExtra\n        );\n        return '';\n    }\n  }\n\n  public updateExtraInfo(item: CompletionItem, li: HTMLLIElement) {\n    const extraText = this.getExtraInfo(item);\n    if (extraText) {\n      const extraElement = li.getElementsByClassName(this.EXTRA_INFO_CLASS)[0];\n      extraElement.textContent = extraText;\n      this._elideMark(item, li);\n    }\n  }\n\n  createCompletionItemNode(\n    item: CompletionItem,\n    orderedTypes: string[]\n  ): HTMLLIElement {\n    const li = super.createCompletionItemNode(item, orderedTypes);\n\n    // make sure that an instance reference, and not an object copy is being used;\n    const lspItem = item.self;\n\n    // only monitor nodes that have item.self as others are not our completion items\n    if (lspItem) {\n      lspItem.element = li;\n      this.elementToItem.set(li, lspItem);\n      this.visibilityObserver.observe(li);\n      // TODO: build custom li from ground up\n      this.updateExtraInfo(lspItem, li);\n      this._elideMark(lspItem, li);\n    } else {\n      this.updateExtraInfo(item, li);\n      this._elideMark(lspItem, li);\n    }\n\n    return li;\n  }\n\n  private _elideMark(item: IExtendedCompletionItem, li: HTMLLIElement) {\n    if (!item || !item.type) {\n      return;\n    }\n    const type = item.type.toLowerCase();\n    if (type !== 'file' && type !== 'path') {\n      // do not elide for non-paths.\n      return;\n    }\n    const labelElement = li.getElementsByClassName(this.LABEL_CLASS)[0];\n    const originalHTMLLabel = labelElement.childNodes;\n    let hasMark = false;\n    for (const node of originalHTMLLabel) {\n      if (node instanceof HTMLElement) {\n        const element = node as HTMLElement;\n        const text = element.textContent;\n        if (element.tagName === 'MARK' && text && text.length > 3) {\n          const elidableElement = document.createElement('bdo');\n          elidableElement.setAttribute('dir', 'ltr');\n          elidableElement.textContent = text;\n          element.title = text;\n          element.replaceChildren(elidableElement);\n          element.classList.add('lsp-elide');\n          hasMark = true;\n        }\n      }\n    }\n    if (hasMark) {\n      const wrapper = document.createElement('div');\n      wrapper.className = 'lsp-elide-wrapper';\n      wrapper.replaceChildren(...labelElement.childNodes);\n      labelElement.replaceChildren(wrapper);\n    }\n  }\n\n  createDocumentationNode(item: CompletionItem): HTMLElement {\n    // note: not worth trying to `fetchDocumentation()` as this is not\n    // invoked if documentation is empty (as of jlab 3.2)\n    if (item.isDocumentationMarkdown && this.options.markdownRenderer) {\n      let documentation = item.documentation;\n      this.options.markdownRenderer\n        .renderModel({\n          data: {\n            'text/markdown': documentation\n          },\n          trusted: false,\n          metadata: {},\n          setData(options: IRenderMime.IMimeModel.ISetDataOptions) {\n            // empty\n          }\n        })\n        .then(() => {\n          if (\n            this.options.markdownRenderer &&\n            this.options.latexTypesetter &&\n            documentation &&\n            documentation.includes('$')\n          ) {\n            this.options.latexTypesetter.typeset(\n              this.options.markdownRenderer.node\n            );\n          }\n        })\n        .catch(this.options.console.warn);\n      return this.options.markdownRenderer.node;\n    } else if (item.source != 'LSP') {\n      // fallback to default implementation for non-LSP completions\n      return super.createDocumentationNode(item);\n    } else {\n      let node = document.createElement('pre');\n      if (item.documentation) {\n        node.textContent = item.documentation;\n      }\n      return node;\n    }\n  }\n\n  itemWidthHeuristic(item: CompletionItem): number {\n    const labelSize = item.label.replace(/<(\\/)?mark>/g, '').length;\n    const extraTextSize = this.getExtraInfo(item).length;\n    if (this.options.settings.composite.layout === 'side-by-side') {\n      // in 'side-by-side' take the sum\n      return labelSize + extraTextSize;\n    }\n    // 'detail-below' mode take whichever is longer\n    return Math.max(labelSize, extraTextSize);\n  }\n}\n\nexport namespace LSPCompletionRenderer {\n  export interface IOptions {\n    settings: FeatureSettings<LSPCompletionSettings>;\n    markdownRenderer: IRenderMime.IRenderer | null;\n    latexTypesetter?: IRenderMime.ILatexTypesetter | null;\n    console: ILSPLogConsole;\n  }\n}\n","import { ILSPCompletionThemeManager } from '@jupyter-lsp/completion-theme';\nimport { SourceChange } from '@jupyter/ydoc';\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport {\n  ICompletionProvider,\n  CompletionHandler,\n  ICompletionContext,\n  Completer\n} from '@jupyterlab/completer';\nimport { IDocumentWidget } from '@jupyterlab/docregistry';\nimport {\n  ILSPDocumentConnectionManager,\n  IEditorPosition\n} from '@jupyterlab/lsp';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport type * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport { CodeCompletion as LSPCompletionSettings } from '../../_completion';\nimport {\n  editorPositionToRootPosition,\n  PositionConverter,\n  documentAtRootPosition,\n  rootPositionToVirtualPosition\n} from '../../converter';\nimport { FeatureSettings } from '../../feature';\nimport { CompletionTriggerKind, CompletionItemKind } from '../../lsp';\nimport { ILSPLogConsole } from '../../tokens';\nimport { BrowserConsole } from '../../virtual/console';\n\nimport { CompletionItem } from './item';\nimport { LSPCompleterModel } from './model';\nimport { LSPCompletionRenderer } from './renderer';\n\ninterface IOptions {\n  settings: FeatureSettings<LSPCompletionSettings>;\n  renderMimeRegistry: IRenderMimeRegistry;\n  iconsThemeManager: ILSPCompletionThemeManager;\n  connectionManager: ILSPDocumentConnectionManager;\n}\n\nexport class CompletionProvider implements ICompletionProvider<CompletionItem> {\n  readonly identifier = 'lsp';\n  readonly label = 'LSP';\n  readonly rank = 1000;\n  protected console = new BrowserConsole().scope('Completion provider');\n\n  constructor(protected options: IOptions) {\n    const markdownRenderer =\n      options.renderMimeRegistry.createRenderer('text/markdown');\n\n    this.renderer = new LSPCompletionRenderer({\n      settings: options.settings,\n      markdownRenderer,\n      latexTypesetter: options.renderMimeRegistry.latexTypesetter,\n      console: this.console\n    });\n  }\n\n  renderer: LSPCompletionRenderer;\n\n  modelFactory = async (\n    context: ICompletionContext\n  ): Promise<Completer.IModel> => {\n    const composite = this.options.settings.composite;\n    const model = new LSPCompleterModel({\n      caseSensitive: composite.caseSensitive,\n      preFilterMatches: composite.preFilterMatches,\n      includePerfectMatches: composite.includePerfectMatches,\n      kernelCompletionsFirst: composite.kernelCompletionsFirst\n    });\n    this.options.settings.changed.connect(() => {\n      const composite = this.options.settings.composite;\n      model.settings.caseSensitive = composite.caseSensitive;\n      model.settings.preFilterMatches = composite.preFilterMatches;\n      model.settings.includePerfectMatches = composite.includePerfectMatches;\n      model.settings.kernelCompletionsFirst = composite.kernelCompletionsFirst;\n    });\n    return model;\n  };\n\n  /**\n   * Resolve (fetch) details such as documentation.\n   */\n  async resolve(completionItem: CompletionItem): Promise<any> {\n    await completionItem.resolve();\n    // expand getters\n    return {\n      label: completionItem.label,\n      documentation: completionItem.documentation,\n      deprecated: completionItem.deprecated,\n      detail: completionItem.detail,\n      filterText: completionItem.filterText,\n      sortText: completionItem.sortText,\n      insertText: completionItem.insertText,\n      source: completionItem.source,\n      type: completionItem.type,\n      isDocumentationMarkdown: completionItem.isDocumentationMarkdown,\n      icon: completionItem.icon\n    };\n  }\n\n  shouldShowContinuousHint(\n    completerIsVisible: boolean,\n    changed: SourceChange,\n    context?: ICompletionContext\n  ): boolean {\n    if (!context) {\n      // waiting for https://github.com/jupyterlab/jupyterlab/pull/15015 due to\n      // https://github.com/jupyterlab/jupyterlab/issues/15014\n      return false;\n      // throw Error('Completion context was expected');\n    }\n\n    const manager = this.options.connectionManager;\n    const widget = context?.widget as IDocumentWidget;\n    const adapter = manager.adapters.get(widget.context.path);\n    if (!context.editor) {\n      // TODO: why is editor optional in the first place?\n      throw Error('No editor');\n    }\n    if (!adapter) {\n      throw Error('No adapter');\n    }\n    const editor = context.editor;\n    const editorPosition = PositionConverter.ce_to_cm(\n      editor.getCursorPosition()\n    ) as IEditorPosition;\n\n    const block = adapter.editors.find(\n      value => value.ceEditor.getEditor() == editor\n    );\n\n    if (!block) {\n      throw Error('Could not get block with editor');\n    }\n    const rootPosition = editorPositionToRootPosition(\n      adapter,\n      block.ceEditor,\n      editorPosition\n    );\n\n    if (!rootPosition) {\n      throw Error('Could not get root position');\n    }\n\n    const virtualDocument = documentAtRootPosition(adapter, rootPosition);\n    const connection = manager.connections.get(virtualDocument.uri);\n\n    if (!connection) {\n      throw Error('Could not find connection for virtual document');\n    }\n\n    const triggerCharacters =\n      connection.serverCapabilities?.completionProvider?.triggerCharacters ||\n      [];\n\n    const sourceChange = changed.sourceChange;\n\n    if (sourceChange == null) {\n      return false;\n    }\n\n    if (sourceChange.some(delta => delta.delete != null)) {\n      return false;\n    }\n    const token = editor.getTokenAtCursor();\n\n    if (this.options.settings.composite.continuousHinting) {\n      // if token type is known and not ignored token type is ignored - show completer\n      if (\n        token.type &&\n        !this.options.settings.composite.suppressContinuousHintingIn.includes(\n          token.type\n        )\n      ) {\n        return true;\n      }\n      // otherwise show it may still be shown due to trigger character\n    }\n    if (\n      !token.type ||\n      this.options.settings.composite.suppressTriggerCharacterIn.includes(\n        token.type\n      )\n    ) {\n      return false;\n    }\n\n    return sourceChange.some(\n      delta =>\n        delta.insert != null &&\n        (triggerCharacters.includes(delta.insert) ||\n          (!completerIsVisible && delta.insert.trim().length > 0))\n    );\n  }\n\n  async fetch(\n    request: CompletionHandler.IRequest,\n    context: ICompletionContext,\n    trigger?: CompletionTriggerKind\n  ): Promise<CompletionHandler.ICompletionItemsReply<CompletionItem>> {\n    const manager = this.options.connectionManager;\n    const widget = context.widget as IDocumentWidget;\n    const adapter = manager.adapters.get(widget.context.path);\n\n    if (!context.editor) {\n      // TODO: why is editor optional in the first place?\n      throw Error('No editor');\n    }\n    if (!adapter) {\n      throw Error('No adapter');\n    }\n    const editor = context.editor;\n    const editorPosition = PositionConverter.ce_to_cm(\n      editor.getPositionAt(request.offset)!\n    ) as IEditorPosition;\n    const token = editor.getTokenAt(request.offset);\n    const positionInToken = request.offset - token.offset;\n    // TODO: (typedCharacter can serve as a proxy for triggerCharacter)\n    const typedCharacter = token.value[positionInToken - 1];\n\n    // TODO: direct mapping\n    // because we need editorAccessor, not the editor itself we perform this rather sad dance:\n    const block = adapter.editors.find(\n      value => value.ceEditor.getEditor() == editor\n    );\n    if (!block) {\n      throw Error('Could not get block with editor');\n    }\n\n    const rootPosition = editorPositionToRootPosition(\n      adapter,\n      block.ceEditor,\n      editorPosition\n    );\n\n    if (!rootPosition) {\n      throw Error('Could not get root position');\n    }\n\n    const virtualDocument = documentAtRootPosition(adapter, rootPosition);\n    const virtualPosition = rootPositionToVirtualPosition(\n      adapter,\n      rootPosition\n    );\n\n    const connection = manager.connections.get(virtualDocument.uri);\n\n    if (!connection) {\n      throw Error('Could not find connection for virtual document');\n    }\n\n    const lspCompletionReply = await connection.clientRequests[\n      'textDocument/completion'\n    ].request({\n      textDocument: {\n        uri: virtualDocument.documentInfo.uri\n      },\n      position: {\n        line: virtualPosition.line,\n        character: virtualPosition.ch\n      },\n      context: {\n        triggerKind: trigger || CompletionTriggerKind.Invoked,\n        triggerCharacter:\n          trigger === CompletionTriggerKind.TriggerCharacter\n            ? typedCharacter\n            : undefined\n      }\n    });\n\n    const completionList =\n      !lspCompletionReply || Array.isArray(lspCompletionReply)\n        ? ({\n            isIncomplete: false,\n            items: lspCompletionReply || []\n          } as lsProtocol.CompletionList)\n        : lspCompletionReply;\n\n    return transformLSPCompletions(\n      token,\n      positionInToken,\n      completionList.items,\n      (kind, match) => {\n        return new CompletionItem({\n          match,\n          connection,\n          type: kind,\n          icon: this.options.iconsThemeManager.getIcon(kind) as LabIcon | null,\n          source: this.label\n        });\n      },\n      this.console\n    );\n  }\n\n  async isApplicable(context: ICompletionContext): Promise<boolean> {\n    if (this.options.settings.composite.disable) {\n      return false;\n    }\n    const manager = this.options.connectionManager;\n    const widget = context.widget as IDocumentWidget;\n    const adapter = manager.adapters.get(widget.context.path);\n    if (!adapter) {\n      return false;\n    }\n    return true;\n  }\n}\n\nfunction stripQuotes(path: string): string {\n  return path.slice(\n    path.startsWith(\"'\") || path.startsWith('\"') ? 1 : 0,\n    path.endsWith(\"'\") || path.endsWith('\"') ? -1 : path.length\n  );\n}\nexport function transformLSPCompletions<T>(\n  token: CodeEditor.IToken,\n  positionInToken: number,\n  lspCompletionItems: lsProtocol.CompletionItem[],\n  createCompletionItem: (kind: string, match: lsProtocol.CompletionItem) => T,\n  console: ILSPLogConsole\n) {\n  let prefix = token.value.slice(0, positionInToken);\n  let suffix = token.value.slice(positionInToken, token.value.length);\n  let items: T[] = [];\n  // If there are no prefixes, we will just insert the text without replacing the token,\n  // which is the case for example in R for `stats::<tab>` which returns module members\n  // without `::` prefix.\n  // If there are prefixes, we will replace the token so we may need to prepend/append to,\n  // or otherwise modify the insert text of individual completion items.\n  let anyPrefixed = false;\n\n  lspCompletionItems.forEach(match => {\n    let kind = match.kind ? CompletionItemKind[match.kind] : '';\n\n    let text = match.insertText ? match.insertText : match.label;\n    let intendedText = match.insertText ? match.insertText : match.label;\n\n    if (intendedText.toLowerCase().startsWith(prefix.toLowerCase())) {\n      anyPrefixed = true;\n    }\n\n    // Add overlap with token prefix\n    if (intendedText.startsWith(token.value)) {\n      anyPrefixed = true;\n      // remove overlap with prefix before expanding it\n      if (intendedText.startsWith(prefix)) {\n        text = text.substring(prefix.length, text.length);\n        match.insertText = text;\n      }\n      text = token.value + text;\n      match.insertText = text;\n    }\n\n    // special handling for paths\n    if (token.type === 'String' && prefix.includes('/')) {\n      const parts = stripQuotes(prefix).split('/');\n      if (\n        text.toLowerCase().startsWith(parts[parts.length - 1].toLowerCase())\n      ) {\n        let pathPrefix = parts.slice(0, -1).join('/') + '/';\n        text =\n          (prefix.startsWith(\"'\") || prefix.startsWith('\"') ? prefix[0] : '') +\n          pathPrefix +\n          text +\n          (suffix.startsWith(\"'\") || suffix.startsWith('\"') ? suffix[0] : '');\n        match.insertText = text;\n        // for label without quotes\n        match.label = pathPrefix + match.label;\n        anyPrefixed = true;\n      }\n    } else {\n      // harmonise end to token\n      if (text.toLowerCase().endsWith(suffix.toLowerCase())) {\n        text = text.substring(0, text.length - suffix.length);\n        match.insertText = text;\n      } else if (token.type === 'String') {\n        // special case for completion in strings to preserve the closing quote;\n        // there is an issue that this gives opposing results in Notebook vs File editor\n        // probably due to reconciliator logic\n        if (suffix.startsWith(\"'\") || suffix.startsWith('\"')) {\n          match.insertText = text + suffix[0];\n        }\n      }\n    }\n\n    let completionItem = createCompletionItem(kind, match);\n\n    items.push(completionItem);\n  });\n  console.debug('Transformed');\n\n  let start = token.offset;\n  let end = token.offset + token.value.length;\n  if (!anyPrefixed) {\n    start = end;\n  }\n\n  let response = {\n    start,\n    end,\n    items,\n    source: 'LSP'\n  };\n  if (response.start > response.end) {\n    console.warn(\n      'Response contains start beyond end; this should not happen!',\n      response\n    );\n  }\n  return response;\n}\n","import { ILSPCompletionThemeManager } from '@jupyter-lsp/completion-theme';\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ICompletionProviderManager } from '@jupyterlab/completer';\nimport {\n  ILSPFeatureManager,\n  ILSPDocumentConnectionManager\n} from '@jupyterlab/lsp';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport completionSvg from '../../../style/icons/completion.svg';\nimport { CodeCompletion as LSPCompletionSettings } from '../../_completion';\nimport { FeatureSettings, Feature } from '../../feature';\nimport { CompletionItemTag } from '../../lsp';\nimport { PLUGIN_ID } from '../../tokens';\n\nimport {\n  EnhancedContextCompleterProvider,\n  EnhancedKernelCompleterProvider\n} from './overrides';\nimport { CompletionProvider } from './provider';\n\nexport const completionIcon = new LabIcon({\n  name: 'lsp:completion',\n  svgstr: completionSvg\n});\n\nexport class CompletionFeature extends Feature {\n  readonly id = CompletionFeature.id;\n  readonly capabilities: lsProtocol.ClientCapabilities = {\n    textDocument: {\n      completion: {\n        dynamicRegistration: true,\n        completionItem: {\n          snippetSupport: false,\n          commitCharactersSupport: true,\n          documentationFormat: ['markdown', 'plaintext'],\n          deprecatedSupport: true,\n          preselectSupport: false,\n          tagSupport: {\n            valueSet: [CompletionItemTag.Deprecated]\n          }\n        },\n        contextSupport: true\n      }\n    }\n  };\n\n  constructor(protected options: CompletionFeature.IOptions) {\n    super(options);\n    this._configure();\n\n    options.settings.changed.connect(() => {\n      this._configure();\n    });\n\n    const provider = new CompletionProvider({ ...options });\n    options.completionProviderManager.registerProvider(provider);\n    options.completionProviderManager.registerProvider(\n      new EnhancedContextCompleterProvider(options)\n    );\n    options.completionProviderManager.registerProvider(\n      new EnhancedKernelCompleterProvider(options)\n    );\n  }\n\n  private _configure() {\n    const settings = this.options.settings;\n    const completionThemeManager = this.options.iconsThemeManager;\n\n    if (!settings.composite.disable) {\n      document.body.dataset.lspCompleterLayout = settings.composite.layout;\n      completionThemeManager.setTheme(settings.composite.theme);\n      completionThemeManager.setIconsOverrides(settings.composite.typesMap);\n    } else {\n      completionThemeManager.setTheme(null);\n      delete document.body.dataset.lspCompleterLayout;\n    }\n  }\n}\n\nexport namespace CompletionFeature {\n  export interface IOptions extends Feature.IOptions {\n    settings: FeatureSettings<LSPCompletionSettings>;\n    renderMimeRegistry: IRenderMimeRegistry;\n    completionProviderManager: ICompletionProviderManager;\n    iconsThemeManager: ILSPCompletionThemeManager;\n  }\n  export const id = PLUGIN_ID + ':completion';\n}\n\nexport const COMPLETION_PLUGIN: JupyterFrontEndPlugin<void> = {\n  id: CompletionFeature.id,\n  requires: [\n    ILSPFeatureManager,\n    ISettingRegistry,\n    ICompletionProviderManager,\n    ILSPCompletionThemeManager,\n    IRenderMimeRegistry,\n    ILSPDocumentConnectionManager\n  ],\n  autoStart: true,\n  activate: async (\n    app: JupyterFrontEnd,\n    featureManager: ILSPFeatureManager,\n    settingRegistry: ISettingRegistry,\n    completionProviderManager: ICompletionProviderManager,\n    iconsThemeManager: ILSPCompletionThemeManager,\n    renderMimeRegistry: IRenderMimeRegistry,\n    connectionManager: ILSPDocumentConnectionManager\n  ) => {\n    const settings = new FeatureSettings<LSPCompletionSettings>(\n      settingRegistry,\n      CompletionFeature.id\n    );\n    await settings.ready;\n    if (settings.composite.disable) {\n      return;\n    }\n    const feature = new CompletionFeature({\n      settings,\n      connectionManager,\n      renderMimeRegistry,\n      iconsThemeManager,\n      completionProviderManager\n    });\n\n    featureManager.register(feature);\n  }\n};\n","import type { EditorView } from '@codemirror/view';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport type { CodeMirrorEditor } from '@jupyterlab/codemirror';\nimport { IDocumentWidget } from '@jupyterlab/docregistry';\nimport {\n  ILSPConnection,\n  WidgetLSPAdapter,\n  ILSPDocumentConnectionManager,\n  IEditorPosition,\n  IRootPosition,\n  IVirtualPosition,\n  Document\n} from '@jupyterlab/lsp';\n\nimport {\n  PositionConverter,\n  documentAtRootPosition,\n  rootPositionToVirtualPosition,\n  editorPositionToRootPosition,\n  editorAtRootPosition,\n  rootPositionToEditorPosition\n} from './converter';\nimport { BrowserConsole } from './virtual/console';\nimport { VirtualDocument } from './virtual/document';\n\n// TODO: reconsider naming\nexport class ContextAssembler {\n  protected console = new BrowserConsole().scope('ContexAssembler');\n\n  constructor(private options: ContextAssembler.IOptions) {\n    // no-op\n  }\n\n  /**\n   * Get context from current context menu (or fallback to document context).\n   */\n  getContext(): ICommandContext | null {\n    let context: ICommandContext | null = null;\n    try {\n      context = this.getContextFromContextMenu();\n    } catch (e) {\n      this.console.warn(\n        'contextMenu is attached, but could not get the context',\n        e\n      );\n      context = null;\n    }\n    if (context == null) {\n      try {\n        context = this._contextFromActiveDocument();\n      } catch (e) {\n        if (\n          e instanceof Error &&\n          e.message === 'Source line not mapped to virtual position'\n        ) {\n          this.console.log(\n            'Could not get context from active document: it is expected when restoring workspace with open files'\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n    return context;\n  }\n\n  isContextMenuOverToken() {\n    const context = this.getContextFromContextMenu();\n    if (!context) {\n      // annoyingly `isEnabled()` gets called again when mouse is over the menu\n      // which means we are no longer able to retrieve context; therefore we cache\n      // last value and return it if the mouse is over menu.\n      return this._wasOverToken;\n    }\n    const { rootPosition, adapter } = context;\n    const editorAccessor = editorAtRootPosition(adapter, rootPosition);\n    const editor = editorAccessor.getEditor();\n    if (!editor) {\n      return;\n    }\n\n    const editorPosition = rootPositionToEditorPosition(adapter, rootPosition);\n\n    const offset = editor.getOffsetAt(\n      PositionConverter.cm_to_ce(editorPosition)\n    );\n    const token = editor.getTokenAt(offset);\n    const isOverToken = token.value !== '';\n    this._wasOverToken = isOverToken;\n    return isOverToken;\n  }\n  private _wasOverToken = false;\n\n  private _contextFromActiveDocument(): ICommandContext | null {\n    const adapter = [...this.options.connectionManager.adapters.values()].find(\n      adapter => adapter.widget == this.options.app.shell.currentWidget\n    );\n\n    if (!adapter) {\n      this.console.debug('No adapter');\n      return null;\n    }\n\n    const editor = adapter.activeEditor!.getEditor();\n\n    if (editor === null) {\n      return null;\n    }\n\n    let ceCursor = editor.getCursorPosition();\n    let cmCursor = PositionConverter.ce_to_cm(ceCursor) as IEditorPosition;\n\n    const virtualDocument = adapter.virtualDocument;\n    if (!virtualDocument) {\n      console.warn('Could not retrieve current context', virtualDocument);\n      return null;\n    }\n    const rootPosition = virtualDocument.transformFromEditorToRoot(\n      adapter.activeEditor!,\n      cmCursor\n    )!;\n\n    if (rootPosition == null) {\n      console.warn('Could not retrieve current context', virtualDocument);\n      return null;\n    }\n\n    return this._contextFromRoot(adapter, rootPosition);\n  }\n\n  private _contextFromRoot(\n    adapter: WidgetLSPAdapter<any>,\n    rootPosition: IRootPosition\n  ): ICommandContext | null {\n    const document = documentAtRootPosition(adapter, rootPosition);\n    const connection = this.options.connectionManager.connections.get(\n      document.uri\n    )!;\n    const virtualPosition = rootPositionToVirtualPosition(\n      adapter,\n      rootPosition\n    );\n    return {\n      document: document as any,\n      connection,\n      virtualPosition,\n      rootPosition,\n      adapter: adapter\n    };\n  }\n\n  adapterFromNode(leafNode: HTMLElement): WidgetLSPAdapter<any> | undefined {\n    return [...this.options.connectionManager.adapters.values()].find(adapter =>\n      adapter.widget.node.contains(leafNode!)\n    );\n  }\n\n  positionFromCoordinates(\n    left: number,\n    top: number,\n    adapter: WidgetLSPAdapter<any>,\n    editorAccessor: Document.IEditor | undefined\n  ): IRootPosition | null {\n    if (!editorAccessor) {\n      return null;\n    }\n\n    const editorPosition = this.editorPositionFromCoordinates(\n      left,\n      top,\n      editorAccessor\n    );\n\n    if (!editorPosition) {\n      return null;\n    }\n\n    return editorPositionToRootPosition(\n      adapter,\n      editorAccessor,\n      editorPosition\n    );\n  }\n\n  editorPositionFromCoordinates(\n    left: number,\n    top: number,\n    editorAccessor: Document.IEditor\n  ): IEditorPosition | null {\n    const editor = editorAccessor.getEditor();\n    if (!editor) {\n      return null;\n    }\n    const position = editor.getPositionForCoordinate({\n      left: left,\n      right: left,\n      bottom: top,\n      top: top,\n      y: top,\n      x: left,\n      width: 0,\n      height: 0\n    } as CodeEditor.ICoordinate);\n\n    if (!position) {\n      return null;\n    }\n\n    const editorPosition = {\n      ch: position.column,\n      line: position.line\n    } as IEditorPosition;\n\n    return editorPosition;\n  }\n\n  /*\n   * Attempt to find editor from DOM and then (naively) find `Document.Editor`\n   * from `CodeEditor` isntances. The naive approach iterates all the editors\n   * (=cells) in the adapter, which is expensive and prone to fail in windowed notebooks.\n   *\n   * This may not be needed once https://github.com/jupyterlab/jupyterlab/pull/14920\n   * is finalised an released.\n   */\n  editorFromNode(\n    adapter: WidgetLSPAdapter<any>,\n    node: HTMLElement\n  ): Document.IEditor | undefined {\n    const cmContent = (node as HTMLElement).closest('.cm-content');\n    if (!cmContent) {\n      return;\n    }\n    const cmView = (cmContent as any)?.cmView?.view as EditorView | undefined;\n\n    if (!cmView) {\n      return;\n    }\n\n    const editorAccessor = adapter.editors\n      .map(e => e.ceEditor)\n      .find(e => (e.getEditor() as CodeMirrorEditor | null)?.editor === cmView);\n    return editorAccessor;\n  }\n\n  private getContextFromContextMenu(): ICommandContext | null {\n    // Note: could also try using this.app.contextMenu.menu.contentNode position.\n    // Note: could add a guard on this.app.contextMenu.menu.isAttached\n\n    // get the first node as it gives the most accurate approximation\n    const leafNode = this.options.app.contextMenuHitTest(() => true);\n\n    if (!leafNode) {\n      return null;\n    }\n\n    let { left, top } = leafNode.getBoundingClientRect();\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    let event = this.options.app._contextMenuEvent;\n\n    // if possible, use more accurate position from the actual event\n    // (but this relies on an undocumented and unstable feature)\n    if (event !== undefined) {\n      left = event.clientX;\n      top = event.clientY;\n      event.stopPropagation();\n    }\n    const adapter = this.adapterFromNode(leafNode);\n\n    if (!adapter) {\n      return null;\n    }\n\n    const accessorFromNode = this.editorFromNode(adapter, leafNode);\n    if (!accessorFromNode) {\n      // Using `activeEditor` can lead to suprising results in notebook\n      // as a cell can be opened over a cell diffferent than the active one.\n      this.console.warn(\n        'Editor accessor not found from node, falling back to activeEditor'\n      );\n    }\n    const editorAccessor = accessorFromNode\n      ? accessorFromNode\n      : adapter.activeEditor;\n    const rootPosition = this.positionFromCoordinates(\n      left,\n      top,\n      adapter,\n      editorAccessor\n    );\n\n    if (!rootPosition) {\n      return null;\n    }\n\n    return this._contextFromRoot(adapter!, rootPosition);\n  }\n}\n\nexport namespace ContextAssembler {\n  export interface IOptions {\n    app: JupyterFrontEnd;\n    connectionManager: ILSPDocumentConnectionManager;\n  }\n}\n\nexport interface ICommandContext {\n  document: VirtualDocument;\n  connection?: ILSPConnection;\n  virtualPosition: IVirtualPosition;\n  rootPosition: IRootPosition;\n  adapter: WidgetLSPAdapter<IDocumentWidget>;\n}\n","import { PageConfig } from '@jupyterlab/coreutils';\nimport { ReadonlyJSONObject, ReadonlyJSONValue } from '@lumino/coreutils';\nimport mergeWith from 'lodash.mergewith';\n\nconst RE_PATH_ANCHOR = /^file:\\/\\/([^\\/]+|\\/[a-zA-Z](?::|%3A))/;\n\nexport async function sleep(timeout: number) {\n  return new Promise<void>(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, timeout);\n  });\n}\n\nexport type ModifierKey =\n  | 'Shift'\n  | 'Alt'\n  | 'AltGraph'\n  | 'Control'\n  | 'Meta'\n  | 'Accel';\n\n/**\n * CodeMirror-proof implementation of event.getModifierState()\n */\nexport function getModifierState(\n  event: MouseEvent | KeyboardEvent,\n  modifierKey: ModifierKey\n): boolean {\n  // Note: Safari does not support getModifierState on MouseEvent, see:\n  // https://github.com/krassowski/jupyterlab-go-to-definition/issues/3\n  // thus AltGraph and others are not supported on Safari\n  // Full list of modifier keys and mappings to physical keys on different OSes:\n  // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\n\n  // the key approach is needed for CodeMirror events which do not set\n  // *key (e.g. ctrlKey) correctly\n  const key = (event as KeyboardEvent).key || null;\n  let value = false;\n\n  switch (modifierKey) {\n    case 'Shift':\n      value = event.shiftKey || key == 'Shift';\n      break;\n    case 'Alt':\n      value = event.altKey || key == 'Alt';\n      break;\n    case 'AltGraph':\n      value = key == 'AltGraph';\n      break;\n    case 'Control':\n      value = event.ctrlKey || key == 'Control';\n      break;\n    case 'Meta':\n      value = event.metaKey || key == 'Meta';\n      break;\n    case 'Accel':\n      value =\n        event.metaKey || key == 'Meta' || event.ctrlKey || key == 'Control';\n      break;\n  }\n\n  if (event.getModifierState !== undefined) {\n    return value || event.getModifierState(modifierKey);\n  }\n\n  return value;\n}\n\nexport class DefaultMap<K, V> extends Map<K, V> {\n  constructor(\n    private defaultFactory: (...args: any[]) => V,\n    entries?: ReadonlyArray<readonly [K, V]> | null\n  ) {\n    super(entries);\n  }\n\n  get(k: K): V {\n    return this.getOrCreate(k);\n  }\n\n  getOrCreate(k: K, ...args: any[]): V {\n    if (this.has(k)) {\n      return super.get(k)!;\n    } else {\n      let v = this.defaultFactory(k, ...args);\n      this.set(k, v);\n      return v;\n    }\n  }\n}\n\nfunction serverRootUri() {\n  return PageConfig.getOption('rootUri');\n}\n\n/**\n * compare two URIs, discounting:\n * - drive capitalization\n * - uri encoding\n * TODO: probably use vscode-uri\n */\nexport function urisEqual(a: string, b: string) {\n  const winPaths = isWinPath(a) && isWinPath(b);\n  if (winPaths) {\n    a = normalizeWinPath(a);\n    b = normalizeWinPath(b);\n  }\n  return a === b || decodeURI(a) === decodeURI(b);\n}\n\n/**\n * grossly detect whether a URI represents a file on a windows drive\n */\nexport function isWinPath(uri: string) {\n  return uri.match(RE_PATH_ANCHOR);\n}\n\n/**\n * lowercase the drive component of a URI\n */\nexport function normalizeWinPath(uri: string) {\n  // Pyright encodes colon on Windows, see:\n  // https://github.com/jupyter-lsp/jupyterlab-lsp/pull/587#issuecomment-844225253\n  return uri.replace(RE_PATH_ANCHOR, it =>\n    it.replace('%3A', ':').toLowerCase()\n  );\n}\n\nexport function uriToContentsPath(child: string, parent?: string) {\n  parent = parent || serverRootUri();\n  if (parent == null) {\n    return null;\n  }\n  if (child.startsWith(parent)) {\n    // 'decodeURIComponent' is needed over 'decodeURI' for '@' in TS/JS paths\n    return decodeURIComponent(child.replace(parent, ''));\n  }\n  return null;\n}\n\n/**\n * The docs for many language servers show settings in the\n * VSCode format, e.g.: \"pyls.plugins.pyflakes.enabled\"\n *\n * VSCode converts that dot notation to JSON behind the scenes,\n * as the language servers themselves don't accept that syntax.\n */\nexport const expandPath = (\n  path: string[],\n  value: ReadonlyJSONValue\n): ReadonlyJSONObject => {\n  const obj: any = {};\n\n  let curr = obj;\n  path.forEach((prop: string, i: any) => {\n    curr[prop] = {};\n\n    if (i === path.length - 1) {\n      curr[prop] = value;\n    } else {\n      curr = curr[prop];\n    }\n  });\n\n  return obj;\n};\n\nexport const expandDottedPaths = (\n  obj: ReadonlyJSONObject\n): ReadonlyJSONObject => {\n  const settings: any = [];\n  for (let key in obj) {\n    const parsed = expandPath(key.split('.'), obj[key]);\n    settings.push(parsed);\n  }\n  return mergeWith({}, ...settings);\n};\n\ninterface ICollapsingResult {\n  result: Record<string, ReadonlyJSONValue>;\n  conflicts: Record<string, any[]>;\n}\n\nexport function collapseToDotted(obj: ReadonlyJSONObject): ICollapsingResult {\n  const result: Record<string, ReadonlyJSONValue> = {};\n  const conflicts: Record<string, any[]> = {};\n\n  const collapse = (obj: any, root = ''): void => {\n    for (let [key, value] of Object.entries(obj)) {\n      const prefix = root ? root + '.' + key : key;\n      if (\n        value != null &&\n        typeof value === 'object' &&\n        !Array.isArray(value) &&\n        Object.keys(value!).length !== 0\n      ) {\n        collapse(value, prefix);\n      } else {\n        if (result.hasOwnProperty(prefix) && result[prefix] !== value) {\n          if (!conflicts.hasOwnProperty(prefix)) {\n            conflicts[prefix] = [];\n            conflicts[prefix].push(result[prefix]);\n          }\n          if (!conflicts[prefix].includes(value)) {\n            conflicts[prefix].push(value);\n          }\n        }\n        result[prefix] = value as ReadonlyJSONValue;\n      }\n    }\n  };\n  collapse(obj);\n\n  return {\n    result: result as any as ReadonlyJSONObject,\n    conflicts: conflicts\n  };\n}\n\nexport function escapeMarkdown(text: string) {\n  // note: keeping backticks for highlighting of code sections\n  text = text.replace(/([\\\\#*_[\\]])/g, '\\\\$1');\n  // escape HTML\n  const span = document.createElement('span');\n  span.textContent = text;\n  return span.innerHTML.replace(/\\n/g, '<br>').replace(/ {2}/g, '\\u00A0\\u00A0');\n}\n","import { EditorView } from '@codemirror/view';\nimport {\n  CodeJumper,\n  FileEditorJumper,\n  NotebookJumper\n} from '@jupyter-lsp/code-jumpers';\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport {\n  InputDialog,\n  ICommandPalette,\n  Notification\n} from '@jupyterlab/apputils';\nimport {\n  CodeMirrorEditor,\n  IEditorExtensionRegistry,\n  EditorExtensionRegistry\n} from '@jupyterlab/codemirror';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { IEditorTracker } from '@jupyterlab/fileeditor';\nimport {\n  IVirtualPosition,\n  ProtocolCoordinates,\n  WidgetLSPAdapter,\n  ILSPFeatureManager,\n  ILSPDocumentConnectionManager\n} from '@jupyterlab/lsp';\nimport { AnyLocation } from '@jupyterlab/lsp/lib/lsp';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport {\n  ITranslator,\n  TranslationBundle,\n  nullTranslator\n} from '@jupyterlab/translation';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport type * as lsp from 'vscode-languageserver-protocol';\nimport * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport jumpToSvg from '../../style/icons/jump-to.svg';\nimport { CodeJump as LSPJumpSettings, ModifierKey } from '../_jump_to';\nimport { ContextAssembler } from '../context';\nimport {\n  PositionConverter,\n  documentAtRootPosition,\n  editorAtRootPosition,\n  rootPositionToVirtualPosition,\n  rootPositionToEditorPosition\n} from '../converter';\nimport { FeatureSettings, Feature } from '../feature';\nimport { PLUGIN_ID } from '../tokens';\nimport { getModifierState, uriToContentsPath, urisEqual } from '../utils';\nimport { BrowserConsole } from '../virtual/console';\nimport { VirtualDocument } from '../virtual/document';\n\nexport const jumpToIcon = new LabIcon({\n  name: 'lsp:jump-to',\n  svgstr: jumpToSvg\n});\n\nconst jumpBackIcon = new LabIcon({\n  name: 'lsp:jump-back',\n  svgstr: jumpToSvg.replace('jp-icon3', 'lsp-icon-flip-x jp-icon3')\n});\n\nconst enum JumpResult {\n  NoTargetsFound = 1,\n  PositioningFailure = 2,\n  PathResolutionFailure = 3,\n  AssumeSuccess = 4,\n  UnspecifiedFailure = 5,\n  AlreadyAtTarget = 6\n}\n\nexport class NavigationFeature extends Feature {\n  readonly id = NavigationFeature.id;\n  readonly capabilities: lsProtocol.ClientCapabilities = {\n    textDocument: {\n      declaration: {\n        dynamicRegistration: true,\n        linkSupport: true\n      },\n      definition: {\n        dynamicRegistration: true,\n        linkSupport: true\n      },\n      typeDefinition: {\n        dynamicRegistration: true,\n        linkSupport: true\n      },\n      implementation: {\n        dynamicRegistration: true,\n        linkSupport: true\n      }\n    }\n  };\n  protected settings: FeatureSettings<LSPJumpSettings>;\n  protected console = new BrowserConsole().scope('Navigation');\n  protected contextAssembler: ContextAssembler;\n\n  constructor(options: NavigationFeature.IOptions) {\n    super(options);\n    this.settings = options.settings;\n    this._trans = options.trans;\n    this.contextAssembler = options.contextAssembler;\n    const connectionManager = options.connectionManager;\n\n    options.editorExtensionRegistry.addExtension({\n      name: 'lsp:jump',\n      factory: options => {\n        const clickListener = EditorView.domEventHandlers({\n          mouseup: event => {\n            const adapter = [...connectionManager.adapters.values()].find(\n              adapter =>\n                adapter.widget.node.contains(event.target as HTMLElement)\n            );\n\n            if (!adapter) {\n              this.console.warn('Adapter not found');\n              return;\n            }\n            this._jumpOnMouseUp(event, adapter);\n          }\n        });\n\n        return EditorExtensionRegistry.createImmutableExtension([\n          clickListener\n        ]);\n      }\n    });\n\n    this._jumpers = new Map();\n    const { fileEditorTracker, notebookTracker, documentManager } = options;\n\n    if (fileEditorTracker !== null) {\n      fileEditorTracker.widgetAdded.connect((_, widget) => {\n        let fileEditor = widget.content;\n\n        if (fileEditor.editor instanceof CodeMirrorEditor) {\n          let jumper = new FileEditorJumper(widget, documentManager);\n          this._jumpers.set(widget.id, jumper);\n        }\n      });\n    }\n\n    notebookTracker.widgetAdded.connect(async (_, widget) => {\n      let jumper = new NotebookJumper(widget, documentManager);\n      this._jumpers.set(widget.id, jumper);\n    });\n  }\n\n  getJumper(adapter: WidgetLSPAdapter<any>): CodeJumper {\n    let current = adapter.widget.id;\n    return this._jumpers.get(current)!;\n  }\n\n  protected get modifierKey(): ModifierKey {\n    return this.settings.composite.modifierKey;\n  }\n\n  private _jumpOnMouseUp(event: MouseEvent, adapter: WidgetLSPAdapter<any>) {\n    // For Alt + click we need to wait for mouse up to enable users to create\n    // rectangular selections with Alt + drag.\n    if (this.modifierKey === 'Alt') {\n      document.body.addEventListener(\n        'mouseup',\n        (mouseUpEvent: MouseEvent) => {\n          if (mouseUpEvent.target !== event.target) {\n            // Cursor moved, possibly block selection was attempted, see:\n            // https://github.com/jupyter-lsp/jupyterlab-lsp/issues/823\n            return;\n          }\n          return this._jumpToDefinitionOrRefernce(event, adapter);\n        },\n        {\n          once: true\n        }\n      );\n    } else {\n      // For Ctrl + click we need to act on mouse down to prevent\n      // adding multiple cursors if jump were to occur.\n      return this._jumpToDefinitionOrRefernce(event, adapter);\n    }\n  }\n\n  private _jumpToDefinitionOrRefernce(\n    event: MouseEvent,\n    adapter: WidgetLSPAdapter<any>\n  ) {\n    const { button } = event;\n    const shouldJump =\n      button === 0 && getModifierState(event, this.modifierKey);\n    if (!shouldJump) {\n      return;\n    }\n\n    const accessorFromNode = this.contextAssembler.editorFromNode(\n      adapter,\n      event.target as HTMLElement\n    );\n    if (!accessorFromNode) {\n      this.console.warn(\n        'Editor accessor not found from node, falling back to activeEditor'\n      );\n    }\n    const editorAccessor = accessorFromNode\n      ? accessorFromNode\n      : adapter.activeEditor;\n\n    const rootPosition = this.contextAssembler.positionFromCoordinates(\n      event.clientX,\n      event.clientY,\n      adapter,\n      editorAccessor\n    );\n\n    if (rootPosition == null) {\n      this.console.warn(\n        'Could not retrieve root position from mouse event to jump to definition/reference'\n      );\n      return;\n    }\n\n    const virtualPosition = rootPositionToVirtualPosition(\n      adapter,\n      rootPosition\n    );\n    const document = documentAtRootPosition(adapter, rootPosition);\n\n    const connection = this.connectionManager.connections.get(document.uri)!;\n\n    const positionParams: lsp.TextDocumentPositionParams = {\n      textDocument: {\n        uri: document.documentInfo.uri\n      },\n      position: {\n        line: virtualPosition.line,\n        character: virtualPosition.ch\n      }\n    };\n\n    connection.clientRequests['textDocument/definition']\n      .request(positionParams)\n      .then(targets => {\n        this.handleJump(targets, positionParams, adapter, document)\n          .then((result: JumpResult | undefined) => {\n            if (\n              result === JumpResult.NoTargetsFound ||\n              result === JumpResult.AlreadyAtTarget\n            ) {\n              // definition was not found, or we are in definition already, suggest references\n              connection.clientRequests['textDocument/references']\n                .request({\n                  ...positionParams,\n                  context: { includeDeclaration: false }\n                })\n                .then(targets =>\n                  // TODO: explain that we are now presenting references?\n                  this.handleJump(targets, positionParams, adapter, document)\n                )\n                .catch(this.console.warn);\n            }\n          })\n          .catch(this.console.warn);\n      })\n      .catch(this.console.warn);\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  private _harmonizeLocations(locationData: AnyLocation): lsp.Location[] {\n    if (locationData == null) {\n      return [];\n    }\n\n    const locationsList = Array.isArray(locationData)\n      ? locationData\n      : [locationData];\n\n    return (locationsList as (lsp.Location | lsp.LocationLink)[])\n      .map((locationOrLink): lsp.Location | undefined => {\n        if ('targetUri' in locationOrLink) {\n          return {\n            uri: locationOrLink.targetUri,\n            range: locationOrLink.targetRange\n          };\n        } else if ('uri' in locationOrLink) {\n          return {\n            uri: locationOrLink.uri,\n            range: locationOrLink.range\n          };\n        } else {\n          this.console.warn(\n            'Returned jump location is incorrect (no uri or targetUri):',\n            locationOrLink\n          );\n          return undefined;\n        }\n      })\n      .filter((location): location is lsp.Location => location != null);\n  }\n\n  private async _chooseTarget(locations: lsp.Location[]) {\n    if (locations.length > 1) {\n      const choices = locations.map(location => {\n        // TODO: extract the line, the line above and below, and show it\n        const path = this._resolvePath(location.uri) || location.uri;\n        return path + ', line: ' + location.range.start.line;\n      });\n\n      // TODO: use selector with preview, basically needs the ui-component\n      // from jupyterlab-citation-manager; let's try to move it to JupyterLab core\n      // (and re-implement command palette with it)\n      // the preview should use this.jumper.document_manager.services.contents\n\n      let getItemOptions = {\n        title: this._trans.__('Choose the jump target'),\n        okLabel: this._trans.__('Jump'),\n        items: choices\n      };\n      // TODO: use showHints() or completion-like widget instead?\n      const choice = await InputDialog.getItem(getItemOptions).catch(\n        this.console.warn\n      );\n      if (!choice || choice.value == null) {\n        this.console.warn('No choice selected for jump location selection');\n        return;\n      }\n      const choiceIndex = choices.indexOf(choice.value);\n      if (choiceIndex === -1) {\n        this.console.error(\n          'Choice selection error: please report this as a bug:',\n          choices,\n          choice\n        );\n        return;\n      }\n      return locations[choiceIndex];\n    } else {\n      return locations[0];\n    }\n  }\n\n  private _resolvePath(uri: string): string | null {\n    let contentsPath = uriToContentsPath(uri);\n\n    if (contentsPath == null) {\n      if (uri.startsWith('file://')) {\n        contentsPath = decodeURIComponent(uri.slice(7));\n      } else {\n        contentsPath = decodeURIComponent(uri);\n      }\n    }\n    return contentsPath;\n  }\n\n  async handleJump(\n    locationData: AnyLocation,\n    positionParams: lsp.TextDocumentPositionParams,\n    adapter: WidgetLSPAdapter<any>,\n    document: VirtualDocument\n  ) {\n    const locations = this._harmonizeLocations(locationData);\n    const targetInfo = await this._chooseTarget(locations);\n    const jumper = this.getJumper(adapter);\n\n    if (!targetInfo) {\n      Notification.info(this._trans.__('No jump targets found'), {\n        autoClose: 3 * 1000\n      });\n      return JumpResult.NoTargetsFound;\n    }\n\n    let { uri, range } = targetInfo;\n\n    let virtualPosition = PositionConverter.lsp_to_cm(\n      range.start\n    ) as IVirtualPosition;\n\n    if (urisEqual(uri, positionParams.textDocument.uri)) {\n      // if in current file, transform from the position within virtual document to the editor position:\n\n      // because `openForeign()` does not use new this.constructor, we need to workaround it for now:\n      // const rootPosition = document.transformVirtualToRoot(virtualPosition);\n      // https://github.com/jupyterlab/jupyterlab/issues/15126\n      const rootPosition =\n        VirtualDocument.prototype.transformVirtualToRoot.call(\n          document,\n          virtualPosition\n        );\n\n      if (rootPosition === null) {\n        this.console.warn(\n          'Could not jump: conversion from virtual position to editor position failed',\n          virtualPosition\n        );\n        return JumpResult.PositioningFailure;\n      }\n      const editorPosition = rootPositionToEditorPosition(\n        adapter,\n        rootPosition\n      );\n\n      const editorAccessor = editorAtRootPosition(adapter, rootPosition);\n\n      // TODO: getEditorIndex should work, but does not\n      // adapter.getEditorIndex(editorAccessor)\n      await editorAccessor.reveal();\n      const editor = editorAccessor.getEditor();\n      const editorIndex = adapter.editors.findIndex(\n        e => e.ceEditor.getEditor() === editor\n      );\n      if (editorIndex === -1) {\n        return JumpResult.PositioningFailure;\n      }\n\n      this.console.log(`Jumping to ${editorIndex}th editor of ${uri}`);\n      this.console.log('Jump target within editor:', editorPosition);\n\n      let contentsPath = adapter.widget.context.path;\n\n      const didUserChooseThis = locations.length > 1;\n\n      // note: we already know that URIs are equal, so just check the position range\n      if (\n        !didUserChooseThis &&\n        ProtocolCoordinates.isWithinRange(positionParams.position, range)\n      ) {\n        return JumpResult.AlreadyAtTarget;\n      }\n\n      jumper.globalJump({\n        line: editorPosition.line,\n        column: editorPosition.ch,\n        editorIndex,\n        isSymlink: false,\n        contentsPath\n      });\n      return JumpResult.AssumeSuccess;\n    } else {\n      // otherwise there is no virtual document and we expect the returned position to be source position:\n      let sourcePosition = PositionConverter.cm_to_ce(virtualPosition);\n      this.console.log(`Jumping to external file: ${uri}`);\n      this.console.log('Jump target (source location):', sourcePosition);\n\n      let jumpData = {\n        editorIndex: 0,\n        line: sourcePosition.line,\n        column: sourcePosition.column\n      };\n\n      // assume that we got a relative path to a file within the project\n      // TODO use is_relative() or something? It would need to be not only compatible\n      //  with different OSes but also with JupyterHub and other platforms.\n\n      // can it be resolved vs our guessed server root?\n      const contentsPath = this._resolvePath(uri);\n\n      if (contentsPath === null) {\n        this.console.warn('contents_path could not be resolved');\n        return JumpResult.PathResolutionFailure;\n      }\n\n      try {\n        await jumper.documentManager.services.contents.get(contentsPath, {\n          content: false\n        });\n        jumper.globalJump({\n          contentsPath,\n          ...jumpData,\n          isSymlink: false\n        });\n        return JumpResult.AssumeSuccess;\n      } catch (err) {\n        this.console.warn(err);\n      }\n\n      // TODO: user debugger source request?\n      jumper.globalJump({\n        contentsPath: URLExt.join('.lsp_symlink', contentsPath),\n        ...jumpData,\n        isSymlink: true\n      });\n      return JumpResult.AssumeSuccess;\n    }\n  }\n\n  private _trans: TranslationBundle;\n  private _jumpers: Map<string, CodeJumper>;\n}\n\nexport namespace NavigationFeature {\n  export interface IOptions extends Feature.IOptions {\n    settings: FeatureSettings<LSPJumpSettings>;\n    trans: TranslationBundle;\n    notebookTracker: INotebookTracker;\n    documentManager: IDocumentManager;\n    contextAssembler: ContextAssembler;\n    editorExtensionRegistry: IEditorExtensionRegistry;\n    fileEditorTracker: IEditorTracker | null;\n  }\n  export const id = PLUGIN_ID + ':jump_to';\n}\n\nexport namespace CommandIDs {\n  export const jumpToDefinition = 'lsp:jump-to-definition';\n  export const jumpToReference = 'lsp:jump-to-reference';\n  export const jumpBack = 'lsp:jump-back';\n}\n\nexport const JUMP_PLUGIN: JupyterFrontEndPlugin<void> = {\n  id: NavigationFeature.id,\n  requires: [\n    ILSPFeatureManager,\n    ISettingRegistry,\n    ILSPDocumentConnectionManager,\n    INotebookTracker,\n    IDocumentManager,\n    IEditorExtensionRegistry\n  ],\n  optional: [IEditorTracker, ICommandPalette, ITranslator],\n  autoStart: true,\n  activate: async (\n    app: JupyterFrontEnd,\n    featureManager: ILSPFeatureManager,\n    settingRegistry: ISettingRegistry,\n    connectionManager: ILSPDocumentConnectionManager,\n    notebookTracker: INotebookTracker,\n    documentManager: IDocumentManager,\n    editorExtensionRegistry: IEditorExtensionRegistry,\n    fileEditorTracker: IEditorTracker | null,\n    palette: ICommandPalette | null,\n    translator: ITranslator | null\n  ) => {\n    const trans = (translator || nullTranslator).load('jupyterlab_lsp');\n    const contextAssembler = new ContextAssembler({ app, connectionManager });\n    const settings = new FeatureSettings<LSPJumpSettings>(\n      settingRegistry,\n      NavigationFeature.id\n    );\n    await settings.ready;\n\n    if (settings.composite.disable) {\n      return;\n    }\n\n    const feature = new NavigationFeature({\n      settings,\n      connectionManager,\n      notebookTracker,\n      documentManager,\n      fileEditorTracker,\n      contextAssembler,\n      editorExtensionRegistry,\n      trans\n    });\n    featureManager.register(feature);\n\n    app.commands.addCommand(CommandIDs.jumpToDefinition, {\n      execute: async () => {\n        const context = contextAssembler.getContext();\n        if (!context) {\n          console.warn('Could not get context');\n          return;\n        }\n        const { connection, virtualPosition, document, adapter } = context;\n\n        if (!connection) {\n          Notification.warning(trans.__('Connection not found for jump'), {\n            autoClose: 4 * 1000\n          });\n          return;\n        }\n\n        const positionParams: lsp.TextDocumentPositionParams = {\n          textDocument: {\n            uri: document.documentInfo.uri\n          },\n          position: {\n            line: virtualPosition.line,\n            character: virtualPosition.ch\n          }\n        };\n        const targets = await connection.clientRequests[\n          'textDocument/definition'\n        ].request(positionParams);\n        await feature.handleJump(targets, positionParams, adapter, document);\n      },\n      label: trans.__('Jump to definition'),\n      icon: jumpToIcon,\n      isEnabled: () => {\n        const context = contextAssembler.getContext();\n        if (!context) {\n          console.warn('Could not get context');\n          return false;\n        }\n        const { connection } = context;\n        return connection ? connection.provides('definitionProvider') : false;\n      }\n    });\n\n    app.commands.addCommand(CommandIDs.jumpToReference, {\n      execute: async () => {\n        const context = contextAssembler.getContext();\n        if (!context) {\n          console.warn('Could not get context');\n          return;\n        }\n        const { connection, virtualPosition, document, adapter } = context;\n\n        if (!connection) {\n          Notification.warning(trans.__('Connection not found for jump'), {\n            autoClose: 5 * 1000\n          });\n          return;\n        }\n\n        const positionParams: lsp.TextDocumentPositionParams = {\n          textDocument: {\n            uri: document.documentInfo.uri\n          },\n          position: {\n            line: virtualPosition.line,\n            character: virtualPosition.ch\n          }\n        };\n        const targets = await connection.clientRequests[\n          'textDocument/references'\n        ].request({\n          ...positionParams,\n          context: { includeDeclaration: false }\n        });\n        await feature.handleJump(targets, positionParams, adapter, document);\n      },\n      label: trans.__('Jump to references'),\n      icon: jumpToIcon,\n      isEnabled: () => {\n        const context = contextAssembler.getContext();\n        if (!context) {\n          console.warn('Could not get context');\n          return false;\n        }\n        const { connection } = context;\n        return connection ? connection.provides('referencesProvider') : false;\n      }\n    });\n\n    app.commands.addCommand(CommandIDs.jumpBack, {\n      execute: async () => {\n        const context = contextAssembler.getContext();\n        if (!context) {\n          console.warn('Could not get context');\n          return;\n        }\n        feature.getJumper(context.adapter).globalJumpBack();\n      },\n      label: trans.__('Jump back'),\n      icon: jumpBackIcon,\n      isEnabled: () => {\n        const context = contextAssembler.getContext();\n        if (!context) {\n          console.warn('Could not get context');\n          return false;\n        }\n        const { connection } = context;\n        return connection\n          ? connection.provides('definitionProvider') ||\n              connection.provides('referencesProvider')\n          : false;\n      }\n    });\n\n    for (const commandID of [\n      CommandIDs.jumpToDefinition,\n      CommandIDs.jumpToReference\n    ]) {\n      // add to menus\n      app.contextMenu.addItem({\n        selector: '.jp-Notebook .jp-CodeCell .jp-Editor',\n        command: commandID,\n        rank: 10\n      });\n\n      app.contextMenu.addItem({\n        selector: '.jp-FileEditor',\n        command: commandID,\n        rank: 0\n      });\n    }\n\n    for (const commandID of [\n      CommandIDs.jumpToDefinition,\n      CommandIDs.jumpToReference,\n      CommandIDs.jumpBack\n    ]) {\n      if (palette) {\n        palette.addItem({\n          command: commandID,\n          category: trans.__('Language Server Protocol')\n        });\n      }\n    }\n  }\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./diagnostics_listing.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./diagnostics_listing.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { IDocumentWidget } from '@jupyterlab/docregistry';\nimport { VirtualDocument, WidgetLSPAdapter } from '@jupyterlab/lsp';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport { caretDownIcon, caretUpIcon } from '@jupyterlab/ui-components';\nimport React, { ReactElement } from 'react';\nimport * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport { CodeDiagnostics as LSPDiagnosticsSettings } from '../../_diagnostics';\nimport { DocumentLocator } from '../../components/utils';\nimport { PositionConverter } from '../../converter';\nimport { IFeatureSettings } from '../../feature';\nimport { DiagnosticSeverity } from '../../lsp';\n\nimport { IEditorDiagnostic } from './tokens';\n\nimport '../../../style/diagnostics_listing.css';\n\nexport const DIAGNOSTICS_LISTING_CLASS = 'lsp-diagnostics-listing';\nconst DIAGNOSTICS_PLACEHOLDER_CLASS = 'lsp-diagnostics-placeholder';\n\nexport class DiagnosticsDatabase extends Map<\n  VirtualDocument,\n  IEditorDiagnostic[]\n> {\n  get all(): IEditorDiagnostic[] {\n    return [].concat.apply([], this.values() as any);\n  }\n}\n\nexport interface IDiagnosticsRow {\n  data: IEditorDiagnostic;\n  key: string;\n  document: VirtualDocument;\n  /**\n   * Cell number is the ordinal, 1-based cell identifier displayed to the user.\n   */\n  cellNumber?: number;\n}\n\ninterface IListingContext {\n  db: DiagnosticsDatabase;\n  adapter: WidgetLSPAdapter<IDocumentWidget>;\n}\n\ninterface IColumnOptions {\n  id: string;\n  label: string;\n  renderCell(data: IDiagnosticsRow, context?: IListingContext): ReactElement;\n  sort(a: IDiagnosticsRow, b: IDiagnosticsRow): number;\n  isAvailable?(context: IListingContext): boolean;\n}\n\nclass Column {\n  public isVisible: boolean;\n\n  constructor(private options: IColumnOptions) {\n    this.isVisible = true;\n  }\n\n  renderCell(data: IDiagnosticsRow, context: IListingContext) {\n    return this.options.renderCell(data, context);\n  }\n\n  sort(a: IDiagnosticsRow, b: IDiagnosticsRow) {\n    return this.options.sort(a, b);\n  }\n\n  get id(): string {\n    return this.options.id;\n  }\n\n  isAvailable(context: IListingContext) {\n    if (this.options.isAvailable != null) {\n      return this.options.isAvailable(context);\n    }\n    return true;\n  }\n\n  renderHeader(listing: DiagnosticsListing): ReactElement {\n    return (\n      <SortableTH\n        label={this.options.label}\n        id={this.id}\n        listing={listing}\n        key={this.id}\n      />\n    );\n  }\n}\n\nfunction SortableTH(props: {\n  id: string;\n  label: string;\n  listing: DiagnosticsListing;\n}): ReactElement {\n  const isSortKey = props.id === props.listing.sortKey;\n  const sortIcon =\n    !isSortKey || props.listing.sortDirection === 1\n      ? caretUpIcon\n      : caretDownIcon;\n  return (\n    <th\n      key={props.id}\n      onClick={() => props.listing.sort(props.id)}\n      className={isSortKey ? 'lsp-sorted-header' : undefined}\n      data-id={props.id}\n    >\n      <div>\n        <label>{props.label}</label>\n        <sortIcon.react tag=\"span\" className=\"lsp-sort-icon\" />\n      </div>\n    </th>\n  );\n}\n\nexport function messageWithoutCode(diagnostic: lsProtocol.Diagnostic) {\n  let message = diagnostic.message;\n  let codeString = '' + diagnostic.code;\n  if (\n    diagnostic.code != null &&\n    diagnostic.code !== '' &&\n    message.startsWith(codeString + '')\n  ) {\n    return message.slice(codeString.length).trim();\n  }\n  return message;\n}\n\nexport class DiagnosticsListing extends VDomRenderer<DiagnosticsListing.Model> {\n  sortKey = 'Severity';\n  sortDirection = 1;\n  private _diagnostics: Map<string, IDiagnosticsRow>;\n  protected trans: TranslationBundle;\n  public columns: Column[];\n  protected severityTranslations: Record<\n    keyof typeof DiagnosticSeverity,\n    string\n  >;\n\n  constructor(model: DiagnosticsListing.Model) {\n    super(model);\n    const trans = model.trans;\n    this.trans = trans;\n    this.severityTranslations = {\n      Error: trans.__('Error'),\n      Warning: trans.__('Warning'),\n      Information: trans.__('Information'),\n      Hint: trans.__('Hint')\n    };\n\n    this.columns = [\n      new Column({\n        id: 'Virtual Document',\n        label: this.trans.__('Virtual Document'),\n        renderCell: (row, context: IListingContext) => (\n          <td key={0}>\n            <DocumentLocator\n              document={row.document}\n              adapter={context.adapter}\n              trans={this.trans}\n            />\n          </td>\n        ),\n        sort: (a, b) => a.document.idPath.localeCompare(b.document.idPath),\n        isAvailable: context => context.db.size > 1\n      }),\n      new Column({\n        id: 'Message',\n        label: this.trans.__('Message'),\n        renderCell: row => {\n          let message = messageWithoutCode(row.data.diagnostic);\n          return <td key={1}>{message}</td>;\n        },\n        sort: (a, b) =>\n          a.data.diagnostic.message.localeCompare(b.data.diagnostic.message)\n      }),\n      new Column({\n        id: 'Code',\n        label: this.trans.__('Code'),\n        renderCell: row => <td key={2}>{row.data.diagnostic.code}</td>,\n        sort: (a, b) =>\n          (a.data.diagnostic.code + '').localeCompare(\n            b.data.diagnostic.source + ''\n          )\n      }),\n      new Column({\n        id: 'Severity',\n        label: this.trans.__('Severity'),\n        // TODO: use default diagnostic severity\n        renderCell: row => {\n          const severity = DiagnosticSeverity[\n            row.data.diagnostic.severity || 1\n          ] as keyof typeof DiagnosticSeverity;\n          return (\n            <td key={3}>{this.severityTranslations[severity] || severity}</td>\n          );\n        },\n        sort: (a, b) => {\n          if (!a.data.diagnostic.severity) {\n            return +1;\n          }\n          if (!b.data.diagnostic.severity) {\n            return -1;\n          }\n          return a.data.diagnostic.severity > b.data.diagnostic.severity\n            ? 1\n            : -1;\n        }\n      }),\n      new Column({\n        id: 'Source',\n        label: this.trans.__('Source'),\n        renderCell: row => <td key={4}>{row.data.diagnostic.source}</td>,\n        sort: (a, b) => {\n          if (!a.data.diagnostic.source) {\n            return +1;\n          }\n          if (!b.data.diagnostic.source) {\n            return -1;\n          }\n          return a.data.diagnostic.source.localeCompare(\n            b.data.diagnostic.source\n          );\n        }\n      }),\n      new Column({\n        id: 'Cell',\n        label: this.trans.__('Cell'),\n        renderCell: row => <td key={5}>{row.cellNumber}</td>,\n        sort: (a, b) =>\n          a.cellNumber! - b.cellNumber! ||\n          a.data.range.start.line - b.data.range.start.line ||\n          a.data.range.start.ch - b.data.range.start.ch,\n        isAvailable: context => context.adapter.hasMultipleEditors\n      }),\n      new Column({\n        id: 'Line:Ch',\n        label: this.trans.__('Line:Ch'),\n        renderCell: row => (\n          <td key={6}>\n            {row.data.range.start.line}:{row.data.range.start.ch}\n          </td>\n        ),\n        sort: (a, b) =>\n          a.data.range.start.line - b.data.range.start.line ||\n          a.data.range.start.ch - b.data.range.start.ch\n      })\n    ];\n  }\n\n  sort(key: string) {\n    if (key === this.sortKey) {\n      this.sortDirection = this.sortDirection * -1;\n    } else {\n      this.sortKey = key;\n      this.sortDirection = 1;\n    }\n    this.update();\n  }\n\n  render() {\n    let diagnosticsDatabase = this.model.diagnostics;\n    const adapter = this.model.adapter;\n    if (diagnosticsDatabase == null || !adapter) {\n      return (\n        <div className={DIAGNOSTICS_PLACEHOLDER_CLASS}>\n          <h3>No diagnostics</h3>\n          {this.trans.__(\n            'Diagnostics panel shows linting results in notebooks and files connected to a language server.'\n          )}\n        </div>\n      );\n    }\n    if (diagnosticsDatabase.size === 0) {\n      return (\n        <div className={DIAGNOSTICS_PLACEHOLDER_CLASS}>\n          {this.trans.__('No issues detected, great job!')}\n        </div>\n      );\n    }\n\n    let byDocument = Array.from(diagnosticsDatabase).map(\n      ([virtualDocument, diagnostics]) => {\n        if (virtualDocument.isDisposed) {\n          return [];\n        }\n        return diagnostics.map((diagnosticData, i) => {\n          let cellNumber: number | null = null;\n          if (adapter.hasMultipleEditors) {\n            const cellIndex = adapter.editors.findIndex(\n              value => value.ceEditor == diagnosticData.editorAccessor\n            );\n            cellNumber = cellIndex + 1;\n          }\n          return {\n            data: diagnosticData,\n            key: virtualDocument.uri + ',' + i,\n            document: virtualDocument,\n            cellNumber: cellNumber\n          } as IDiagnosticsRow;\n        });\n      }\n    );\n    let flattened: IDiagnosticsRow[] = ([] as IDiagnosticsRow[]).concat.apply(\n      [],\n      byDocument\n    );\n    this._diagnostics = new Map(flattened.map(row => [row.key, row]));\n\n    let sortedColumn = this.columns.filter(\n      column => column.id === this.sortKey\n    )[0];\n    let sorter = sortedColumn.sort.bind(sortedColumn);\n    let sorted = flattened.sort((a, b) => sorter(a, b) * this.sortDirection);\n\n    let context: IListingContext = {\n      db: diagnosticsDatabase,\n      adapter: adapter\n    };\n\n    let columnsToDisplay = this.columns.filter(\n      column => column.isAvailable(context) && column.isVisible\n    );\n\n    let elements = sorted.map(row => {\n      let cells = columnsToDisplay.map(column =>\n        column.renderCell(row, context)\n      );\n\n      return (\n        <tr\n          key={row.key}\n          data-key={row.key}\n          onClick={() => {\n            return this.jumpTo(row);\n          }}\n        >\n          {cells}\n        </tr>\n      );\n    });\n\n    let columnsHeaders = columnsToDisplay.map(column =>\n      column.renderHeader(this)\n    );\n\n    return (\n      <table className={DIAGNOSTICS_LISTING_CLASS}>\n        <thead>\n          <tr>{columnsHeaders}</tr>\n        </thead>\n        <tbody>{elements}</tbody>\n      </table>\n    );\n  }\n\n  getDiagnostic(key: string): IDiagnosticsRow | undefined {\n    if (!this._diagnostics.has(key)) {\n      console.warn('Could not find the diagnostics row with key', key);\n      return;\n    }\n    return this._diagnostics.get(key);\n  }\n\n  async jumpTo(row: IDiagnosticsRow): Promise<void> {\n    const editor = await row.data.editorAccessor.reveal();\n    editor.setCursorPosition(PositionConverter.cm_to_ce(row.data.range.start));\n    editor.focus();\n  }\n}\n\nexport namespace DiagnosticsListing {\n  /**\n   * A VDomModel for the LSP of current file editor/notebook.\n   */\n  export class Model extends VDomModel {\n    diagnostics: DiagnosticsDatabase | null;\n    adapter: WidgetLSPAdapter<any> | null;\n    settings: IFeatureSettings<LSPDiagnosticsSettings>;\n    trans: TranslationBundle;\n\n    constructor(translatorBundle: TranslationBundle) {\n      super();\n      this.trans = translatorBundle;\n    }\n  }\n}\n","import { JupyterFrontEnd } from '@jupyterlab/application';\nimport { MainAreaWidget, Notification } from '@jupyterlab/apputils';\nimport { nullTranslator, TranslationBundle } from '@jupyterlab/translation';\nimport { LabIcon, copyIcon } from '@jupyterlab/ui-components';\nimport { Menu } from '@lumino/widgets';\n\nimport diagnosticsSvg from '../../../style/icons/diagnostics.svg';\nimport { jumpToIcon } from '../jump_to';\n\nimport { DiagnosticsFeature } from './feature';\nimport {\n  DIAGNOSTICS_LISTING_CLASS,\n  DiagnosticsDatabase,\n  DiagnosticsListing,\n  IDiagnosticsRow\n} from './listing';\n\nexport const diagnosticsIcon = new LabIcon({\n  name: 'lsp:diagnostics',\n  svgstr: diagnosticsSvg\n});\n\nconst CMD_COLUMN_VISIBILITY = 'lsp-set-column-visibility';\nconst CMD_JUMP_TO_DIAGNOSTIC = 'lsp-jump-to-diagnostic';\nconst CMD_COPY_DIAGNOSTIC = 'lsp-copy-diagnostic';\nconst CMD_IGNORE_DIAGNOSTIC_CODE = 'lsp-ignore-diagnostic-code';\nconst CMD_IGNORE_DIAGNOSTIC_MSG = 'lsp-ignore-diagnostic-message';\n\n/**\n * Escape pattern to form a base of a regular expression.\n * The snippet comes from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n * and is in the Public Domain (CC0):\n *  > Any copyright is dedicated to the Public Domain.\n *  > http://creativecommons.org/publicdomain/zero/1.0/\n */\nfunction escapeRegExp(string: string) {\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nclass DiagnosticsPanel {\n  private _content: DiagnosticsListing | null = null;\n  private _widget: MainAreaWidget<DiagnosticsListing> | null = null;\n  feature: DiagnosticsFeature;\n  isRegistered = false;\n  trans: TranslationBundle;\n\n  constructor(trans: TranslationBundle) {\n    this.trans = trans;\n  }\n\n  get widget() {\n    if (this._widget == null || this._widget.content.model == null) {\n      if (this._widget && !this._widget.isDisposed) {\n        this._widget.dispose();\n      }\n      this._widget = this.initWidget();\n    }\n    return this._widget;\n  }\n\n  get content() {\n    return this.widget.content;\n  }\n\n  protected initWidget() {\n    this._content = new DiagnosticsListing(\n      new DiagnosticsListing.Model(this.trans)\n    );\n    this._content.model.diagnostics = new DiagnosticsDatabase();\n    this._content.addClass('lsp-diagnostics-panel-content');\n    const widget = new MainAreaWidget({ content: this._content });\n    widget.id = 'lsp-diagnostics-panel';\n    widget.title.label = this.trans.__('Diagnostics Panel');\n    widget.title.closable = true;\n    widget.title.icon = diagnosticsIcon;\n    return widget;\n  }\n\n  update() {\n    // if not attached, do not bother to update\n    if (!this.widget.isAttached) {\n      return;\n    }\n    this.widget.content.update();\n  }\n\n  register(app: JupyterFrontEnd) {\n    const widget = this.widget;\n\n    let getColumn = (id: string) => {\n      // TODO: a hashmap in the panel itself?\n      for (let column of widget.content.columns) {\n        if (column.id === id) {\n          return column;\n        }\n      }\n      return undefined;\n    };\n\n    /** Columns Menu **/\n    let columnsMenu = new Menu({ commands: app.commands });\n    columnsMenu.title.label = this.trans.__('Panel columns');\n\n    app.commands.addCommand(CMD_COLUMN_VISIBILITY, {\n      execute: args => {\n        let column = getColumn(args['id'] as string)!;\n        column.isVisible = !column.isVisible;\n        widget.update();\n      },\n      label: args => this.trans.__(args['id'] as string),\n      isToggled: args => {\n        let column = getColumn(args['id'] as string);\n        return column ? column.isVisible : false;\n      }\n    });\n\n    for (let column of widget.content.columns) {\n      columnsMenu.addItem({\n        command: CMD_COLUMN_VISIBILITY,\n        args: { id: column.id }\n      });\n    }\n    app.contextMenu.addItem({\n      selector: '.' + DIAGNOSTICS_LISTING_CLASS + ' th',\n      submenu: columnsMenu,\n      type: 'submenu'\n    });\n\n    /** Diagnostics Menu **/\n    let ignoreDiagnosticsMenu = new Menu({ commands: app.commands });\n    ignoreDiagnosticsMenu.title.label = this.trans.__(\n      'Ignore diagnostics like this'\n    );\n\n    let getRow = (): IDiagnosticsRow | undefined => {\n      let tr = app.contextMenuHitTest(\n        node => node.tagName.toLowerCase() == 'tr'\n      );\n      if (!tr) {\n        return;\n      }\n      return this.widget.content.getDiagnostic(tr.dataset.key!);\n    };\n\n    ignoreDiagnosticsMenu.addItem({\n      command: CMD_IGNORE_DIAGNOSTIC_CODE\n    });\n    ignoreDiagnosticsMenu.addItem({\n      command: CMD_IGNORE_DIAGNOSTIC_MSG\n    });\n    app.commands.addCommand(CMD_IGNORE_DIAGNOSTIC_CODE, {\n      execute: () => {\n        const row = getRow();\n        if (!row) {\n          console.warn(\n            'LPS: diagnostics row not found for ignore code execute()'\n          );\n          return;\n        }\n        const diagnostic = row.data.diagnostic;\n        let current = this.content.model.settings.composite.ignoreCodes;\n        this.content.model.settings.set('ignoreCodes', [\n          ...current,\n          diagnostic.code\n        ]);\n        this.feature.refreshDiagnostics();\n      },\n      isVisible: () => {\n        const row = getRow();\n        if (!row) {\n          return false;\n        }\n        const diagnostic = row.data.diagnostic;\n        return !!diagnostic.code;\n      },\n      label: () => {\n        const row = getRow();\n        if (!row) {\n          return '';\n        }\n        const diagnostic = row.data.diagnostic;\n        return this.trans.__(\n          'Ignore diagnostics with \"%1\" code',\n          diagnostic.code\n        );\n      }\n    });\n    app.commands.addCommand(CMD_IGNORE_DIAGNOSTIC_MSG, {\n      execute: () => {\n        const row = getRow();\n        if (!row) {\n          console.warn(\n            'LPS: diagnostics row not found for ignore message execute()'\n          );\n          return;\n        }\n        const diagnostic = row.data.diagnostic;\n        let current =\n          this.content.model.settings.composite.ignoreMessagesPatterns;\n        this.content.model.settings.set('ignoreMessagesPatterns', [\n          ...current,\n          escapeRegExp(diagnostic.message)\n        ]);\n        this.feature.refreshDiagnostics();\n      },\n      isVisible: () => {\n        const row = getRow();\n        if (!row) {\n          return false;\n        }\n        const diagnostic = row.data.diagnostic;\n        return !!diagnostic.message;\n      },\n      label: () => {\n        const row = getRow();\n        if (!row) {\n          return '';\n        }\n        const diagnostic = row.data.diagnostic;\n        return this.trans.__(\n          'Ignore diagnostics with \"%1\" message',\n          diagnostic.message\n        );\n      }\n    });\n\n    app.commands.addCommand(CMD_JUMP_TO_DIAGNOSTIC, {\n      execute: () => {\n        const row = getRow();\n        if (!row) {\n          console.warn('LPS: diagnostics row not found for jump execute()');\n          return;\n        }\n        return this.widget.content.jumpTo(row);\n      },\n      label: this.trans.__('Jump to location'),\n      icon: jumpToIcon\n    });\n\n    app.commands.addCommand(CMD_COPY_DIAGNOSTIC, {\n      execute: () => {\n        const row = getRow();\n        if (!row) {\n          console.warn('LPS: diagnostics row not found for copy execute()');\n          return;\n        }\n        const message = row.data.diagnostic.message;\n        navigator.clipboard\n          .writeText(message)\n          .then(() => {\n            Notification.info(\n              this.trans.__('Successfully copied \"%1\" to clipboard', message),\n              {\n                autoClose: 3 * 1000\n              }\n            );\n          })\n          .catch(() => {\n            console.warn(\n              'Could not copy with clipboard.writeText interface, falling back'\n            );\n            window.prompt(\n              this.trans.__(\n                'Your browser protects clipboard from write operations; please copy the message manually'\n              ),\n              message\n            );\n          });\n      },\n      label: this.trans.__(\"Copy diagnostics' message\"),\n      icon: copyIcon\n    });\n\n    app.contextMenu.addItem({\n      selector: '.' + DIAGNOSTICS_LISTING_CLASS + ' tbody tr',\n      command: CMD_COPY_DIAGNOSTIC\n    });\n    app.contextMenu.addItem({\n      selector: '.' + DIAGNOSTICS_LISTING_CLASS + ' tbody tr',\n      command: CMD_JUMP_TO_DIAGNOSTIC\n    });\n    app.contextMenu.addItem({\n      selector: '.' + DIAGNOSTICS_LISTING_CLASS + ' tbody tr',\n      submenu: ignoreDiagnosticsMenu,\n      type: 'submenu'\n    });\n\n    this.isRegistered = true;\n  }\n}\n\nexport const diagnosticsPanel = new DiagnosticsPanel(\n  nullTranslator.load('jupyterlab_lsp')\n);\n","// MIT License\n// Copyright (C) 2018-2021 by Marijn Haverbeke <marijn@haverbeke.berlin> and others\n\nfunction svg(content: string, attrs = `viewBox=\"0 0 40 40\"`) {\n  return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(\n    content\n  )}</svg>')`;\n}\n\nexport function underline(color: string) {\n  return svg(\n    `<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`,\n    `width=\"6\" height=\"3\"`\n  );\n}\n","import { linter, Diagnostic, lintGutter } from '@codemirror/lint';\nimport { StateField, StateEffect, StateEffectType } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { INotebookShell } from '@jupyter-notebook/application';\nimport { ILabShell } from '@jupyterlab/application';\nimport { IThemeManager } from '@jupyterlab/apputils';\nimport {\n  CodeMirrorEditor,\n  IEditorExtensionRegistry,\n  EditorExtensionRegistry\n} from '@jupyterlab/codemirror';\nimport {\n  WidgetLSPAdapter,\n  IEditorPosition,\n  IVirtualPosition,\n  ILSPConnection,\n  VirtualDocument\n} from '@jupyterlab/lsp';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { StyleModule } from 'style-mod';\nimport * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport { CodeDiagnostics as LSPDiagnosticsSettings } from '../../_diagnostics';\nimport { PositionConverter } from '../../converter';\nimport { IFeatureSettings, Feature } from '../../feature';\nimport { DiagnosticSeverity, DiagnosticTag } from '../../lsp';\nimport { PLUGIN_ID } from '../../tokens';\nimport { urisEqual } from '../../utils';\nimport { BrowserConsole } from '../../virtual/console';\n\nimport { diagnosticsPanel } from './diagnostics';\nimport { DiagnosticsDatabase } from './listing';\nimport { IDiagnosticsFeature, IEditorDiagnostic } from './tokens';\nimport { underline } from './underline';\n\nconst SeverityMap: Record<\n  1 | 2 | 3 | 4,\n  'error' | 'warning' | 'info' | 'hint'\n> = {\n  1: 'error',\n  2: 'warning',\n  3: 'info',\n  4: 'hint'\n};\n\nexport class DiagnosticsFeature extends Feature implements IDiagnosticsFeature {\n  readonly id = DiagnosticsFeature.id;\n  readonly capabilities: lsProtocol.ClientCapabilities = {\n    textDocument: {\n      publishDiagnostics: {\n        tagSupport: {\n          valueSet: [DiagnosticTag.Deprecated, DiagnosticTag.Unnecessary]\n        }\n      }\n    }\n  };\n  protected settings: IFeatureSettings<LSPDiagnosticsSettings>;\n  protected console = new BrowserConsole().scope('Diagnostics');\n  private _firstResponseReceived: PromiseDelegate<void> = new PromiseDelegate();\n  private _diagnosticsDatabases = new WeakMap<\n    WidgetLSPAdapter<any>,\n    DiagnosticsDatabase\n  >();\n\n  constructor(options: DiagnosticsFeature.IOptions) {\n    super(options);\n    this.settings = options.settings;\n\n    options.connectionManager.connected.connect((manager, connectionData) => {\n      const { connection, virtualDocument } = connectionData;\n      const adapter = manager.adapters.get(virtualDocument.root.path)!;\n      // TODO: unregister\n      connection.serverNotifications['textDocument/publishDiagnostics'].connect(\n        async (connection: ILSPConnection, diagnostics) => {\n          await this.handleDiagnostic(diagnostics, virtualDocument, adapter);\n        }\n      );\n      virtualDocument.foreignDocumentClosed.connect((document, context) => {\n        // TODO: check if we need to cast\n        this.clearDocumentDiagnostics(adapter, context.foreignDocument);\n      });\n    });\n\n    //this.unique_editor_ids = new DefaultMap(() => this.unique_editor_ids.size);\n    this.settings.changed.connect(this.refreshDiagnostics, this);\n    this._trans = options.trans;\n    this._invalidate = StateEffect.define<void>();\n    this._invalidationCounter = StateField.define<number>({\n      create: () => 0,\n      update: (value, tr) => {\n        for (const e of tr.effects) {\n          if (e.is(this._invalidate)) {\n            value += 1;\n          }\n        }\n        return value;\n      }\n    });\n\n    const connectionManager = options.connectionManager;\n    // https://github.com/jupyterlab/jupyterlab/issues/14783\n    options.shell.currentChanged.connect(shell => {\n      if (shell.currentWidget == diagnosticsPanel.widget) {\n        // allow focusing on the panel\n        return;\n      }\n\n      const adapter = [...connectionManager.adapters.values()].find(\n        adapter => adapter.widget == shell.currentWidget\n      );\n\n      if (!adapter) {\n        this.switchDiagnosticsPanelSource(null);\n        // this dance should not be needed once https://github.com/jupyterlab/jupyterlab/pull/14920 is in,\n        // but we will need to continue listening to `currentChanged` signal anyways to make sure we show\n        // empty indicator in launcher or other widget which does not support linting.\n        let attemptsLeft = 3;\n        const retry = () => {\n          const adapter = [...connectionManager.adapters.values()].find(\n            adapter => adapter.widget == shell.currentWidget\n          );\n          attemptsLeft -= 1;\n          if (adapter) {\n            this.switchDiagnosticsPanelSource(adapter);\n            attemptsLeft = 0;\n          }\n          if (attemptsLeft == 0) {\n            connectionManager.connected.disconnect(retry);\n          }\n        };\n        connectionManager.connected.connect(retry);\n        this.console.debug(\n          'No adapter (yet?), will retry on next connected document'\n        );\n      } else {\n        this.switchDiagnosticsPanelSource(adapter);\n      }\n    });\n\n    const settings = options.settings;\n    const themeManager = options.themeManager;\n\n    this._reconfigureTheme();\n    document.head.appendChild(this._styleElement);\n\n    if (themeManager) {\n      themeManager.themeChanged.connect(() => {\n        this._reconfigureTheme();\n      });\n    }\n\n    options.editorExtensionRegistry.addExtension({\n      name: 'lsp:diagnostics',\n      factory: options => {\n        const source = async (view: EditorView) => {\n          let diagnostics: Diagnostic[] = [];\n\n          const adapter = [...connectionManager.adapters.values()].find(\n            adapter => adapter.widget.node.contains(view.contentDOM) // this is going to be problematic with the windowed notebook. Another solution is needed.\n          );\n\n          if (!adapter) {\n            this.console.debug(\n              'No adapter found for editor by model. Maybe not registered yet?'\n            );\n            return [];\n          }\n          // NHT: `response.version` could be checked against document versions\n          // and if non matches we could yield (raise an error or hang for a\n          // few seconds to trigger timeout). Because `response.version` is\n          // optional it would require further testing.\n\n          if (view.state.field(this._invalidationCounter) == 0) {\n            // If we are displaying the editor for the first time,\n            // e.g. after scrolling down in windowed notebook,\n            // do not wait for next update, show what we already know.\n\n            // TODO: this still fails when scrolling down fast and then\n            // scrolling up to the skipped cells because the state invalidation\n            // counter kicks in but diagnostics does not get rendered yet before\n            // we leave..\n            await this._firstResponseReceived.promise;\n          } else {\n            await adapter.updateFinished;\n          }\n\n          const database = this.getDiagnosticsDB(adapter);\n\n          for (const editorDiagnostics of database.values()) {\n            for (const editorDiagnostic of editorDiagnostics) {\n              const editor = editorDiagnostic.editorAccessor.getEditor() as\n                | CodeMirrorEditor\n                | undefined;\n\n              if (editor?.editor !== view) {\n                continue;\n              }\n              const diagnostic = editorDiagnostic.diagnostic;\n              const severity = SeverityMap[diagnostic.severity!];\n\n              const lines = view.state.doc.lines;\n              const lastLineLength = view.state.doc.line(lines).length;\n              const start = PositionConverter.cm_to_ce(\n                editorDiagnostic.range.start\n              );\n              const end = PositionConverter.cm_to_ce(\n                editorDiagnostic.range.end\n              );\n\n              const from = editor.getOffsetAt(\n                start.line >= lines\n                  ? {\n                      line: Math.min(start.line, lines),\n                      column: Math.min(start.column, lastLineLength)\n                    }\n                  : start\n              );\n              // TODO: this is wrong; there is however an issue if this is not applied\n              const to = editor.getOffsetAt(\n                end.line >= lines\n                  ? {\n                      line: Math.min(end.line, lines),\n                      column: Math.min(end.column, lastLineLength)\n                    }\n                  : end\n              );\n\n              const classNames = [];\n              for (const tag of new Set(diagnostic.tags)) {\n                classNames.push('cm-lsp-diagnostic-tag-' + DiagnosticTag[tag]);\n              }\n\n              diagnostics.push({\n                from: Math.min(from, view.state.doc.length),\n                to: Math.min(to, view.state.doc.length),\n                severity: severity,\n                message: diagnostic.message,\n                source: diagnostic.source,\n                markClass: classNames.join(' ')\n                // TODO: actions\n              });\n            }\n          }\n          return diagnostics;\n        };\n\n        // never run linter on typing - we will trigger it manually when update is needed\n        const lspLinter = linter(source, {\n          delay: settings.composite.debounceDelay || 250,\n          needsRefresh: update => {\n            const previous = update.startState.field(this._invalidationCounter);\n            const current = update.state.field(this._invalidationCounter);\n            return previous !== current;\n          }\n        });\n\n        const extensions = [lspLinter, this._invalidationCounter];\n        if (settings.composite.gutter) {\n          extensions.push(lintGutter());\n        }\n\n        return EditorExtensionRegistry.createImmutableExtension(extensions);\n      }\n    });\n  }\n\n  private _reconfigureTheme() {\n    const style = getComputedStyle(document.body);\n    const lintTheme = new StyleModule({\n      '.cm-editor .cm-lintRange-error': {\n        backgroundImage: underline(\n          style.getPropertyValue(\n            '--jp-editor-mirror-lsp-diagnostic-error-decoration-color'\n          )\n        )\n      },\n      '.cm-editor .cm-lintRange-warning': {\n        backgroundImage: underline(\n          style.getPropertyValue(\n            '--jp-editor-mirror-lsp-diagnostic-warning-decoration-color'\n          )\n        )\n      },\n      '.cm-editor .cm-lintRange-info': {\n        backgroundImage: underline(\n          style.getPropertyValue(\n            '--jp-editor-mirror-lsp-diagnostic-information-decoration-color'\n          )\n        )\n      },\n      '.cm-editor .cm-lintRange-hint': {\n        backgroundImage: underline(\n          style.getPropertyValue(\n            '--jp-editor-mirror-lsp-diagnostic-hint-decoration-color'\n          )\n        )\n      }\n    });\n    this._styleElement.innerHTML = lintTheme.getRules();\n  }\n\n  clearDocumentDiagnostics(\n    adapter: WidgetLSPAdapter<any>,\n    document: VirtualDocument\n  ) {\n    this.getDiagnosticsDB(adapter).set(document, []);\n  }\n\n  /**\n   * Allows access to the most recent diagnostics in context of the editor.\n   *\n   * One can use VirtualEditorForNotebook.find_cell_by_editor() to find\n   * the corresponding cell in notebook.\n   * Can be used to implement a Panel showing diagnostics list.\n   *\n   * Maps virtualDocument.uri to IEditorDiagnostic[].\n   */\n  public getDiagnosticsDB(adapter: WidgetLSPAdapter<any>): DiagnosticsDatabase {\n    // Note that virtual_editor can change at runtime (kernel restart)\n    if (!this._diagnosticsDatabases.has(adapter)) {\n      this._diagnosticsDatabases.set(adapter, new DiagnosticsDatabase());\n    }\n    return this._diagnosticsDatabases.get(adapter)!;\n  }\n\n  switchDiagnosticsPanelSource = (adapter: WidgetLSPAdapter<any> | null) => {\n    diagnosticsPanel.trans = this._trans;\n    if (adapter !== null) {\n      const diagnostics = this.getDiagnosticsDB(adapter);\n      if (diagnosticsPanel.content.model.diagnostics == diagnostics) {\n        return;\n      }\n      diagnosticsPanel.content.model.diagnostics = diagnostics;\n      diagnosticsPanel.content.model.settings = this.settings;\n      diagnosticsPanel.feature = this;\n    } else {\n      diagnosticsPanel.content.model.diagnostics = null;\n    }\n    diagnosticsPanel.content.model.adapter = adapter;\n    diagnosticsPanel.update();\n  };\n\n  protected diagnosticsByRange(\n    diagnostics: lsProtocol.Diagnostic[]\n  ): Map<lsProtocol.Range, lsProtocol.Diagnostic[]> {\n    // because Range is not a primitive type, the equality of the objects having\n    // the same parameters won't be compared (thus considered equal) in Map.\n\n    // instead, a intermediate step of mapping through a stringified representation of Range is needed:\n    // an alternative would be using nested [start line][start character][end line][end character] structure,\n    // which would increase the code complexity, but reduce memory use and may be slightly faster.\n    type RangeID = string;\n    const rangeIdToRange = new Map<RangeID, lsProtocol.Range>();\n    const rangeIdToDiagnostics = new Map<RangeID, lsProtocol.Diagnostic[]>();\n\n    function getRangeId(range: lsProtocol.Range): RangeID {\n      return (\n        range.start.line +\n        ',' +\n        range.start.character +\n        ',' +\n        range.end.line +\n        ',' +\n        range.end.character\n      );\n    }\n\n    diagnostics.forEach((diagnostic: lsProtocol.Diagnostic) => {\n      let range = diagnostic.range;\n      let rangeId = getRangeId(range);\n      rangeIdToRange.set(rangeId, range);\n      if (rangeIdToDiagnostics.has(rangeId)) {\n        let rangesList = rangeIdToDiagnostics.get(rangeId)!;\n        rangesList.push(diagnostic);\n      } else {\n        rangeIdToDiagnostics.set(rangeId, [diagnostic]);\n      }\n    });\n\n    let map = new Map<lsProtocol.Range, lsProtocol.Diagnostic[]>();\n\n    rangeIdToDiagnostics.forEach(\n      (rangeDiagnostics: lsProtocol.Diagnostic[], rangeId: RangeID) => {\n        let range = rangeIdToRange.get(rangeId)!;\n        map.set(range, rangeDiagnostics);\n      }\n    );\n\n    return map;\n  }\n\n  get defaultSeverity(): lsProtocol.DiagnosticSeverity {\n    return DiagnosticSeverity[this.settings.composite.defaultSeverity];\n  }\n\n  private filterDiagnostics(\n    diagnostics: lsProtocol.Diagnostic[]\n  ): lsProtocol.Diagnostic[] {\n    const ignoredDiagnosticsCodes = new Set(\n      this.settings.composite.ignoreCodes\n    );\n    const ignoredSeverities = new Set<number>(\n      this.settings.composite.ignoreSeverities.map(\n        severityName => DiagnosticSeverity[severityName]\n      )\n    );\n    const ignoredMessagesRegExp =\n      this.settings.composite.ignoreMessagesPatterns.map(\n        pattern => new RegExp(pattern)\n      );\n\n    return diagnostics.filter(diagnostic => {\n      let code = diagnostic.code;\n      if (\n        typeof code !== 'undefined' &&\n        // pygls servers return code null if value is missing (rather than undefined)\n        // which is a departure from the LSP specs: https://microsoft.github.io/language-server-protocol/specification#diagnostic\n        // there is an open issue: https://github.com/openlawlibrary/pygls/issues/124\n        // and PR: https://github.com/openlawlibrary/pygls/pull/132\n        // this also affects hover tooltips.\n        code !== null &&\n        ignoredDiagnosticsCodes.has(code.toString())\n      ) {\n        return false;\n      }\n      let severity = diagnostic.severity;\n      if (severity && ignoredSeverities.has(severity)) {\n        return false;\n      }\n      let message = diagnostic.message;\n      if (\n        message &&\n        ignoredMessagesRegExp.some(pattern => pattern.test(message))\n      ) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  setDiagnostics(\n    response: lsProtocol.PublishDiagnosticsParams,\n    document: VirtualDocument,\n    adapter: WidgetLSPAdapter<any>\n  ) {\n    let diagnosticsList: IEditorDiagnostic[] = [];\n    // TODO: test case for severity class always being set, even if diagnostic has no severity\n\n    let diagnosticsByRange = this.diagnosticsByRange(\n      this.filterDiagnostics(response.diagnostics)\n    );\n\n    diagnosticsByRange.forEach(\n      (diagnostics: lsProtocol.Diagnostic[], range: lsProtocol.Range) => {\n        const start = PositionConverter.lsp_to_cm(\n          range.start\n        ) as IVirtualPosition;\n        const end = PositionConverter.lsp_to_cm(range.end) as IVirtualPosition;\n        const lastLineNumber =\n          document.lastVirtualLine - document.blankLinesBetweenCells;\n        if (start.line > lastLineNumber) {\n          this.console.log(\n            `Out of range diagnostic (${start.line} line > ${lastLineNumber}) was skipped `,\n            diagnostics\n          );\n          return;\n        } else {\n          let lastLine = document.lastLine;\n          if (start.line == lastLineNumber && start.ch > lastLine.length) {\n            this.console.log(\n              `Out of range diagnostic (${start.ch} character > ${lastLine.length} at line ${lastLineNumber}) was skipped `,\n              diagnostics\n            );\n            return;\n          }\n        }\n        if (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore TODO\n          document.virtualLines\n            .get(start.line)!\n            .skipInspect.includes(document.idPath)\n        ) {\n          this.console.log(\n            'Ignoring inspections silenced for this document:',\n            diagnostics,\n            document.idPath,\n            start.line\n          );\n          return;\n        }\n\n        const editorAccessor = document.getEditorAtVirtualLine(start);\n\n        const startInEditor = document.transformVirtualToEditor(start);\n        let endInEditor: IEditorPosition | null;\n\n        if (startInEditor === null) {\n          this.console.warn(\n            'Start in editor could not be be determined for',\n            diagnostics\n          );\n          return;\n        }\n\n        // some servers return strange positions for ends\n        try {\n          endInEditor = document.transformVirtualToEditor(end);\n        } catch (err) {\n          this.console.warn('Malformed range for diagnostic', end);\n          endInEditor = { ...startInEditor, ch: startInEditor.ch + 1 };\n        }\n\n        if (endInEditor === null) {\n          this.console.warn(\n            'End in editor could not be be determined for',\n            diagnostics\n          );\n          return;\n        }\n\n        for (let diagnostic of diagnostics) {\n          diagnosticsList.push({\n            diagnostic,\n            editorAccessor: editorAccessor,\n            range: {\n              start: startInEditor,\n              end: endInEditor\n            }\n          });\n        }\n      }\n    );\n\n    const diagnosticsDB = this.getDiagnosticsDB(adapter);\n\n    const previousList = diagnosticsDB.get(document);\n    const editorsWhichHadDiagnostics = new Set(\n      previousList?.map(d => d.editorAccessor.getEditor())\n    );\n\n    const editorsWithDiagnostics = new Set(\n      diagnosticsList?.map(d => d.editorAccessor.getEditor())\n    );\n    diagnosticsDB.set(document, diagnosticsList);\n\n    // Refresh editors with diagnostics; this is needed because linter's\n    // `source()` method will only refresh the cell with changes, but a change\n    // in one cell can influence validity of code in all other cells (e.g. due\n    // to removal of variable definition or usage).\n    for (const block of adapter.editors) {\n      const editor = block.ceEditor.getEditor() as CodeMirrorEditor | undefined;\n      if (!editor) {\n        continue;\n      }\n      if (\n        !(\n          editorsWithDiagnostics.has(editor) ||\n          editorsWhichHadDiagnostics.has(editor)\n        )\n      ) {\n        continue;\n      }\n\n      editor.editor.dispatch({\n        effects: this._invalidate.of()\n      });\n    }\n  }\n\n  public handleDiagnostic = async (\n    response: lsProtocol.PublishDiagnosticsParams,\n    document: VirtualDocument,\n    adapter: WidgetLSPAdapter<any>\n  ) => {\n    // use optional chaining operator because the diagnostics message may come late (after the document was disposed)\n    if (!urisEqual(response.uri, document?.documentInfo?.uri)) {\n      return;\n    }\n\n    if (document.lastVirtualLine === 0) {\n      return;\n    }\n\n    try {\n      this._lastResponse = response;\n      this._lastDocument = document;\n      this._lastAdapter = adapter;\n      this.setDiagnostics(response, document, adapter);\n      const done = new Promise<void>(resolve => {\n        setTimeout(() => {\n          this._firstResponseReceived.resolve();\n          resolve();\n        }, 0);\n      });\n      diagnosticsPanel.update();\n      return done;\n    } catch (e) {\n      this.console.warn(e);\n    }\n  };\n\n  public refreshDiagnostics() {\n    if (this._lastResponse) {\n      this.setDiagnostics(\n        this._lastResponse,\n        this._lastDocument,\n        this._lastAdapter\n      );\n    }\n    diagnosticsPanel.update();\n  }\n\n  private _lastResponse: lsProtocol.PublishDiagnosticsParams;\n  private _lastDocument: VirtualDocument;\n  private _lastAdapter: WidgetLSPAdapter<any>;\n  private _trans: TranslationBundle;\n  private _invalidate: StateEffectType<void>;\n  private _invalidationCounter: StateField<number>;\n  private _styleElement: HTMLStyleElement = document.createElement('style');\n}\n\nexport namespace DiagnosticsFeature {\n  export interface IOptions extends Feature.IOptions {\n    settings: IFeatureSettings<LSPDiagnosticsSettings>;\n    shell: ILabShell | INotebookShell;\n    trans: TranslationBundle;\n    editorExtensionRegistry: IEditorExtensionRegistry;\n    themeManager: IThemeManager | null;\n  }\n  export const id = PLUGIN_ID + ':diagnostics';\n}\n","import { INotebookShell } from '@jupyter-notebook/application';\nimport {\n  ILayoutRestorer,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n  ILabShell\n} from '@jupyterlab/application';\nimport {\n  ICommandPalette,\n  IThemeManager,\n  MainAreaWidget,\n  WidgetTracker\n} from '@jupyterlab/apputils';\nimport { IEditorExtensionRegistry } from '@jupyterlab/codemirror';\nimport {\n  ILSPFeatureManager,\n  ILSPDocumentConnectionManager\n} from '@jupyterlab/lsp';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\n\nimport { CodeDiagnostics as LSPDiagnosticsSettings } from '../../_diagnostics';\nimport { ContextAssembler } from '../../context';\nimport { FeatureSettings } from '../../feature';\n\nimport { diagnosticsIcon, diagnosticsPanel } from './diagnostics';\nimport { DiagnosticsFeature } from './feature';\nimport { DiagnosticsListing } from './listing';\nimport { IDiagnosticsFeature } from './tokens';\n\nexport namespace CommandIDs {\n  export const showPanel = 'lsp:show-diagnostics-panel';\n}\n\nexport const DIAGNOSTICS_PLUGIN: JupyterFrontEndPlugin<IDiagnosticsFeature> = {\n  id: DiagnosticsFeature.id,\n  requires: [\n    ILSPFeatureManager,\n    ISettingRegistry,\n    ILSPDocumentConnectionManager,\n    IEditorExtensionRegistry\n  ],\n  optional: [ILayoutRestorer, IThemeManager, ICommandPalette, ITranslator],\n  autoStart: true,\n  activate: async (\n    app: JupyterFrontEnd,\n    featureManager: ILSPFeatureManager,\n    settingRegistry: ISettingRegistry,\n    connectionManager: ILSPDocumentConnectionManager,\n    editorExtensionRegistry: IEditorExtensionRegistry,\n    restorer: ILayoutRestorer | null,\n    themeManager: IThemeManager | null,\n    palette: ICommandPalette | null,\n    translator: ITranslator | null\n  ) => {\n    const trans = (translator || nullTranslator).load('jupyterlab_lsp');\n    const settings = new FeatureSettings<LSPDiagnosticsSettings>(\n      settingRegistry,\n      DiagnosticsFeature.id\n    );\n    await settings.ready;\n    const feature = new DiagnosticsFeature({\n      settings,\n      connectionManager,\n      shell: app.shell as ILabShell | INotebookShell,\n      editorExtensionRegistry,\n      themeManager,\n      trans\n    });\n    if (!settings.composite.disable) {\n      featureManager.register(feature);\n\n      const assembler = new ContextAssembler({\n        app,\n        connectionManager\n      });\n\n      const namespace = 'lsp-diagnostics';\n      const tracker = new WidgetTracker<MainAreaWidget<DiagnosticsListing>>({\n        namespace: namespace\n      });\n\n      app.commands.addCommand(CommandIDs.showPanel, {\n        execute: async () => {\n          const context = assembler.getContext();\n          let ref = null;\n          if (context) {\n            feature.switchDiagnosticsPanelSource(context.adapter);\n            ref = context.adapter.widgetId;\n          } else {\n            console.warn('Could not get context');\n          }\n\n          if (!diagnosticsPanel.isRegistered) {\n            diagnosticsPanel.trans = trans;\n            diagnosticsPanel.register(app);\n          }\n\n          const panelWidget = diagnosticsPanel.widget;\n          if (!panelWidget.isAttached) {\n            void tracker.add(panelWidget);\n            app.shell.add(panelWidget, 'main', {\n              ref: ref,\n              mode: 'split-bottom'\n            });\n          }\n          app.shell.activateById(panelWidget.id);\n          void tracker.save(panelWidget);\n        },\n        label: trans.__('Show diagnostics panel'),\n        icon: diagnosticsIcon,\n        isEnabled: () => {\n          // TODO notebook\n          return app.name != 'JupyterLab Classic';\n        }\n      });\n\n      // add to menus\n      app.contextMenu.addItem({\n        selector: '.jp-Notebook .jp-CodeCell .jp-Editor',\n        command: CommandIDs.showPanel,\n        rank: 10\n      });\n\n      app.contextMenu.addItem({\n        selector: '.jp-FileEditor',\n        command: CommandIDs.showPanel,\n        rank: 0\n      });\n\n      if (palette) {\n        palette.addItem({\n          command: CommandIDs.showPanel,\n          category: trans.__('Language Server Protocol')\n        });\n      }\n\n      if (restorer) {\n        void restorer.restore(tracker, {\n          command: CommandIDs.showPanel,\n          name: _ => 'listing'\n        });\n      }\n    }\n    return feature;\n  }\n};\n","import { StateField, StateEffect } from '@codemirror/state';\nimport { EditorView, Decoration, DecorationSet } from '@codemirror/view';\n\nexport interface IMark<Kinds> {\n  from: number;\n  to: number;\n  kind: Kinds;\n}\n\n/**\n * Manage marks in multiple editor views (e.g. cells).\n */\nexport interface ISimpleMarkManager<Kinds> {\n  putMarks(view: EditorView, positions: IMark<Kinds>[]): void;\n  /**\n   * Clear marks from all editor views.\n   */\n  clearAllMarks(): void;\n  clearEditorMarks(view: EditorView): void;\n}\n\nexport type MarkDecorationSpec = Parameters<typeof Decoration.mark>[0] & {\n  class: string;\n};\n\nnamespace Private {\n  export let specCounter = 0;\n}\n\nexport function createMarkManager<Kinds extends string | number>(\n  specs: Record<Kinds, MarkDecorationSpec>\n): ISimpleMarkManager<Kinds> {\n  const specId = ++Private.specCounter;\n  const kindToMark = Object.fromEntries(\n    Object.entries(specs).map(([k, spec]) => [\n      k as Kinds,\n      Decoration.mark({\n        ...(spec as MarkDecorationSpec),\n        _id: Private.specCounter\n      })\n    ])\n  ) as Record<Kinds, Decoration>;\n\n  const addMark = StateEffect.define<IMark<Kinds>>({\n    map: ({ from, to, kind }, change) => ({\n      from: change.mapPos(from),\n      to: change.mapPos(to),\n      kind\n    })\n  });\n\n  const removeMark = StateEffect.define<null>();\n\n  const markField = StateField.define<DecorationSet>({\n    create() {\n      return Decoration.none;\n    },\n    update(marks, tr) {\n      marks = marks.map(tr.changes);\n      for (let e of tr.effects) {\n        if (e.is(addMark)) {\n          marks = marks.update({\n            add: [\n              kindToMark[e.value.kind].range(\n                Math.min(e.value.from, tr.newDoc.length),\n                Math.min(e.value.to, tr.newDoc.length)\n              )\n            ]\n          });\n        } else if (e.is(removeMark)) {\n          marks = marks.update({\n            filter: (from, to, value) => {\n              return value.spec['_id'] !== specId;\n            }\n          });\n        }\n      }\n      return marks;\n    },\n    provide: f => EditorView.decorations.from(f)\n  });\n  const views = new Set<EditorView>();\n\n  return {\n    putMarks(view: EditorView, positions: IMark<Kinds>[]) {\n      const effects: StateEffect<unknown>[] = positions.map(position =>\n        addMark.of(position)\n      );\n\n      if (!view.state.field(markField, false)) {\n        effects.push(StateEffect.appendConfig.of([markField]));\n      }\n      view.dispatch({ effects });\n      views.add(view);\n    },\n    clearAllMarks() {\n      for (let view of views) {\n        this.clearEditorMarks(view);\n      }\n      views.clear();\n    },\n    clearEditorMarks(view: EditorView) {\n      const effects: StateEffect<unknown>[] = [removeMark.of(null)];\n      view.dispatch({ effects });\n    }\n  };\n}\n","import { EditorView } from '@codemirror/view';\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport {\n  CodeMirrorEditor,\n  IEditorExtensionRegistry,\n  EditorExtensionRegistry\n} from '@jupyterlab/codemirror';\nimport {\n  IVirtualPosition,\n  ILSPFeatureManager,\n  IEditorPosition,\n  ILSPDocumentConnectionManager,\n  WidgetLSPAdapter\n} from '@jupyterlab/lsp';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { Debouncer } from '@lumino/polling';\nimport type * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport highlightSvg from '../../style/icons/highlight.svg';\nimport { CodeHighlights as LSPHighlightsSettings } from '../_highlights';\nimport { ContextAssembler } from '../context';\nimport {\n  PositionConverter,\n  rootPositionToVirtualPosition,\n  editorPositionToRootPosition,\n  documentAtRootPosition,\n  rangeToEditorRange\n} from '../converter';\nimport { FeatureSettings, Feature } from '../feature';\nimport { DocumentHighlightKind } from '../lsp';\nimport { createMarkManager, ISimpleMarkManager } from '../marks';\nimport { PLUGIN_ID } from '../tokens';\nimport { BrowserConsole } from '../virtual/console';\nimport { VirtualDocument } from '../virtual/document';\n\nexport const highlightIcon = new LabIcon({\n  name: 'lsp:highlight',\n  svgstr: highlightSvg\n});\n\ninterface IEditorHighlight {\n  kind: DocumentHighlightKind;\n  from: number;\n  to: number;\n}\n\nexport class HighlightsFeature extends Feature {\n  readonly capabilities: lsProtocol.ClientCapabilities = {\n    textDocument: {\n      documentHighlight: {\n        dynamicRegistration: true\n      }\n    }\n  };\n  readonly id = HighlightsFeature.id;\n\n  protected settings: FeatureSettings<LSPHighlightsSettings>;\n  protected markManager: ISimpleMarkManager<DocumentHighlightKind>;\n  protected console = new BrowserConsole().scope('Highlights');\n\n  private _debouncedGetHighlight: Debouncer<\n    lsProtocol.DocumentHighlight[] | null,\n    void,\n    [VirtualDocument, IVirtualPosition]\n  >;\n  private _virtualPosition: IVirtualPosition;\n  private _versionSent: number;\n  private _lastToken: {\n    token: CodeEditor.IToken;\n    adapter: WidgetLSPAdapter<any>;\n  } | null = null;\n\n  constructor(options: HighlightsFeature.IOptions) {\n    super(options);\n    this.settings = options.settings;\n    const connectionManager = options.connectionManager;\n    this.markManager = createMarkManager({\n      [DocumentHighlightKind.Text]: { class: 'cm-lsp-highlight-Text' },\n      [DocumentHighlightKind.Read]: { class: 'cm-lsp-highlight-Read' },\n      [DocumentHighlightKind.Write]: { class: 'cm-lsp-highlight-Write' }\n    });\n\n    this._debouncedGetHighlight = this.createDebouncer();\n\n    this.settings.changed.connect(() => {\n      this._debouncedGetHighlight = this.createDebouncer();\n    });\n\n    options.editorExtensionRegistry.addExtension({\n      name: 'lsp:highlights',\n      factory: options => {\n        const updateListener = EditorView.updateListener.of(viewUpdate => {\n          if (\n            viewUpdate.docChanged ||\n            viewUpdate.selectionSet ||\n            viewUpdate.focusChanged\n          ) {\n            // TODO a better way to get the adapter here?\n            const adapter = [...connectionManager.adapters.values()].find(\n              adapter => adapter.widget.node.contains(viewUpdate.view.dom)\n            );\n            if (!adapter) {\n              this.console.warn('Adapter not found');\n              return;\n            }\n            this.onCursorActivity(adapter).catch(this.console.warn);\n          }\n        });\n        const eventListeners = EditorView.domEventHandlers({\n          blur: (e, view) => {\n            this.onBlur(view);\n          },\n          focus: event => {\n            const adapter = [...connectionManager.adapters.values()].find(\n              adapter =>\n                adapter.widget.node.contains(\n                  event.currentTarget! as HTMLElement\n                )\n            );\n            if (!adapter) {\n              this.console.warn('Adapter not found');\n              return;\n            }\n            this.onCursorActivity(adapter).catch(this.console.warn);\n          },\n          keydown: event => {\n            const adapter = [...connectionManager.adapters.values()].find(\n              adapter =>\n                adapter.widget.node.contains(\n                  event.currentTarget! as HTMLElement\n                )\n            );\n            if (!adapter) {\n              this.console.warn('Adapter not found');\n              return;\n            }\n            this.onCursorActivity(adapter).catch(this.console.warn);\n          }\n        });\n        return EditorExtensionRegistry.createImmutableExtension([\n          updateListener,\n          eventListeners\n        ]);\n      }\n    });\n  }\n\n  protected onBlur(view: EditorView) {\n    if (this.settings.composite.removeOnBlur) {\n      // Delayed evaluation to avoid error:\n      // `Error: Calls to EditorView.update are not allowed while an update is in progress`\n      setTimeout(() => {\n        this.markManager.clearEditorMarks(view);\n        this._lastToken = null;\n      }, 0);\n    }\n  }\n\n  protected handleHighlight(\n    items: lsProtocol.DocumentHighlight[] | null,\n    adapter: WidgetLSPAdapter<any>,\n    document: VirtualDocument\n  ) {\n    this.markManager.clearAllMarks();\n\n    if (!items) {\n      return;\n    }\n\n    const highlightsByEditor = new Map<\n      CodeEditor.IEditor,\n      IEditorHighlight[]\n    >();\n\n    for (let item of items) {\n      let range = rangeToEditorRange(adapter, item.range, null, document);\n      const editor = range.editor;\n\n      let optionsList = highlightsByEditor.get(editor);\n\n      if (!optionsList) {\n        optionsList = [];\n        highlightsByEditor.set(editor, optionsList);\n      }\n\n      optionsList.push({\n        kind: item.kind || DocumentHighlightKind.Text,\n        from: editor.getOffsetAt(PositionConverter.cm_to_ce(range.start)),\n        to: editor.getOffsetAt(PositionConverter.cm_to_ce(range.end))\n      });\n    }\n\n    for (const [editor, markerDefinitions] of highlightsByEditor.entries()) {\n      // CodeMirror5 performance test cases:\n      //   - one cell with 1000 `math.pi` and `import math`; move cursor to `math`,\n      //     wait for 1000 highlights, then move to `pi`:\n      //     - step-by-step:\n      //        - highlight `math`: 13.1s\n      //        - then highlight `pi`: 16.6s\n      //     - operation():\n      //        - highlight `math`: 160ms\n      //        - then highlight `pi`: 227ms\n      //     - CodeMirror6, measuring `markManager.putMarks`:\n      //        - highlight `math`: 181ms\n      //        - then highlight `pi`: 334ms\n      //   - 100 cells with `math.pi` and one with `import math`; move cursor to `math`,\n      //     wait for 1000 highlights, then move to `pi` (this is overhead control,\n      //     no gains expected):\n      //     - step-by-step:\n      //        - highlight `math`: 385ms\n      //        - then highlight `pi`: 683 ms\n      //     - operation():\n      //        - highlight `math`: 390ms\n      //        - then highlight `pi`: 870ms\n\n      const editorView = (editor as CodeMirrorEditor).editor;\n      this.markManager.putMarks(editorView, markerDefinitions);\n    }\n  }\n\n  protected createDebouncer() {\n    return new Debouncer<\n      lsProtocol.DocumentHighlight[] | null,\n      void,\n      [VirtualDocument, IVirtualPosition]\n    >(this.requestHighlights, this.settings.composite.debouncerDelay);\n  }\n\n  protected requestHighlights = async (\n    virtualDocument: VirtualDocument,\n    virtualPosition: IVirtualPosition\n  ) => {\n    const connection = this.connectionManager.connections.get(\n      virtualDocument.uri\n    )!;\n    if (\n      !(\n        connection.isReady &&\n        connection.serverCapabilities.documentHighlightProvider\n      )\n    ) {\n      return null;\n    }\n    this._versionSent = virtualDocument.documentInfo.version;\n    return await connection.clientRequests[\n      'textDocument/documentHighlight'\n    ].request({\n      textDocument: {\n        uri: virtualDocument.documentInfo.uri\n      },\n      position: {\n        line: virtualPosition.line,\n        character: virtualPosition.ch\n      }\n    });\n  };\n\n  protected async onCursorActivity(adapter: WidgetLSPAdapter<any>) {\n    if (!adapter.virtualDocument) {\n      this.console.log('virtualDocument not ready on adapter');\n      return;\n    }\n    await adapter.virtualDocument!.updateManager.updateDone;\n\n    // TODO: this is the same problem as in signature\n    // TODO: the assumption that updated editor = active editor will fail on RTC. How to get `CodeEditor.IEditor` and `Document.IEditor` from `EditorView`? we got `CodeEditor.IModel` from `options.model` but may need more context here.\n    const editorAccessor = adapter.activeEditor;\n    const editor = editorAccessor!.getEditor()!;\n    const position = editor.getCursorPosition();\n    const editorPosition = PositionConverter.ce_to_cm(\n      position\n    ) as IEditorPosition;\n\n    const rootPosition = editorPositionToRootPosition(\n      adapter,\n      editorAccessor!,\n      editorPosition\n    );\n\n    if (!rootPosition) {\n      this.console.debug('Root position not available');\n      return;\n    }\n\n    const document = documentAtRootPosition(adapter, rootPosition);\n\n    if (!document.documentInfo) {\n      this.console.debug('Root document lacks document info');\n      return;\n    }\n\n    const offset = editor.getOffsetAt(\n      PositionConverter.cm_to_ce(editorPosition)\n    );\n    const token = editor.getTokenAt(offset);\n\n    // if token has not changed, no need to update highlight, unless it is an empty token\n    // which would indicate that the cursor is at the first character; we also need to check\n    // adapter in case if user switched between documents/notebooks.\n    if (\n      this._lastToken &&\n      token.value === this._lastToken.token.value &&\n      adapter === this._lastToken.adapter &&\n      token.value !== ''\n    ) {\n      this.console.log(\n        'not requesting highlights (token did not change)',\n        token\n      );\n      return;\n    }\n\n    try {\n      const virtualPosition = rootPositionToVirtualPosition(\n        adapter,\n        rootPosition\n      );\n      this._virtualPosition = virtualPosition;\n\n      const [highlights] = await Promise.all([\n        // request the highlights as soon as possible\n        this._debouncedGetHighlight.invoke(document, virtualPosition),\n        // and in the meantime remove the old markers\n        async () => {\n          this.markManager.clearAllMarks();\n          this._lastToken = null;\n        }\n      ]);\n\n      // in the time the response returned the document might have been closed - check that\n      if (document.isDisposed) {\n        return;\n      }\n\n      let versionAfter = document.documentInfo.version;\n\n      /// if document was updated since (e.g. user pressed delete - token change, but position did not)\n      if (versionAfter !== this._versionSent) {\n        this.console.log(\n          'skipping highlights response delayed by ' +\n            (versionAfter - this._versionSent) +\n            ' document versions'\n        );\n        return;\n      }\n      // if cursor position changed (e.g. user moved cursor up - position has changed, but document version did not)\n      if (virtualPosition !== this._virtualPosition) {\n        this.console.log(\n          'skipping highlights response: cursor moved since it was requested'\n        );\n        return;\n      }\n\n      this.handleHighlight(highlights, adapter, document);\n      this._lastToken = {\n        token,\n        adapter\n      };\n    } catch (e) {\n      this.console.warn('Could not get highlights:', e);\n    }\n  }\n}\n\nexport namespace HighlightsFeature {\n  export interface IOptions extends Feature.IOptions {\n    settings: FeatureSettings<LSPHighlightsSettings>;\n    editorExtensionRegistry: IEditorExtensionRegistry;\n    contextAssembler: ContextAssembler;\n  }\n  export const id = PLUGIN_ID + ':highlights';\n}\n\nexport const HIGHLIGHTS_PLUGIN: JupyterFrontEndPlugin<void> = {\n  id: HighlightsFeature.id,\n  requires: [\n    ILSPFeatureManager,\n    ISettingRegistry,\n    IEditorExtensionRegistry,\n    ILSPDocumentConnectionManager\n  ],\n  autoStart: true,\n  activate: async (\n    app: JupyterFrontEnd,\n    featureManager: ILSPFeatureManager,\n    settingRegistry: ISettingRegistry,\n    editorExtensionRegistry: IEditorExtensionRegistry,\n    connectionManager: ILSPDocumentConnectionManager\n  ) => {\n    const contextAssembler = new ContextAssembler({ app, connectionManager });\n    const settings = new FeatureSettings<LSPHighlightsSettings>(\n      settingRegistry,\n      HighlightsFeature.id\n    );\n    await settings.ready;\n    if (settings.composite.disable) {\n      return;\n    }\n    const feature = new HighlightsFeature({\n      settings,\n      editorExtensionRegistry,\n      connectionManager,\n      contextAssembler\n    });\n    featureManager.register(feature);\n  }\n};\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n// (Parts of the FreeTooltip code are copy-paste from Tooltip, ideally this would be PRed be merged)\nimport { HoverBox } from '@jupyterlab/apputils';\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport { IDocumentWidget } from '@jupyterlab/docregistry';\nimport { IEditorPosition, isEqual, WidgetLSPAdapter } from '@jupyterlab/lsp';\nimport {\n  IRenderMime,\n  MimeModel,\n  IRenderMimeRegistry\n} from '@jupyterlab/rendermime';\nimport { Tooltip } from '@jupyterlab/tooltip';\nimport { Widget } from '@lumino/widgets';\nimport * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport { PositionConverter } from '../converter';\n\nconst MIN_HEIGHT = 20;\nconst MAX_HEIGHT = 250;\n\nconst CLASS_NAME = 'lsp-tooltip';\n\ninterface IFreeTooltipOptions extends Tooltip.IOptions {\n  /**\n   * Position at which the tooltip should be placed, or null (default) to use the current cursor position.\n   */\n  position: CodeEditor.IPosition | undefined;\n  /**\n   * HoverBox privilege.\n   */\n  privilege?: 'above' | 'below' | 'forceAbove' | 'forceBelow';\n  /**\n   * Alignment with respect to the current token.\n   */\n  alignment?: 'start' | 'end' | undefined;\n  /**\n   * default: true; ESC will always hide\n   */\n  hideOnKeyPress?: boolean;\n}\n\ntype Bundle = { 'text/plain': string } | { 'text/markdown': string };\n\n/**\n * Tooltip which can be placed  at any character, not only at the current position (derived from getCursorPosition)\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport class FreeTooltip extends Tooltip {\n  constructor(protected options: IFreeTooltipOptions) {\n    super(options);\n    this._setGeometry();\n  }\n\n  setBundle(bundle: Bundle) {\n    const model = new MimeModel({ data: bundle });\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const content: IRenderMime.IRenderer = this._content;\n    content\n      .renderModel(model)\n      .then(() => this._setGeometry())\n      .catch(console.warn);\n  }\n\n  handleEvent(event: Event): void {\n    if (this.isHidden || this.isDisposed) {\n      return;\n    }\n\n    const { node } = this;\n    const target = event.target as HTMLElement;\n\n    switch (event.type) {\n      case 'keydown': {\n        const keyCode = (event as KeyboardEvent).keyCode;\n        // ESC or Backspace cancel anyways\n        if (\n          node.contains(target) ||\n          (!this.options.hideOnKeyPress && keyCode != 27 && keyCode != 8)\n        ) {\n          return;\n        }\n        this.dispose();\n        break;\n      }\n      default:\n        super.handleEvent(event);\n        break;\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  private _setGeometry(): void {\n    // Find the start of the current token for hover box placement.\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const editor = this._editor as CodeEditor.IEditor;\n    const cursor: CodeEditor.IPosition =\n      this.options.position == null\n        ? editor.getCursorPosition()\n        : this.options.position;\n    let position: CodeEditor.IPosition | undefined;\n\n    if (this.options.alignment) {\n      const end = editor.getOffsetAt(cursor);\n      const line = editor.getLine(cursor.line);\n\n      if (!line) {\n        return;\n      }\n\n      switch (this.options.alignment) {\n        case 'start': {\n          const tokens = line.substring(0, end).split(/\\W+/);\n          const last = tokens[tokens.length - 1];\n          const start = last ? end - last.length : end;\n          position = editor.getPositionAt(start);\n          break;\n        }\n        case 'end': {\n          const tokens = line.substring(0, end).split(/\\W+/);\n          const last = tokens[tokens.length - 1];\n          const start = last ? end - last.length : end;\n          position = editor.getPositionAt(start);\n          break;\n        }\n      }\n    } else {\n      position = cursor;\n    }\n\n    if (!position) {\n      return;\n    }\n\n    const anchor = editor.getCoordinateForPosition(position) as ClientRect;\n    const style = window.getComputedStyle(this.node);\n    const paddingLeft = parseInt(style.paddingLeft!, 10) || 0;\n\n    // When the editor is attached to the main area, contain the hover box\n    // to the full area available (rather than to the editor itself); the available\n    // area excludes the toolbar, hence the first Widget child between MainAreaWidget\n    // and editor is preferred.\n    const host =\n      (editor.host.closest('.jp-MainAreaWidget > .lm-Widget') as HTMLElement) ||\n      editor.host;\n\n    // Calculate the geometry of the tooltip.\n    HoverBox.setGeometry({\n      anchor,\n      host: host,\n      maxHeight: MAX_HEIGHT,\n      minHeight: MIN_HEIGHT,\n      node: this.node,\n      offset: { horizontal: -1 * paddingLeft },\n      privilege: this.options.privilege || 'below',\n      style: style,\n      outOfViewDisplay: {\n        left: 'stick-inside',\n        right: 'stick-outside',\n        top: 'stick-outside',\n        bottom: 'stick-inside'\n      }\n    });\n  }\n\n  setPosition(position: CodeEditor.IPosition) {\n    this.options.position = position;\n    this._setGeometry();\n  }\n}\n\nexport namespace EditorTooltip {\n  export interface IOptions {\n    id?: string;\n    markup: lsProtocol.MarkupContent;\n    ceEditor: CodeEditor.IEditor;\n    position: IEditorPosition;\n    adapter: WidgetLSPAdapter<IDocumentWidget>;\n    className?: string;\n    tooltip?: Partial<IFreeTooltipOptions>;\n  }\n}\n\nfunction markupToBundle(markup: lsProtocol.MarkupContent): Bundle {\n  return markup.kind === 'plaintext'\n    ? { 'text/plain': markup.value }\n    : { 'text/markdown': markup.value };\n}\n\nexport class EditorTooltipManager {\n  private currentTooltip: FreeTooltip | null = null;\n  private currentOptions: EditorTooltip.IOptions | null;\n\n  constructor(private rendermimeRegistry: IRenderMimeRegistry) {}\n\n  create(options: EditorTooltip.IOptions): FreeTooltip {\n    this.remove();\n    this.currentOptions = options;\n    let { markup, position, adapter } = options;\n    let widget = adapter.widget;\n    const bundle = markupToBundle(markup);\n    const tooltip = new FreeTooltip({\n      ...(options.tooltip || {}),\n      anchor: widget.content,\n      bundle: bundle,\n      editor: options.ceEditor,\n      rendermime: this.rendermimeRegistry,\n      position: PositionConverter.cm_to_ce(position)\n    });\n    tooltip.addClass(CLASS_NAME);\n    if (options.className) {\n      tooltip.addClass(options.className);\n    }\n    Widget.attach(tooltip, document.body);\n    this.currentTooltip = tooltip;\n    return tooltip;\n  }\n\n  showOrCreate(options: EditorTooltip.IOptions): FreeTooltip {\n    const samePosition =\n      this.currentOptions &&\n      isEqual(this.currentOptions.position, options.position);\n    const sameMarkup =\n      this.currentOptions &&\n      this.currentOptions.markup.value === options.markup.value &&\n      this.currentOptions.markup.kind === options.markup.kind;\n    if (\n      this.currentTooltip !== null &&\n      !this.currentTooltip.isDisposed &&\n      this.currentOptions &&\n      this.currentOptions.adapter === options.adapter &&\n      (samePosition || sameMarkup) &&\n      this.currentOptions.ceEditor === options.ceEditor &&\n      this.currentOptions.id === options.id\n    ) {\n      // we only allow either position or markup change, because if both changed,\n      // then we may get into problematic race condition in sizing after bundle update.\n      if (!sameMarkup) {\n        this.currentOptions.markup = options.markup;\n        this.currentTooltip.setBundle(markupToBundle(options.markup));\n      }\n      if (!samePosition) {\n        // setting geometry only works when visible\n        this.currentTooltip.setPosition(\n          PositionConverter.cm_to_ce(options.position)\n        );\n      }\n      this.show();\n      return this.currentTooltip;\n    } else {\n      this.remove();\n      return this.create(options);\n    }\n  }\n\n  get position(): IEditorPosition {\n    return this.currentOptions!.position;\n  }\n\n  isShown(id?: string): boolean {\n    if (id && this.currentOptions && this.currentOptions?.id !== id) {\n      return false;\n    }\n    return (\n      this.currentTooltip !== null &&\n      !this.currentTooltip.isDisposed &&\n      this.currentTooltip.isVisible\n    );\n  }\n\n  hide() {\n    if (this.currentTooltip !== null) {\n      this.currentTooltip.hide();\n    }\n  }\n\n  show() {\n    if (this.currentTooltip !== null) {\n      this.currentTooltip.show();\n    }\n  }\n\n  remove() {\n    if (this.currentTooltip !== null) {\n      this.currentTooltip.dispose();\n      this.currentTooltip = null as any;\n    }\n  }\n}\n","import { EditorView } from '@codemirror/view';\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport {\n  CodeMirrorEditor,\n  IEditorExtensionRegistry,\n  EditorExtensionRegistry\n} from '@jupyterlab/codemirror';\nimport {\n  IRootPosition,\n  IVirtualPosition,\n  IEditorPosition,\n  ProtocolCoordinates,\n  ILSPFeatureManager,\n  isEqual,\n  ILSPDocumentConnectionManager,\n  WidgetLSPAdapter,\n  Document\n} from '@jupyterlab/lsp';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { Throttler } from '@lumino/polling';\nimport type * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport hoverSvg from '../../style/icons/hover.svg';\nimport { CodeHover as LSPHoverSettings, ModifierKey } from '../_hover';\nimport { EditorTooltipManager, FreeTooltip } from '../components/free_tooltip';\nimport { ContextAssembler } from '../context';\nimport {\n  PositionConverter,\n  documentAtRootPosition,\n  rootPositionToVirtualPosition,\n  rootPositionToEditorPosition,\n  editorPositionToRootPosition,\n  rangeToEditorRange,\n  IEditorRange\n} from '../converter';\nimport { FeatureSettings, Feature } from '../feature';\nimport { createMarkManager, ISimpleMarkManager } from '../marks';\nimport { PLUGIN_ID } from '../tokens';\nimport { getModifierState } from '../utils';\nimport { BrowserConsole } from '../virtual/console';\nimport { VirtualDocument } from '../virtual/document';\n\nexport const hoverIcon = new LabIcon({\n  name: 'lsp:hover',\n  svgstr: hoverSvg\n});\n\ninterface IResponseData {\n  response: lsProtocol.Hover;\n  document: VirtualDocument;\n  editorRange: IEditorRange;\n  ceEditor: CodeEditor.IEditor;\n}\n\n/**\n * Check whether mouse is close to given element (within a specified number of pixels)\n * @param what target element\n * @param who mouse event determining position and target\n * @param cushion number of pixels on each side defining \"closeness\" boundary\n */\nfunction isCloseTo(what: HTMLElement, who: MouseEvent, cushion = 50): boolean {\n  const target = who.type === 'mouseleave' ? who.relatedTarget : who.target;\n\n  if (what === target || what.contains(target as HTMLElement)) {\n    return true;\n  }\n  const whatRect = what.getBoundingClientRect();\n  return !(\n    who.x < whatRect.left - cushion ||\n    who.x > whatRect.right + cushion ||\n    who.y < whatRect.top - cushion ||\n    who.y > whatRect.bottom + cushion\n  );\n}\n\nclass ResponseCache {\n  protected _data: Array<IResponseData>;\n  get data() {\n    return this._data;\n  }\n\n  constructor(public maxSize: number) {\n    this._data = [];\n  }\n\n  store(item: IResponseData) {\n    const previousIndex = this._data.findIndex(\n      previous =>\n        previous.document === item.document &&\n        isEqual(previous.editorRange.start, item.editorRange.start) &&\n        isEqual(previous.editorRange.end, item.editorRange.end) &&\n        previous.editorRange.editor === item.editorRange.editor\n    );\n    if (previousIndex !== -1) {\n      this._data[previousIndex] = item;\n      return;\n    }\n\n    if (this._data.length >= this.maxSize) {\n      this._data.shift();\n    }\n    this._data.push(item);\n  }\n\n  clean() {\n    this._data = [];\n  }\n}\n\nfunction toMarkup(\n  content: string | lsProtocol.MarkedString\n): lsProtocol.MarkupContent {\n  if (typeof content === 'string') {\n    // coerce deprecated MarkedString to an MarkupContent; if given as a string it is markdown too,\n    // quote: \"It is either a markdown string or a code-block that provides a language and a code snippet.\"\n    // (https://microsoft.github.io/language-server-protocol/specifications/specification-3-17/#markedString)\n    return {\n      kind: 'markdown',\n      value: content\n    };\n  } else {\n    return {\n      kind: 'markdown',\n      value: '```' + content.language + '\\n' + content.value + '\\n```'\n    };\n  }\n}\n\ninterface IContext {\n  adapter: WidgetLSPAdapter<any>;\n  token: CodeEditor.IToken;\n  editor: CodeEditor.IEditor;\n  editorAccessor: Document.IEditor;\n}\n\nexport class HoverFeature extends Feature {\n  readonly capabilities: lsProtocol.ClientCapabilities = {\n    textDocument: {\n      hover: {\n        dynamicRegistration: true,\n        contentFormat: ['markdown', 'plaintext']\n      }\n    }\n  };\n  readonly id = HoverFeature.id;\n  tooltipManager: EditorTooltipManager;\n\n  protected console = new BrowserConsole().scope('Hover');\n  protected settings: FeatureSettings<LSPHoverSettings>;\n  protected lastHoverCharacter: IRootPosition | null = null;\n  private lastHoverResponse: lsProtocol.Hover | null;\n  protected hasMarker: boolean = false;\n  protected markManager: ISimpleMarkManager<'hover'>;\n  private virtualPosition: IVirtualPosition;\n  protected cache: ResponseCache;\n  protected contextAssembler: ContextAssembler;\n\n  private debouncedGetHover: Throttler<\n    Promise<lsProtocol.Hover | null>,\n    void,\n    [VirtualDocument, IVirtualPosition, IContext]\n  >;\n  private tooltip: FreeTooltip;\n  private _previousHoverRequest: Promise<\n    Promise<lsProtocol.Hover | null>\n  > | null = null;\n\n  constructor(options: HoverFeature.IOptions) {\n    super(options);\n    this.settings = options.settings;\n    this.tooltipManager = new EditorTooltipManager(options.renderMimeRegistry);\n    this.contextAssembler = options.contextAssembler;\n\n    this.cache = new ResponseCache(10);\n    const connectionManager = options.connectionManager;\n\n    this.markManager = createMarkManager({\n      hover: { class: 'cm-lsp-hover-available' }\n    });\n\n    options.editorExtensionRegistry.addExtension({\n      name: 'lsp:hover',\n      factory: options => {\n        const updateListener = EditorView.updateListener.of(viewUpdate => {\n          if (viewUpdate.docChanged) {\n            this.afterChange();\n          }\n        });\n        const eventListeners = EditorView.domEventHandlers({\n          mousemove: event => {\n            const adapter = [...connectionManager.adapters.values()].find(\n              adapter =>\n                adapter.widget.node.contains(event.target as HTMLElement)\n            );\n\n            if (!adapter) {\n              this.console.warn('Adapter not found');\n              return;\n            }\n\n            // this is used to hide the tooltip on leaving cells in notebook\n            this.updateUnderlineAndTooltip(event, adapter)\n              ?.then(keepTooltip => {\n                if (!keepTooltip) {\n                  this.maybeHideTooltip(event);\n                }\n              })\n              .catch(this.console.warn);\n          },\n          mouseleave: event => {\n            this.onMouseLeave(event);\n          },\n          // show hover after pressing the modifier key\n          keydown: event => {\n            const adapter = [...connectionManager.adapters.values()].find(\n              adapter =>\n                adapter.widget.node.contains(\n                  event.currentTarget! as HTMLElement\n                )\n            );\n            if (!adapter) {\n              this.console.warn('Adapter not found');\n              return;\n            }\n            this.onKeyDown(event, adapter);\n          }\n        });\n        return EditorExtensionRegistry.createImmutableExtension([\n          eventListeners,\n          updateListener\n        ]);\n      }\n    });\n\n    this.debouncedGetHover = this.createThrottler();\n\n    this.settings.changed.connect(() => {\n      this.cache.maxSize = this.settings.composite.cacheSize;\n      this.debouncedGetHover = this.createThrottler();\n    });\n  }\n\n  protected createThrottler() {\n    return new Throttler<\n      Promise<lsProtocol.Hover | null>,\n      void,\n      [VirtualDocument, IVirtualPosition, IContext]\n    >(this.getHover, {\n      limit: this.settings.composite.throttlerDelay || 0,\n      edge: 'trailing'\n    });\n  }\n\n  protected get modifierKey(): ModifierKey {\n    return this.settings.composite.modifierKey;\n  }\n\n  protected get isHoverAutomatic(): boolean {\n    return this.settings.composite.autoActivate;\n  }\n\n  protected restoreFromCache(\n    document: VirtualDocument,\n    virtualPosition: IVirtualPosition\n  ): IResponseData | null {\n    const { line, ch } = virtualPosition;\n    const matchingItems = this.cache.data.filter(cacheItem => {\n      if (cacheItem.document !== document) {\n        return false;\n      }\n      let range = cacheItem.response.range!;\n      return ProtocolCoordinates.isWithinRange({ line, character: ch }, range);\n    });\n    if (matchingItems.length > 1) {\n      this.console.warn(\n        'Potential hover cache malfunction: ',\n        virtualPosition,\n        matchingItems\n      );\n    }\n    return matchingItems.length != 0 ? matchingItems[0] : null;\n  }\n\n  protected onKeyDown = (\n    event: KeyboardEvent,\n    adapter: WidgetLSPAdapter<any>\n  ) => {\n    if (\n      getModifierState(event, this.modifierKey) &&\n      this.lastHoverCharacter !== null\n    ) {\n      // does not need to be shown if it is already visible (otherwise we would be creating an identical tooltip again!)\n      if (this.tooltip && this.tooltip.isVisible && !this.tooltip.isDisposed) {\n        return;\n      }\n      const document = documentAtRootPosition(adapter, this.lastHoverCharacter);\n      let responseData = this.restoreFromCache(document, this.virtualPosition);\n      if (responseData == null) {\n        return;\n      }\n      event.stopPropagation();\n      this.handleResponse(adapter, responseData, this.lastHoverCharacter, true);\n    }\n  };\n\n  protected onMouseLeave = (event: MouseEvent) => {\n    this.removeRangeHighlight();\n    this.maybeHideTooltip(event);\n  };\n\n  protected maybeHideTooltip(mouseEvent: MouseEvent) {\n    if (\n      typeof this.tooltip !== 'undefined' &&\n      !isCloseTo(this.tooltip.node, mouseEvent)\n    ) {\n      this.tooltip.dispose();\n    }\n  }\n\n  afterChange() {\n    // reset cache on any change in the document\n    this.cache.clean();\n    this.lastHoverCharacter = null;\n    this.removeRangeHighlight();\n  }\n\n  protected getHover = async (\n    virtualDocument: VirtualDocument,\n    virtualPosition: IVirtualPosition,\n    context: IContext\n  ): Promise<lsProtocol.Hover | null> => {\n    const connection = this.connectionManager.connections.get(\n      virtualDocument.uri\n    )!;\n    if (!(connection.isReady && connection.serverCapabilities.hoverProvider)) {\n      return null;\n    }\n    let response = await connection.clientRequests[\n      'textDocument/hover'\n    ].request({\n      textDocument: {\n        uri: virtualDocument.documentInfo.uri\n      },\n      position: {\n        line: virtualPosition.line,\n        character: virtualPosition.ch\n      }\n    });\n\n    if (response == null) {\n      return null;\n    }\n\n    if (typeof response.range !== 'undefined') {\n      return response;\n    }\n    // Harmonise response by adding range\n    const editorRange = this._getEditorRange(\n      context.adapter,\n      response,\n      context.token,\n      context.editor,\n      virtualDocument\n    );\n    return this._addRange(\n      context.adapter,\n      response,\n      editorRange,\n      context.editorAccessor\n    );\n  };\n\n  protected static getMarkupForHover(\n    response: lsProtocol.Hover\n  ): lsProtocol.MarkupContent {\n    let contents = response.contents;\n\n    if (typeof contents === 'string') {\n      contents = [contents as lsProtocol.MarkedString];\n    }\n\n    if (!Array.isArray(contents)) {\n      return contents as lsProtocol.MarkupContent;\n    }\n\n    let markups = contents.map(toMarkup);\n    if (markups.every(markup => markup.kind == 'plaintext')) {\n      return {\n        kind: 'plaintext',\n        value: markups.map(markup => markup.value).join('\\n')\n      };\n    } else {\n      return {\n        kind: 'markdown',\n        value: markups.map(markup => markup.value).join('\\n\\n')\n      };\n    }\n  }\n\n  /**\n   * marks the word if a tooltip is available.\n   * Displays tooltip if asked to do so.\n   *\n   * Returns true is the tooltip was shown.\n   */\n  public handleResponse = (\n    adapter: WidgetLSPAdapter<any>,\n    responseData: IResponseData,\n    rootPosition: IRootPosition,\n    showTooltip: boolean\n  ): boolean => {\n    let response = responseData.response;\n\n    // testing for object equality because the response will likely be reused from cache\n    if (this.lastHoverResponse != response) {\n      this.removeRangeHighlight();\n\n      const range = responseData.editorRange;\n      const editorView = (range.editor as CodeMirrorEditor).editor;\n      const from = range.editor.getOffsetAt(\n        PositionConverter.cm_to_ce(range.start)\n      );\n      const to = range.editor.getOffsetAt(\n        PositionConverter.cm_to_ce(range.end)\n      );\n      this.markManager.putMarks(editorView, [{ from, to, kind: 'hover' }]);\n      this.hasMarker = true;\n    }\n\n    this.lastHoverResponse = response;\n\n    if (showTooltip) {\n      const markup = HoverFeature.getMarkupForHover(response);\n      let editorPosition = rootPositionToEditorPosition(adapter, rootPosition);\n\n      this.tooltip = this.tooltipManager.showOrCreate({\n        markup,\n        position: editorPosition,\n        ceEditor: responseData.ceEditor,\n        adapter: adapter,\n        className: 'lsp-hover'\n      });\n      return true;\n    }\n    return false;\n  };\n\n  protected isTokenEmpty(token: CodeEditor.IToken) {\n    return token.value.length === 0;\n    // TODO  || token.type.length === 0? (sometimes the underline is shown on meaningless tokens)\n  }\n\n  protected isEventInsideVisible(event: MouseEvent) {\n    let target = event.target as HTMLElement;\n    return target.closest('.cm-scroller') != null;\n  }\n\n  protected isResponseUseful(response: lsProtocol.Hover) {\n    return (\n      response &&\n      response.contents &&\n      !(Array.isArray(response.contents) && response.contents.length === 0)\n    );\n  }\n\n  /**\n   * Returns true if the tooltip should stay.\n   */\n  protected async _updateUnderlineAndTooltip(\n    event: MouseEvent,\n    adapter: WidgetLSPAdapter<any>\n  ): Promise<boolean> {\n    const target = event.target;\n    // if over an empty space in a line (and not over a token) then not worth checking\n    if (\n      target == null\n      // TODO this no longer works in CodeMirror6 as it tires to avoid wrapping\n      // html elements as much as possible.\n      // || (target as HTMLElement).classList.contains('cm-line')\n    ) {\n      this.removeRangeHighlight();\n      return false;\n    }\n\n    const showTooltip =\n      this.isHoverAutomatic || getModifierState(event, this.modifierKey);\n\n    // Filtering is needed to determine in hovered character belongs to this virtual document\n\n    // TODO: or should the adapter be derived from model and passed as an argument? Or maybe we should try both?\n    // const adapter = this.contextAssembler.adapterFromNode(target as HTMLElement);\n\n    if (!adapter) {\n      this.removeRangeHighlight();\n      return false;\n    }\n\n    // We cannot just use:\n    // > const editorAccessor = adapter.activeEditor\n    // as it relies on the editor under the cursor being the active editor, which is not the case in notebook,\n    // especially for actions invoked using mouse (hover, rename from context menu).\n    const accessorFromNode = this.contextAssembler.editorFromNode(\n      adapter,\n      target as HTMLElement\n    );\n    if (!accessorFromNode) {\n      this.console.warn(\n        'Editor accessor not found from node, falling back to activeEditor'\n      );\n    }\n    const editorAccessor = accessorFromNode\n      ? accessorFromNode\n      : adapter.activeEditor;\n\n    if (!editorAccessor) {\n      this.removeRangeHighlight();\n      this.console.warn('Could not find editor accessor');\n      return false;\n    }\n\n    const rootPosition = this.contextAssembler.positionFromCoordinates(\n      event.clientX,\n      event.clientY,\n      adapter,\n      editorAccessor\n    );\n\n    // happens because some regions of the editor (between lines) have no characters\n    if (rootPosition == null) {\n      this.removeRangeHighlight();\n      return false;\n    }\n\n    const editor = editorAccessor.getEditor();\n    if (!editor) {\n      this.console.warn('Editor not available from accessor');\n      this.removeRangeHighlight();\n      return false;\n    }\n\n    const editorPosition = rootPositionToEditorPosition(adapter, rootPosition);\n\n    const offset = editor.getOffsetAt(\n      PositionConverter.cm_to_ce(editorPosition)\n    );\n    const token = editor.getTokenAt(offset);\n\n    const document = documentAtRootPosition(adapter, rootPosition);\n\n    if (\n      this.isTokenEmpty(token) ||\n      //document !== this.virtualDocument ||\n      !this.isEventInsideVisible(event)\n    ) {\n      this.removeRangeHighlight();\n      return false;\n    }\n\n    if (\n      !this.lastHoverCharacter ||\n      !isEqual(rootPosition, this.lastHoverCharacter)\n    ) {\n      let virtualPosition = rootPositionToVirtualPosition(\n        adapter,\n        rootPosition\n      );\n      this.virtualPosition = virtualPosition;\n      this.lastHoverCharacter = rootPosition;\n\n      // if we already sent a request, maybe it already covers the are of interest?\n      // not harm waiting as the server won't be able to help us anyways\n      if (this._previousHoverRequest) {\n        await Promise.race([\n          this._previousHoverRequest,\n          // just in case if the request stalled, set a timeout so we do not\n          // get stuck indefinitely\n          new Promise(resolve => {\n            return setTimeout(resolve, 1000);\n          })\n        ]);\n      }\n      let responseData = this.restoreFromCache(document, virtualPosition);\n      let delayMilliseconds = this.settings.composite.delay;\n\n      if (responseData == null) {\n        //const ceEditor =\n        //  editorAtRootPosition(adapter, rootPosition).getEditor()!;\n        const promise = this.debouncedGetHover.invoke(\n          document,\n          virtualPosition,\n          {\n            adapter,\n            token,\n            editor,\n            editorAccessor\n          }\n        );\n        this._previousHoverRequest = promise;\n        let response = await promise;\n        if (this._previousHoverRequest === promise) {\n          this._previousHoverRequest = null;\n        }\n        if (\n          response &&\n          response.range &&\n          ProtocolCoordinates.isWithinRange(\n            { line: virtualPosition.line, character: virtualPosition.ch },\n            response.range\n          ) &&\n          this.isResponseUseful(response)\n        ) {\n          // TODO: I am reconstructing the range anyways - do I really want to ensure it in getHover?\n          const editorRange = this._getEditorRange(\n            adapter,\n            response,\n            token,\n            editor,\n            document\n          );\n          responseData = {\n            response: response,\n            document: document,\n            editorRange: editorRange,\n            ceEditor: editor\n          };\n\n          this.cache.store(responseData);\n          delayMilliseconds = Math.max(\n            0,\n            this.settings.composite.delay -\n              this.settings.composite.throttlerDelay\n          );\n        } else {\n          this.removeRangeHighlight();\n          return false;\n        }\n      }\n\n      if (this.isHoverAutomatic) {\n        await new Promise(resolve => setTimeout(resolve, delayMilliseconds));\n      }\n\n      return this.handleResponse(\n        adapter,\n        responseData,\n        rootPosition,\n        showTooltip\n      );\n    } else {\n      return true;\n    }\n  }\n\n  protected updateUnderlineAndTooltip = (\n    event: MouseEvent,\n    adapter: WidgetLSPAdapter<any>\n  ) => {\n    try {\n      return this._updateUnderlineAndTooltip(event, adapter);\n    } catch (e) {\n      this.console.warn(e);\n      return undefined;\n    }\n  };\n\n  protected removeRangeHighlight = () => {\n    if (this.hasMarker) {\n      this.markManager.clearAllMarks();\n      this.hasMarker = false;\n      this.lastHoverResponse = null;\n      this.lastHoverCharacter = null;\n    }\n  };\n\n  remove(): void {\n    this.cache.clean();\n    this.removeRangeHighlight();\n    this.debouncedGetHover.dispose();\n  }\n\n  /**\n   * Construct the range to underline manually using the token information.\n   */\n  private _getEditorRange(\n    adapter: WidgetLSPAdapter<any>,\n    response: lsProtocol.Hover,\n    token: CodeEditor.IToken,\n    editor: CodeEditor.IEditor,\n    document: VirtualDocument\n  ): IEditorRange {\n    if (typeof response.range !== 'undefined') {\n      return rangeToEditorRange(adapter, response.range, editor, document);\n    }\n\n    const startInEditor = editor.getPositionAt(token.offset);\n    const endInEditor = editor.getPositionAt(token.offset + token.value.length);\n\n    if (!startInEditor || !endInEditor) {\n      throw Error(\n        'Could not reconstruct editor range: start or end of token in editor do not resolve to a position'\n      );\n    }\n\n    return {\n      start: PositionConverter.ce_to_cm(startInEditor) as IEditorPosition,\n      end: PositionConverter.ce_to_cm(endInEditor) as IEditorPosition,\n      editor\n    };\n  }\n\n  private _addRange(\n    adapter: WidgetLSPAdapter<any>,\n    response: lsProtocol.Hover,\n    editorEange: IEditorRange,\n    editorAccessor: Document.IEditor\n  ): lsProtocol.Hover {\n    return {\n      ...response,\n      range: {\n        start: PositionConverter.cm_to_lsp(\n          rootPositionToVirtualPosition(\n            adapter,\n            editorPositionToRootPosition(\n              adapter,\n              editorAccessor,\n              editorEange.start\n            )!\n          )\n        ),\n        end: PositionConverter.cm_to_lsp(\n          rootPositionToVirtualPosition(\n            adapter,\n            editorPositionToRootPosition(\n              adapter,\n              editorAccessor,\n              editorEange.end\n            )!\n          )\n        )\n      }\n    };\n  }\n}\n\nexport namespace HoverFeature {\n  export interface IOptions extends Feature.IOptions {\n    settings: FeatureSettings<LSPHoverSettings>;\n    renderMimeRegistry: IRenderMimeRegistry;\n    editorExtensionRegistry: IEditorExtensionRegistry;\n    contextAssembler: ContextAssembler;\n  }\n  export const id = PLUGIN_ID + ':hover';\n}\n\nexport const HOVER_PLUGIN: JupyterFrontEndPlugin<void> = {\n  id: HoverFeature.id,\n  requires: [\n    ILSPFeatureManager,\n    ISettingRegistry,\n    IRenderMimeRegistry,\n    IEditorExtensionRegistry,\n    ILSPDocumentConnectionManager\n  ],\n  autoStart: true,\n  activate: async (\n    app: JupyterFrontEnd,\n    featureManager: ILSPFeatureManager,\n    settingRegistry: ISettingRegistry,\n    renderMimeRegistry: IRenderMimeRegistry,\n    editorExtensionRegistry: IEditorExtensionRegistry,\n    connectionManager: ILSPDocumentConnectionManager\n  ) => {\n    const contextAssembler = new ContextAssembler({ app, connectionManager });\n    const settings = new FeatureSettings<LSPHoverSettings>(\n      settingRegistry,\n      HoverFeature.id\n    );\n    await settings.ready;\n    if (settings.composite.disable) {\n      return;\n    }\n    const feature = new HoverFeature({\n      settings,\n      renderMimeRegistry,\n      editorExtensionRegistry,\n      connectionManager,\n      contextAssembler\n    });\n    featureManager.register(feature);\n  }\n};\n","import {\n  IVirtualPosition,\n  offsetAtPosition,\n  WidgetLSPAdapter,\n  Document,\n  IPosition\n} from '@jupyterlab/lsp';\nimport type * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport { PositionConverter } from './converter';\nimport { DefaultMap, urisEqual } from './utils';\nimport { VirtualDocument } from './virtual/document';\n\nexport interface IEditOutcome {\n  appliedChanges: number | null;\n  modifiedCells: number;\n  wasGranular: boolean;\n  errors: string[];\n}\n\nfunction offsetFromLsp(position: lsProtocol.Position, lines: string[]) {\n  return offsetAtPosition(PositionConverter.lsp_to_ce(position), lines);\n}\n\nfunction toDocumentChanges(changes: {\n  [uri: string]: lsProtocol.TextEdit[];\n}): lsProtocol.TextDocumentEdit[] {\n  let documentChanges = [];\n  for (let uri of Object.keys(changes)) {\n    documentChanges.push({\n      textDocument: { uri },\n      edits: changes[uri]\n    } as lsProtocol.TextDocumentEdit);\n  }\n  return documentChanges;\n}\n\nexport class EditApplicator {\n  constructor(\n    protected virtualDocument: VirtualDocument,\n    protected adapter: WidgetLSPAdapter<any>\n  ) {\n    // no-op\n  }\n\n  async applyEdit(\n    workspaceEdit: lsProtocol.WorkspaceEdit\n  ): Promise<IEditOutcome> {\n    let currentUri = this.virtualDocument.documentInfo.uri;\n\n    // Specs: documentChanges are preferred over changes\n    let changes = workspaceEdit.documentChanges\n      ? workspaceEdit.documentChanges.map(\n          change => change as lsProtocol.TextDocumentEdit\n        )\n      : toDocumentChanges(workspaceEdit.changes!);\n    let appliedChanges = 0;\n    let editedCells: number = 0;\n    let isWholeDocumentEdit: boolean = false;\n    let errors: string[] = [];\n\n    for (let change of changes) {\n      let uri = change.textDocument.uri;\n\n      if (!urisEqual(uri, currentUri)) {\n        errors.push(\n          `Workspace-wide edits not implemented: ${uri} != ${currentUri}`\n        );\n      } else {\n        isWholeDocumentEdit =\n          change.edits.length === 1 &&\n          this._isWholeDocumentEdit(change.edits[0]);\n\n        let edit: lsProtocol.TextEdit;\n\n        if (!isWholeDocumentEdit) {\n          appliedChanges = 0;\n          let value = this.virtualDocument.value;\n          // TODO: make sure that it was not changed since the request was sent (using the returned document version)\n          let lines = value.split('\\n');\n\n          let editsByOffset = new Map<number, lsProtocol.TextEdit>();\n          for (let e of change.edits) {\n            let offset = offsetFromLsp(e.range.start, lines);\n            if (editsByOffset.has(offset)) {\n              console.warn(\n                'Edits should not overlap, ignoring an overlapping edit'\n              );\n            } else {\n              editsByOffset.set(offset, e);\n              appliedChanges += 1;\n            }\n          }\n\n          // TODO make use of oldToNewLine for edits which add of remove lines:\n          //  this is crucial to preserve cell boundaries in notebook in such cases\n          let oldToNewLine = new DefaultMap<number, number[]>(() => []);\n          let newText = '';\n          let lastEnd = 0;\n          let currentOldLine = 0;\n          let currentNewLine = 0;\n          // going over the edits in descending order of start points:\n          let startOffsets = [...editsByOffset.keys()].sort((a, b) => a - b);\n          for (let start of startOffsets) {\n            let edit = editsByOffset.get(start)!;\n            let prefix = value.slice(lastEnd, start);\n            for (let i = 0; i < prefix.split('\\n').length; i++) {\n              let newLines = oldToNewLine.getOrCreate(currentOldLine);\n              newLines.push(currentNewLine);\n              currentOldLine += 1;\n              currentNewLine += 1;\n            }\n            newText += prefix + edit.newText;\n            let end = offsetFromLsp(edit.range.end, lines);\n            let replacedFragment = value.slice(start, end);\n            for (let i = 0; i < edit.newText.split('\\n').length; i++) {\n              if (i < replacedFragment.length) {\n                currentOldLine += 1;\n              }\n              currentNewLine += 1;\n              let newLines = oldToNewLine.getOrCreate(currentOldLine);\n              newLines.push(currentNewLine);\n            }\n            lastEnd = end;\n          }\n          newText += value.slice(lastEnd, value.length);\n\n          edit = {\n            range: {\n              start: { line: 0, character: 0 },\n              end: {\n                line: lines.length - 1,\n                character: lines[lines.length - 1].length\n              }\n            },\n            newText: newText\n          };\n          console.assert(this._isWholeDocumentEdit(edit));\n        } else {\n          edit = change.edits[0];\n          appliedChanges += 1;\n        }\n        editedCells = this._applySingleEdit(edit);\n      }\n    }\n    const allEmpty = changes.every(change => change.edits.length === 0);\n    return {\n      appliedChanges: appliedChanges,\n      modifiedCells: editedCells,\n      wasGranular: !isWholeDocumentEdit && !allEmpty,\n      errors: errors\n    };\n  }\n\n  /**\n   * Does the edit cover the entire document?\n   */\n  private _isWholeDocumentEdit(edit: lsProtocol.TextEdit) {\n    let value = this.virtualDocument.value;\n    let lines = value.split('\\n');\n    let range = edit.range;\n    let lsp_to_ce = PositionConverter.lsp_to_ce;\n    return (\n      offsetAtPosition(lsp_to_ce(range.start), lines) === 0 &&\n      offsetAtPosition(lsp_to_ce(range.end), lines) === value.length\n    );\n  }\n\n  private _replaceFragment(\n    newText: string,\n    editorAccessor: Document.IEditor,\n    fragmentStart: IPosition,\n    fragmentEnd: IPosition,\n    start: IPosition,\n    end: IPosition,\n    isWholeDocumentEdit = false\n  ): number {\n    let document = this.virtualDocument;\n    let newFragmentText = newText\n      .split('\\n')\n      .slice(fragmentStart.line - start.line, fragmentEnd.line - start.line)\n      .join('\\n');\n\n    if (newFragmentText.endsWith('\\n')) {\n      newFragmentText = newFragmentText.slice(0, -1);\n    }\n\n    const editor = editorAccessor.getEditor();\n    if (!editor) {\n      throw Error('Editor is not accessible');\n    }\n    // TODO: should accessor present the model even if editor is not created yet?\n    const model = editor.model;\n\n    let rawValue = model.sharedModel.source;\n    // extract foreign documents and substitute magics,\n    // as it was done when the shadow virtual document was being created\n    let { lines } = document.prepareCodeBlock({\n      value: rawValue,\n      ceEditor: editorAccessor,\n      type: 'code'\n    });\n    let oldValue = lines.join('\\n');\n\n    if (isWholeDocumentEdit) {\n      // partial edit\n      let cm_to_ce = PositionConverter.cm_to_ce;\n      let upToOffset = offsetAtPosition(cm_to_ce(start), lines);\n      let fromOffset = offsetAtPosition(cm_to_ce(end), lines);\n      newFragmentText =\n        oldValue.slice(0, upToOffset) + newText + oldValue.slice(fromOffset);\n    }\n\n    if (oldValue === newFragmentText) {\n      return 0;\n    }\n\n    let newValue = document.decodeCodeBlock(newFragmentText);\n\n    const cursor = editor.getCursorPosition();\n\n    model.sharedModel.updateSource(\n      editor.getOffsetAt({ line: 0, column: 0 }),\n      oldValue.length,\n      newValue\n    );\n\n    try {\n      // try to restore the cursor to the position prior to the edit\n      // (this might not be the best UX, but definitely better than\n      // the cursor jumping to the very end of the cell/file).\n      editor.setSelection({ start: cursor, end: cursor });\n      // note: this does not matter for actions invoke from context menu\n      // as those loose focus anyways (this might be addressed elsewhere)\n    } catch (e) {\n      console.log('Could not place the cursor back', e);\n    }\n\n    return 1;\n  }\n\n  private _applySingleEdit(edit: lsProtocol.TextEdit): number {\n    let document = this.virtualDocument;\n    let appliedChanges = 0;\n    let start = PositionConverter.lsp_to_cm(edit.range.start);\n    let end = PositionConverter.lsp_to_cm(edit.range.end);\n\n    let startEditor = document.getEditorAtVirtualLine(\n      start as IVirtualPosition\n    );\n    let endEditor = document.getEditorAtVirtualLine(end as IVirtualPosition);\n    if (startEditor !== endEditor) {\n      let lastEditor = startEditor;\n      let fragmentStart = start;\n      let fragmentEnd = { ...start };\n\n      let line = start.line;\n      let recentlyReplaced = false;\n      while (line <= end.line) {\n        line++;\n        let editor = document.getEditorAtVirtualLine({\n          line: line,\n          ch: 0\n        } as IVirtualPosition);\n\n        if (editor === lastEditor) {\n          fragmentEnd.line = line;\n          fragmentEnd.ch = 0;\n          recentlyReplaced = false;\n        } else {\n          appliedChanges += this._replaceFragment(\n            edit.newText,\n            lastEditor,\n            fragmentStart,\n            fragmentEnd,\n            start,\n            end\n          );\n          recentlyReplaced = true;\n          fragmentStart = {\n            line: line,\n            ch: 0\n          };\n          fragmentEnd = {\n            line: line,\n            ch: 0\n          };\n          lastEditor = editor;\n        }\n      }\n      if (!recentlyReplaced) {\n        appliedChanges += this._replaceFragment(\n          edit.newText,\n          lastEditor,\n          fragmentStart,\n          fragmentEnd,\n          start,\n          end\n        );\n      }\n    } else {\n      appliedChanges += this._replaceFragment(\n        edit.newText,\n        startEditor,\n        start,\n        end,\n        start,\n        end\n      );\n    }\n    return appliedChanges;\n  }\n}\n","import { IEditorPosition, WidgetLSPAdapter, Document } from '@jupyterlab/lsp';\nimport { Token } from '@lumino/coreutils';\nimport * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport { PLUGIN_ID } from '../../tokens';\n\n/**\n * Diagnostic which is localized at a specific editor (cell) within a notebook\n * (if used in the context of a FileEditor, then there is just a single editor)\n */\nexport interface IEditorDiagnostic {\n  diagnostic: lsProtocol.Diagnostic;\n  editorAccessor: Document.IEditor;\n  range: {\n    start: IEditorPosition;\n    end: IEditorPosition;\n  };\n}\n\nexport interface IReadonlyDiagnosticsDatabase {\n  /**\n   * @alpha\n   */\n  get all(): IEditorDiagnostic[];\n}\n\nexport interface IDiagnosticsFeature {\n  /**\n   * @alpha\n   */\n  getDiagnosticsDB(\n    adapter: WidgetLSPAdapter<any>\n  ): IReadonlyDiagnosticsDatabase;\n}\n\nexport const IDiagnosticsFeature = new Token<IDiagnosticsFeature>(\n  PLUGIN_ID + ':IDiagnosticsFeature'\n);\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport {\n  InputDialog,\n  Notification,\n  ICommandPalette\n} from '@jupyterlab/apputils';\nimport {\n  ILSPFeatureManager,\n  ILSPDocumentConnectionManager,\n  WidgetLSPAdapter\n} from '@jupyterlab/lsp';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport {\n  ITranslator,\n  nullTranslator,\n  TranslationBundle\n} from '@jupyterlab/translation';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport renameSvg from '../../style/icons/rename.svg';\nimport { CodeRename as LSPRenameSettings } from '../_rename';\nimport { ContextAssembler } from '../context';\nimport {\n  PositionConverter,\n  editorAtRootPosition,\n  rootPositionToEditorPosition\n} from '../converter';\nimport { EditApplicator, IEditOutcome } from '../edits';\nimport { FeatureSettings, Feature } from '../feature';\nimport { PLUGIN_ID } from '../tokens';\nimport { BrowserConsole } from '../virtual/console';\nimport { VirtualDocument } from '../virtual/document';\n\nimport { IDiagnosticsFeature } from './diagnostics/tokens';\n\nexport const renameIcon = new LabIcon({\n  name: 'lsp:rename',\n  svgstr: renameSvg\n});\n\nconst FEATURE_ID = PLUGIN_ID + ':rename';\n\nexport class RenameFeature extends Feature {\n  readonly id = RenameFeature.id;\n  readonly capabilities: lsProtocol.ClientCapabilities = {\n    textDocument: {\n      rename: {\n        prepareSupport: false,\n        honorsChangeAnnotations: false\n      }\n    }\n  };\n  protected console = new BrowserConsole().scope('Rename');\n\n  private _trans: TranslationBundle;\n\n  constructor(options: RenameFeature.IOptions) {\n    super(options);\n    this._trans = options.trans;\n  }\n\n  async handleRename(\n    workspaceEdit: lsProtocol.WorkspaceEdit,\n    oldValue: string,\n    newValue: string,\n    adapter: WidgetLSPAdapter<any>,\n    document: VirtualDocument\n  ) {\n    let outcome: IEditOutcome;\n    const applicator = new EditApplicator(document, adapter);\n\n    try {\n      outcome = await applicator.applyEdit(workspaceEdit);\n    } catch (error) {\n      Notification.emit(this._trans.__('Rename failed: %1', error), 'error');\n      return;\n    }\n\n    try {\n      let status: string;\n      const changeText = this._trans.__('%1 to %2', oldValue, newValue);\n      let severity: 'success' | 'warning' | 'error' = 'success';\n\n      if (outcome.appliedChanges === 0) {\n        status = this._trans.__(\n          'Could not rename %1 - consult the language server documentation',\n          changeText\n        );\n        severity = 'warning';\n      } else if (outcome.wasGranular) {\n        status = this._trans._n(\n          'Renamed %2 in %3 place',\n          'Renamed %2 in %3 places',\n          outcome.appliedChanges!,\n          changeText,\n          outcome.appliedChanges\n        );\n      } else if (adapter.hasMultipleEditors) {\n        status = this._trans._n(\n          'Renamed %2 in %3 cell',\n          'Renamed %2 in %3 cells',\n          outcome.modifiedCells,\n          changeText,\n          outcome.modifiedCells\n        );\n      } else {\n        status = this._trans.__('Renamed %1', changeText);\n      }\n\n      if (outcome.errors.length !== 0) {\n        status += this._trans.__(' with errors: %1', outcome.errors);\n        severity = 'error';\n      }\n\n      Notification.emit(status, severity, {\n        autoClose: (severity === 'error' ? 5 : 3) * 1000\n      });\n    } catch (error) {\n      this.console.warn(error);\n    }\n\n    return outcome;\n  }\n}\n\n/**\n * In #115 an issue with rename for Python (when using pyls) was identified:\n * rename was failing with an obscure message when the source code could\n * not be parsed correctly by rope (due to a user's syntax error).\n *\n * This function detects such a condition using diagnostics feature\n * and provides a nice error message to the user.\n */\nfunction guessFailureReason(\n  error: Error,\n  adapter: WidgetLSPAdapter<any>,\n  diagnostics: IDiagnosticsFeature,\n  trans: TranslationBundle\n): string | null {\n  let hasIndexError = false;\n  try {\n    hasIndexError = error.message.includes('IndexError');\n  } catch (e) {\n    return null;\n  }\n  if (!hasIndexError) {\n    return null;\n  }\n  let direPythonErrors = (\n    diagnostics.getDiagnosticsDB(adapter).all || []\n  ).filter(\n    diagnostic =>\n      diagnostic.diagnostic.message.includes('invalid syntax') ||\n      diagnostic.diagnostic.message.includes('SyntaxError') ||\n      diagnostic.diagnostic.message.includes('IndentationError')\n  );\n\n  if (direPythonErrors.length === 0) {\n    return null;\n  }\n\n  let direErrors = [\n    ...new Set(\n      direPythonErrors.map(diagnostic => {\n        let message = diagnostic.diagnostic.message;\n        let start = diagnostic.range.start;\n        if (adapter.hasMultipleEditors) {\n          let editorIndex = adapter.editors.findIndex(\n            e => e.ceEditor === diagnostic.editorAccessor\n          );\n          let cellNumber = editorIndex === -1 ? '(?)' : editorIndex + 1;\n          return trans.__(\n            '%1 in cell %2 at line %3',\n            message,\n            cellNumber,\n            start.line\n          );\n        } else {\n          return trans.__('%1 at line %2', message, start.line);\n        }\n      })\n    )\n  ].join(', ');\n  return trans.__('Syntax error(s) prevents rename: %1', direErrors);\n}\n\nexport namespace RenameFeature {\n  export interface IOptions extends Feature.IOptions {\n    trans: TranslationBundle;\n  }\n  export const id = FEATURE_ID;\n}\n\nexport namespace CommandIDs {\n  export const renameSymbol = 'lsp:rename-symbol';\n}\n\nexport const RENAME_PLUGIN: JupyterFrontEndPlugin<void> = {\n  id: FEATURE_ID,\n  requires: [\n    ILSPFeatureManager,\n    ISettingRegistry,\n    ILSPDocumentConnectionManager\n  ],\n  optional: [ICommandPalette, IDiagnosticsFeature, ITranslator],\n  autoStart: true,\n  activate: async (\n    app: JupyterFrontEnd,\n    featureManager: ILSPFeatureManager,\n    settingRegistry: ISettingRegistry,\n    connectionManager: ILSPDocumentConnectionManager,\n    palette: ICommandPalette,\n    diagnostics: IDiagnosticsFeature,\n    translator: ITranslator\n  ) => {\n    const trans = (translator || nullTranslator).load('jupyterlab_lsp');\n    const settings = new FeatureSettings<LSPRenameSettings>(\n      settingRegistry,\n      RenameFeature.id\n    );\n    await settings.ready;\n\n    if (settings.composite.disable) {\n      return;\n    }\n    const feature = new RenameFeature({\n      trans,\n      connectionManager\n    });\n    featureManager.register(feature);\n\n    const assembler = new ContextAssembler({\n      app,\n      connectionManager\n    });\n\n    app.commands.addCommand(CommandIDs.renameSymbol, {\n      execute: async () => {\n        const context = assembler.getContext();\n        if (!context) {\n          return;\n        }\n        const { adapter, connection, virtualPosition, rootPosition, document } =\n          context;\n\n        const editorAccessor = editorAtRootPosition(adapter, rootPosition);\n        const editor = editorAccessor?.getEditor();\n        if (!editor) {\n          console.log('Could not rename - no editor');\n          return;\n        }\n        const editorPosition = rootPositionToEditorPosition(\n          adapter,\n          rootPosition\n        );\n        const offset = editor.getOffsetAt(\n          PositionConverter.cm_to_ce(editorPosition)\n        );\n        let oldValue = editor.getTokenAt(offset).value;\n        let handleFailure = (error: Error) => {\n          let status: string | null = '';\n\n          if (diagnostics) {\n            status = guessFailureReason(error, adapter, diagnostics, trans);\n          }\n\n          if (!status) {\n            Notification.error(trans.__(`Rename failed: %1`, error), {\n              autoClose: 5 * 1000\n            });\n          } else {\n            Notification.warning(status, { autoClose: 3 * 1000 });\n          }\n        };\n\n        const dialogValue = await InputDialog.getText({\n          title: trans.__('Rename to'),\n          text: oldValue,\n          okLabel: trans.__('Rename'),\n          cancelLabel: trans.__('Cancel')\n        });\n\n        try {\n          const newValue = dialogValue.value;\n          if (dialogValue.button.accept != true || newValue == null) {\n            // the user has cancelled the rename action or did not provide new value\n            return;\n          }\n          Notification.info(\n            trans.__('Renaming %1 to %2…', oldValue, newValue),\n            { autoClose: 3 * 1000 }\n          );\n          const edit = await connection!.clientRequests[\n            'textDocument/rename'\n          ].request({\n            position: {\n              line: virtualPosition.line,\n              character: virtualPosition.ch\n            },\n            textDocument: {\n              uri: document.documentInfo.uri\n            },\n            newName: newValue\n          });\n          if (edit) {\n            await feature.handleRename(\n              edit,\n              oldValue,\n              newValue,\n              adapter,\n              document\n            );\n          } else {\n            handleFailure(new Error('no edit from server'));\n          }\n        } catch (error) {\n          handleFailure(error);\n        }\n      },\n      isVisible: () => {\n        const context = assembler.getContext();\n        if (!context) {\n          return false;\n        }\n        const { connection } = context;\n        return (\n          connection != null &&\n          connection.isReady &&\n          connection.provides('renameProvider')\n        );\n      },\n      isEnabled: () => {\n        return assembler.isContextMenuOverToken() ? true : false;\n      },\n      label: trans.__('Rename symbol'),\n      icon: renameIcon\n    });\n\n    // add to menus\n    app.contextMenu.addItem({\n      selector: '.jp-Notebook .jp-CodeCell .jp-Editor',\n      command: CommandIDs.renameSymbol,\n      rank: 10\n    });\n\n    app.contextMenu.addItem({\n      selector: '.jp-FileEditor',\n      command: CommandIDs.renameSymbol,\n      rank: 0\n    });\n\n    palette.addItem({\n      command: CommandIDs.renameSymbol,\n      category: trans.__('Language Server Protocol')\n    });\n  }\n};\n","import { Language } from '@codemirror/language';\nimport { ChangeSet, Text } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport {\n  IEditorExtensionRegistry,\n  EditorExtensionRegistry,\n  IEditorLanguageRegistry,\n  jupyterHighlightStyle\n} from '@jupyterlab/codemirror';\nimport {\n  IEditorPosition,\n  IRootPosition,\n  offsetAtPosition,\n  positionAtOffset,\n  ILSPFeatureManager,\n  ILSPDocumentConnectionManager,\n  WidgetLSPAdapter\n} from '@jupyterlab/lsp';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { highlightTree } from '@lezer/highlight';\nimport * as lsProtocol from 'vscode-languageserver-protocol';\n\nimport { CodeSignature as LSPSignatureSettings } from '../_signature';\nimport { EditorTooltipManager } from '../components/free_tooltip';\nimport {\n  PositionConverter,\n  rootPositionToVirtualPosition,\n  editorPositionToRootPosition\n} from '../converter';\nimport { FeatureSettings, Feature } from '../feature';\nimport { ILogConsoleCore, PLUGIN_ID } from '../tokens';\nimport { escapeMarkdown } from '../utils';\nimport { BrowserConsole } from '../virtual/console';\n\nconst TOOLTIP_ID = 'signature';\nconst CLASS_NAME = 'lsp-signature-help';\n\nfunction getMarkdown(item: string | lsProtocol.MarkupContent) {\n  if (typeof item === 'string') {\n    return escapeMarkdown(item);\n  } else {\n    if (item.kind === 'markdown') {\n      return item.value;\n    } else {\n      return escapeMarkdown(item.value);\n    }\n  }\n}\n\ninterface ISplit {\n  lead: string;\n  remainder: string;\n}\n\nexport function extractLead(lines: string[], size: number): ISplit | null {\n  // try to split after paragraph\n  const leadLines = [];\n  let splitOnParagraph = false;\n\n  for (const line of lines.slice(0, size + 1)) {\n    const isEmpty = line.trim() == '';\n    if (isEmpty) {\n      splitOnParagraph = true;\n      break;\n    }\n    leadLines.push(line);\n  }\n  // see if we got something which does not include Markdown formatting\n  // (so it won't lead to broken formatting if we split after it);\n  const leadCandidate = leadLines.join('\\n');\n\n  if (splitOnParagraph && leadCandidate.search(/[\\\\*#[\\]<>_]/g) === -1) {\n    return {\n      lead: leadCandidate,\n      remainder: lines.slice(leadLines.length + 1).join('\\n')\n    };\n  }\n  return null;\n}\n\n/**\n * Represent signature as a Markdown element.\n */\nexport function signatureToMarkdown(\n  item: lsProtocol.SignatureInformation,\n  language: Language | undefined,\n  codeHighlighter: (\n    source: string,\n    variable: lsProtocol.ParameterInformation,\n    language: Language | undefined\n  ) => string,\n  logger: ILogConsoleCore,\n  activeParameterFallback?: number | null,\n  maxLinesBeforeCollapse: number = 4\n): string {\n  const activeParameter: number | undefined | null =\n    typeof item.activeParameter !== 'undefined'\n      ? item.activeParameter\n      : activeParameterFallback;\n  let markdown: string;\n  let label = item.label;\n  if (item.parameters && activeParameter != null) {\n    if (activeParameter > item.parameters.length) {\n      logger.error(\n        'LSP server returned wrong number for activeSignature for: ',\n        item\n      );\n      markdown = '```' + language?.name + '\\n' + label + '\\n```';\n    } else {\n      const parameter = item.parameters[activeParameter];\n      markdown = codeHighlighter(label, parameter, language);\n    }\n  } else {\n    markdown = '```' + language?.name + '\\n' + label + '\\n```';\n  }\n  let details = '';\n  if (item.documentation) {\n    if (\n      typeof item.documentation === 'string' ||\n      item.documentation.kind === 'plaintext'\n    ) {\n      const plainTextDocumentation =\n        typeof item.documentation === 'string'\n          ? item.documentation\n          : item.documentation.value;\n      // TODO: make use of the MarkupContent object instead\n      for (let line of plainTextDocumentation.split('\\n')) {\n        if (line.trim() === item.label.trim()) {\n          continue;\n        }\n\n        details += getMarkdown(line) + '\\n';\n      }\n    } else {\n      if (item.documentation.kind !== 'markdown') {\n        logger.warn('Unknown MarkupContent kind:', item.documentation.kind);\n      }\n      details += item.documentation.value;\n    }\n  } else if (item.parameters) {\n    details +=\n      '\\n\\n' +\n      item.parameters\n        .filter(parameter => parameter.documentation)\n        .map(parameter => '- ' + getMarkdown(parameter.documentation!))\n        .join('\\n');\n  }\n  if (details) {\n    const lines = details.trim().split('\\n');\n    if (lines.length > maxLinesBeforeCollapse) {\n      const split = extractLead(lines, maxLinesBeforeCollapse);\n      if (split) {\n        details =\n          split.lead + '\\n<details>\\n' + split.remainder + '\\n</details>';\n      } else {\n        details = '<details>\\n' + details + '\\n</details>';\n      }\n    }\n    markdown += '\\n\\n' + details;\n  } else {\n    markdown += '\\n';\n  }\n  return markdown;\n}\n\nexport function highlightCode(\n  source: string,\n  parameter: lsProtocol.ParameterInformation,\n  language: Language | undefined\n) {\n  const pre = document.createElement('pre');\n  const code = document.createElement('code');\n  pre.appendChild(code);\n  code.className =\n    'cm-s-jupyter' + language ? `language-${language?.name}` : '';\n\n  const substring: string =\n    typeof parameter.label === 'string'\n      ? parameter.label\n      : source.slice(parameter.label[0], parameter.label[1]);\n  const start = source.indexOf(substring);\n  const end = start + substring.length;\n  if (!language) {\n    code.innerText = source;\n  } else {\n    runMode(\n      source,\n      language,\n      (token: string, className: string, from: number, to: number) => {\n        let populated = false;\n        // In CodeMirror6 variables are not necessarily tokenized,\n        // we need to split them manually\n        if (from <= end && start <= to) {\n          const a = Math.max(start, from);\n          const b = Math.min(to, end);\n          if (a != b) {\n            const prefix = source.slice(from, a);\n            const content = source.slice(a, b);\n            const suffix = source.slice(b, to);\n\n            const mark = document.createElement('mark');\n            if (className) {\n              mark.className = className;\n            }\n            mark.appendChild(document.createTextNode(content));\n            code.appendChild(document.createTextNode(prefix));\n            code.appendChild(mark);\n            code.appendChild(document.createTextNode(suffix));\n            populated = true;\n          }\n        }\n        if (!populated) {\n          if (className) {\n            const element = document.createElement('span');\n            element.classList.add(className);\n            element.textContent = token;\n            code.appendChild(element);\n          } else {\n            code.appendChild(document.createTextNode(token));\n          }\n        }\n      }\n    );\n  }\n\n  return pre.outerHTML;\n}\n\nfunction extractLastCharacter(changes: ChangeSet): string {\n  // TODO test with pasting, maybe rewrite to retrieve based on cursor position.\n  let last = '';\n  changes.iterChanges(\n    (\n      fromA: number,\n      toA: number,\n      fromB: number,\n      toB: number,\n      inserted: Text\n    ) => {\n      last = inserted.sliceString(-1);\n    }\n  );\n  return last ? last[0] : '';\n}\n\nfunction runMode(\n  source: string,\n  language: Language,\n  callback: (\n    text: string,\n    style: string | null,\n    from: number,\n    to: number\n  ) => void\n): void {\n  const tree = language.parser.parse(source);\n  let pos = 0;\n  highlightTree(tree, jupyterHighlightStyle, (from, to, token) => {\n    if (from > pos) {\n      callback(source.slice(pos, from), null, pos, from);\n    }\n    callback(source.slice(from, to), token, from, to);\n    pos = to;\n  });\n  if (pos != tree.length) {\n    callback(source.slice(pos, tree.length), null, pos, tree.length);\n  }\n}\n\nexport class SignatureFeature extends Feature {\n  readonly id = SignatureFeature.id;\n  readonly capabilities: lsProtocol.ClientCapabilities = {\n    textDocument: {\n      signatureHelp: {\n        dynamicRegistration: true,\n        signatureInformation: {\n          documentationFormat: ['markdown', 'plaintext']\n        }\n      }\n    }\n  };\n  tooltip: EditorTooltipManager;\n\n  protected signatureCharacter: IRootPosition;\n  protected _signatureCharacters: string[];\n  protected console = new BrowserConsole().scope('Signature');\n  protected settings: FeatureSettings<LSPSignatureSettings>;\n  protected languageRegistry: IEditorLanguageRegistry;\n\n  constructor(options: SignatureFeature.IOptions) {\n    super(options);\n    this.settings = options.settings;\n    this.tooltip = new EditorTooltipManager(options.renderMimeRegistry);\n    this.languageRegistry = options.languageRegistry;\n    const connectionManager = options.connectionManager;\n    options.editorExtensionRegistry.addExtension({\n      name: 'lsp:codeSignature',\n      factory: options => {\n        const updateListener = EditorView.updateListener.of(viewUpdate => {\n          const adapter = [...connectionManager.adapters.values()].find(\n            adapter => adapter.widget.node.contains(viewUpdate.view.contentDOM)\n          );\n\n          if (!adapter) {\n            this.console.log('No adapter, will not show signature');\n            return;\n          }\n\n          // TODO: the assumption that updated editor = active editor will fail on RTC. How to get `CodeEditor.IEditor` and `Document.IEditor` from `EditorView`? we got `CodeEditor.IModel` from `options.model` but may need more context here.\n          const editorAccessor = adapter.activeEditor;\n          const editor = editorAccessor!.getEditor();\n\n          if (!editor) {\n            // see https://github.com/jupyter-lsp/jupyterlab-lsp/issues/984\n            // TODO: should not be needed once https://github.com/jupyterlab/jupyterlab/pull/14920 is in\n            return;\n          }\n\n          // TODO: or should it come from viewUpdate instead?!\n          // especially on copy paste this can be problematic.\n          const position = editor.getCursorPosition();\n\n          const editorPosition = PositionConverter.ce_to_cm(\n            position\n          ) as IEditorPosition;\n\n          // Delay handling by moving on top of the stack\n          // so that virtual document is updated.\n          setTimeout(() => {\n            // be careful: updateListener also fires after blur, so we\n            // need to carefully check what changed to avoid invalidating\n            // user clicking on the hover box.\n            if (viewUpdate.docChanged) {\n              this.afterChange(\n                viewUpdate.changes,\n                adapter,\n                editorPosition\n              ).catch(this.console.warn);\n            } else if (viewUpdate.selectionSet) {\n              this.onCursorActivity(adapter, editorPosition).catch(\n                this.console.warn\n              );\n            }\n          }, 0);\n        });\n\n        const focusListener = EditorView.domEventHandlers({\n          focus: () => {\n            // TODO\n            // this.onCursorActivity()\n          },\n          blur: event => {\n            this.onBlur(event);\n          }\n        });\n\n        return EditorExtensionRegistry.createImmutableExtension([\n          updateListener,\n          focusListener\n        ]);\n      }\n    });\n  }\n\n  get _closeCharacters(): string[] {\n    if (!this.settings) {\n      return [];\n    }\n    return this.settings.composite.closeCharacters;\n  }\n\n  onBlur(event: FocusEvent) {\n    // hide unless the focus moved to the signature itself\n    // (allowing user to select/copy from signature)\n    const target = event.relatedTarget as Element | null;\n    if (\n      this.isSignatureShown() &&\n      (target ? target.closest('.' + CLASS_NAME) === null : true)\n    ) {\n      this._removeTooltip();\n    }\n  }\n\n  async onCursorActivity(\n    adapter: WidgetLSPAdapter<any>,\n    newEditorPosition: IEditorPosition\n  ) {\n    if (!this.isSignatureShown()) {\n      return;\n    }\n\n    const initialPosition = this.tooltip.position;\n    if (\n      newEditorPosition.line === initialPosition.line &&\n      newEditorPosition.ch < initialPosition.ch\n    ) {\n      // close tooltip if receded beyond starting position\n      this._removeTooltip();\n    } else {\n      // otherwise, update the signature as the active parameter could have changed,\n      // or the server may want us to close the tooltip\n      await this._requestSignature(adapter, newEditorPosition, initialPosition);\n    }\n  }\n\n  protected getMarkupForSignatureHelp(\n    response: lsProtocol.SignatureHelp,\n    language: Language | undefined\n  ): lsProtocol.MarkupContent {\n    let signatures = new Array<string>();\n\n    if (response.activeSignature != null) {\n      if (response.activeSignature >= response.signatures.length) {\n        this.console.error(\n          'LSP server returned wrong number for activeSignature for: ',\n          response\n        );\n      } else {\n        const item = response.signatures[response.activeSignature];\n        return {\n          kind: 'markdown',\n          value: this.signatureToMarkdown(\n            item,\n            language,\n            response.activeParameter\n          )\n        };\n      }\n    }\n\n    response.signatures.forEach(item => {\n      let markdown = this.signatureToMarkdown(item, language);\n      signatures.push(markdown);\n    });\n\n    return {\n      kind: 'markdown',\n      value: signatures.join('\\n\\n')\n    };\n  }\n\n  /**\n   * Represent signature as a Markdown element.\n   */\n  protected signatureToMarkdown(\n    item: lsProtocol.SignatureInformation,\n    language: Language | undefined,\n    activeParameterFallback?: number | null\n  ): string {\n    return signatureToMarkdown(\n      item,\n      language,\n      highlightCode,\n      this.console,\n      activeParameterFallback,\n      this.settings.composite.maxLines\n    );\n  }\n\n  private _removeTooltip() {\n    this.tooltip.remove();\n  }\n\n  private _hideTooltip() {\n    this.tooltip.hide();\n  }\n\n  private handleSignature(\n    response: lsProtocol.SignatureHelp,\n    adapter: WidgetLSPAdapter<any>,\n    positionAtRequest: IRootPosition,\n    displayPosition: IEditorPosition | null = null\n  ) {\n    this.console.debug('Signature received', response);\n\n    // TODO: this might wrong connection!\n    // we need to find the correct documentAtRootPosition\n    const virtualDocument = adapter.virtualDocument!;\n    const connection = this.connectionManager.connections.get(\n      virtualDocument.uri\n    )!;\n\n    const signatureCharacters: string[] =\n      connection.serverCapabilities.signatureHelpProvider?.triggerCharacters ??\n      [];\n\n    if (response === null) {\n      // do not hide on undefined as it simply indicates that no new info is available\n      // (null means close, undefined means no update, response means update)\n      this._removeTooltip();\n    } else if (response) {\n      this._hideTooltip();\n    }\n\n    if (!this.signatureCharacter || !response || !response.signatures.length) {\n      if (response) {\n        this._removeTooltip();\n      }\n      this.console.debug(\n        'Ignoring signature response: cursor lost or response empty'\n      );\n      return;\n    }\n\n    // TODO: helper?\n    const editorAccessor = adapter.activeEditor!;\n    const editor = editorAccessor.getEditor()!;\n    const pos = editor.getCursorPosition();\n    const editorPosition = PositionConverter.ce_to_cm(pos) as IEditorPosition;\n\n    // TODO should I just shove it into Feature class and have an adapter getter in there?\n    const rootPosition = editorPositionToRootPosition(\n      adapter,\n      editorAccessor,\n      editorPosition\n    );\n\n    if (!rootPosition) {\n      this.console.warn(\n        'Signature failed: could not map editor position to root position.'\n      );\n      this._removeTooltip();\n      return;\n    }\n\n    // if the cursor advanced in the same line, the previously retrieved signature may still be useful\n    // if the line changed or cursor moved backwards then no reason to keep the suggestions\n    if (\n      positionAtRequest.line != rootPosition.line ||\n      rootPosition.ch < positionAtRequest.ch\n    ) {\n      this.console.debug(\n        'Ignoring signature response: cursor has receded or changed line'\n      );\n      this._removeTooltip();\n      return;\n    }\n\n    //const virtualPosition = rootPositionToVirtualPosition(adapter, rootPosition);\n\n    //let editorAccessor = adapter.editors[adapter.getEditorIndexAt(virtualPosition)].ceEditor;\n    //const editor = editorAccessor.getEditor();\n    if (!editor) {\n      this.console.debug(\n        'Ignoring signature response: the corresponding editor is not loaded'\n      );\n      return;\n    }\n    if (!editor.hasFocus()) {\n      this.console.debug(\n        'Ignoring signature response: the corresponding editor lost focus'\n      );\n      this._removeTooltip();\n      return;\n    }\n\n    const editorLanguage = this.languageRegistry.findByMIME(\n      editor.model.mimeType\n    );\n    const language = editorLanguage?.support?.language;\n    let markup = this.getMarkupForSignatureHelp(response, language);\n\n    this.console.debug(\n      'Signature will be shown',\n      language,\n      markup,\n      rootPosition,\n      response\n    );\n    if (displayPosition === null) {\n      // try to find last occurrence of trigger character to position the tooltip\n      const content = editor.model.sharedModel.getSource();\n      const lines = content.split('\\n');\n      const offset = offsetAtPosition(\n        PositionConverter.cm_to_ce(editorPosition!),\n        lines\n      );\n      // maybe?\n      // const offset = cm_editor.getOffsetAt(PositionConverter.cm_to_ce(editorPosition));\n      const subset = content.substring(0, offset);\n      const lastTriggerCharacterOffset = Math.max(\n        ...signatureCharacters.map(character => subset.lastIndexOf(character))\n      );\n      if (lastTriggerCharacterOffset !== -1) {\n        displayPosition = PositionConverter.ce_to_cm(\n          positionAtOffset(lastTriggerCharacterOffset, lines)\n        ) as IEditorPosition;\n      } else {\n        displayPosition = editorPosition;\n      }\n    }\n    this.tooltip.showOrCreate({\n      markup,\n      position: displayPosition!,\n      id: TOOLTIP_ID,\n      ceEditor: editor,\n      adapter: adapter,\n      className: CLASS_NAME,\n      tooltip: {\n        privilege: 'forceAbove',\n        // do not move the tooltip to match the token to avoid drift of the\n        // tooltip due the simplicity of token matching rules; instead we keep\n        // the position constant manually via `displayPosition`.\n        alignment: undefined,\n        hideOnKeyPress: false\n      }\n    });\n  }\n\n  protected isSignatureShown() {\n    return this.tooltip.isShown(TOOLTIP_ID);\n  }\n\n  async afterChange(\n    change: ChangeSet,\n    adapter: WidgetLSPAdapter<any>,\n    editorPosition: IEditorPosition\n  ) {\n    const lastCharacter = extractLastCharacter(change);\n\n    const isSignatureShown = this.isSignatureShown();\n    let previousPosition: IEditorPosition | null = null;\n    await adapter.updateFinished;\n\n    if (isSignatureShown) {\n      previousPosition = this.tooltip.position;\n      if (this._closeCharacters.includes(lastCharacter)) {\n        // remove just in case but do not short-circuit in case if we need to re-trigger\n        this._removeTooltip();\n      }\n    }\n\n    // TODO: use connection for virtual document from root position!\n    const virtualDocument = adapter.virtualDocument;\n    if (!virtualDocument) {\n      this.console.warn('Could not access virtual document');\n      return;\n    }\n    const connection = this.connectionManager.connections.get(\n      virtualDocument.uri\n    )!;\n    if (!connection.isReady) {\n      return;\n    }\n\n    const signatureCharacters =\n      connection.serverCapabilities.signatureHelpProvider?.triggerCharacters ??\n      [];\n\n    // only proceed if: trigger character was used or the signature is/was visible immediately before\n    if (!(signatureCharacters.includes(lastCharacter) || isSignatureShown)) {\n      return;\n    }\n\n    await this._requestSignature(adapter, editorPosition, previousPosition);\n  }\n\n  private async _requestSignature(\n    adapter: WidgetLSPAdapter<any>,\n    newEditorPosition: IEditorPosition,\n    previousPosition: IEditorPosition | null\n  ) {\n    // TODO: why would virtual document be missing?\n    const virtualDocument = adapter.virtualDocument!;\n    const connection = this.connectionManager.connections.get(\n      virtualDocument.uri\n    )!;\n\n    if (\n      !(\n        connection.isReady &&\n        connection.serverCapabilities.signatureHelpProvider\n      )\n    ) {\n      return;\n    }\n\n    // TODO: why missing\n    const rootPosition = virtualDocument.transformFromEditorToRoot(\n      adapter.activeEditor!,\n      newEditorPosition\n    )!;\n\n    this.signatureCharacter = rootPosition;\n\n    const virtualPosition = rootPositionToVirtualPosition(\n      adapter,\n      rootPosition\n    );\n\n    const help = await connection.clientRequests[\n      'textDocument/signatureHelp'\n    ].request({\n      position: {\n        line: virtualPosition.line,\n        character: virtualPosition.ch\n      },\n      textDocument: {\n        uri: virtualDocument.documentInfo.uri\n      }\n    });\n    return this.handleSignature(help, adapter, rootPosition, previousPosition);\n  }\n}\n\nexport namespace SignatureFeature {\n  export interface IOptions extends Feature.IOptions {\n    settings: FeatureSettings<LSPSignatureSettings>;\n    renderMimeRegistry: IRenderMimeRegistry;\n    editorExtensionRegistry: IEditorExtensionRegistry;\n    languageRegistry: IEditorLanguageRegistry;\n  }\n  export const id = PLUGIN_ID + ':signature';\n}\n\nexport const SIGNATURE_PLUGIN: JupyterFrontEndPlugin<void> = {\n  id: SignatureFeature.id,\n  requires: [\n    ILSPFeatureManager,\n    ISettingRegistry,\n    IRenderMimeRegistry,\n    IEditorExtensionRegistry,\n    ILSPDocumentConnectionManager,\n    IEditorLanguageRegistry\n  ],\n  autoStart: true,\n  activate: async (\n    app: JupyterFrontEnd,\n    featureManager: ILSPFeatureManager,\n    settingRegistry: ISettingRegistry,\n    renderMimeRegistry: IRenderMimeRegistry,\n    editorExtensionRegistry: IEditorExtensionRegistry,\n    connectionManager: ILSPDocumentConnectionManager,\n    languageRegistry: IEditorLanguageRegistry\n  ) => {\n    const settings = new FeatureSettings<LSPSignatureSettings>(\n      settingRegistry,\n      SignatureFeature.id\n    );\n    await settings.ready;\n    if (settings.composite.disable) {\n      return;\n    }\n    const feature = new SignatureFeature({\n      settings,\n      connectionManager,\n      renderMimeRegistry,\n      editorExtensionRegistry,\n      languageRegistry\n    });\n    featureManager.register(feature);\n    // return feature;\n  }\n};\n","import { EditorView } from '@codemirror/view';\nimport type { ViewUpdate } from '@codemirror/view';\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport {\n  IEditorMimeTypeService,\n  IEditorServices\n} from '@jupyterlab/codeeditor';\nimport {\n  CodeMirrorEditor,\n  IEditorExtensionRegistry,\n  IEditorLanguageRegistry,\n  EditorExtensionRegistry\n} from '@jupyterlab/codemirror';\nimport {\n  ILSPFeatureManager,\n  ILSPDocumentConnectionManager,\n  WidgetLSPAdapter,\n  Document\n} from '@jupyterlab/lsp';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { LabIcon } from '@jupyterlab/ui-components';\n\nimport syntaxSvg from '../../style/icons/syntax-highlight.svg';\nimport { CodeSyntax as LSPSyntaxHighlightingSettings } from '../_syntax_highlighting';\nimport { ContextAssembler } from '../context';\nimport { FeatureSettings, Feature } from '../feature';\nimport { PLUGIN_ID } from '../tokens';\nimport { VirtualDocument } from '../virtual/document';\n\nexport const syntaxHighlightingIcon = new LabIcon({\n  name: 'lsp:syntax-highlighting',\n  svgstr: syntaxSvg\n});\n\nexport class SyntaxHighlightingFeature extends Feature {\n  readonly id = SyntaxHighlightingFeature.id;\n  // note: semantic highlighting could be implemented here\n  readonly capabilities = {};\n  protected originalModes = new Map<CodeMirrorEditor, string>();\n\n  constructor(protected options: SyntaxHighlightingFeature.IOptions) {\n    super(options);\n    const connectionManager = options.connectionManager;\n    const contextAssembler = options.contextAssembler;\n\n    options.editorExtensionRegistry.addExtension({\n      name: 'lsp:syntaxHighlighting',\n      factory: options => {\n        let intialized = false;\n\n        const updateHandler = async (\n          viewUpdate: ViewUpdate,\n          awaitUpdate = true\n        ) => {\n          const adapter = [...connectionManager.adapters.values()].find(\n            adapter => adapter.widget.node.contains(viewUpdate.view.contentDOM)\n          );\n\n          // TODO https://github.com/jupyterlab/jupyterlab/issues/14711#issuecomment-1624442627\n          // const editor = adapter.editors.find(e => e.model === options.model);\n\n          if (adapter) {\n            await adapter.ready;\n            const accessorFromNode = contextAssembler.editorFromNode(\n              adapter,\n              viewUpdate.view.contentDOM\n            );\n            if (!accessorFromNode) {\n              console.warn(\n                'Editor accessor not found from node, falling back to activeEditor'\n              );\n            }\n            const editorAccessor = accessorFromNode\n              ? accessorFromNode\n              : adapter.activeEditor;\n\n            if (!editorAccessor) {\n              console.warn('No accessor');\n              return;\n            }\n            await this.updateMode(\n              adapter,\n              viewUpdate.view,\n              editorAccessor,\n              awaitUpdate\n            );\n          }\n        };\n\n        const updateListener = EditorView.updateListener.of(\n          async viewUpdate => {\n            if (!viewUpdate.docChanged) {\n              if (intialized) {\n                return;\n              }\n              // TODO: replace this with a simple Promise.all([editorAccessor.ready, adapter.ready]).then(() => updateMode(options.editor))\n              // once JupyterLab 4.1 with improved factory API is out.\n              // For now we wait 2.5 seconds hoping the adapter will be connected\n              // and the document will be ready\n              setTimeout(async () => {\n                await updateHandler(viewUpdate, false);\n              }, 2500);\n              intialized = true;\n            }\n\n            await updateHandler(viewUpdate);\n          }\n        );\n\n        // update the mode at first update even if no changes to ensure the\n        // correct mode gets applied on load.\n\n        return EditorExtensionRegistry.createImmutableExtension([\n          updateListener\n        ]);\n      }\n    });\n  }\n\n  private getMode(language: string): string | undefined {\n    const mimetype = this.options.mimeTypeService.getMimeTypeByLanguage({\n      name: language\n    });\n\n    if (!mimetype || mimetype == 'text/plain') {\n      // if a mimetype cannot be found it will be 'text/plain', therefore do\n      // not change mode to text/plain, as this could be a step backwards for\n      // the user experience\n      return;\n    }\n\n    const editorLanguage = this.options.languageRegistry.findByMIME(mimetype);\n\n    if (!editorLanguage) {\n      return;\n    }\n\n    if (Array.isArray(mimetype)) {\n      // Contrarily to what types say, mimetype can be an array.\n      // https://github.com/jupyterlab/jupyterlab/issues/15100\n      return mimetype[0];\n    }\n\n    return mimetype;\n  }\n\n  async updateMode(\n    adapter: WidgetLSPAdapter<any>,\n    view: EditorView,\n    editorAccessor: Document.IEditor,\n    awaitUpdate = true\n  ) {\n    const topDocument = adapter.virtualDocument as VirtualDocument;\n\n    if (!topDocument) {\n      return;\n    }\n    if (awaitUpdate) {\n      await topDocument.updateManager.updateDone;\n    }\n\n    const editor = editorAccessor.getEditor()! as CodeMirrorEditor;\n    const totalArea = editor.state.doc.length;\n\n    const overrides = new Map();\n    for (const map of topDocument.getForeignDocuments(editorAccessor)) {\n      for (const [range, block] of map.entries()) {\n        const blockEditor = block.editor.getEditor()! as CodeMirrorEditor;\n        if (blockEditor != editor) {\n          continue;\n        }\n        const coveredArea =\n          editor.getOffsetAt(range.end) - editor.getOffsetAt(range.start);\n        const coverage = coveredArea / totalArea;\n\n        const language = block.virtualDocument.language;\n        const mode = this.getMode(language);\n\n        // if not highlighting mode available, skip this editor\n        if (typeof mode === 'undefined') {\n          continue;\n        }\n\n        // change the mode if the majority of the code is the foreign code\n        if (coverage > this.options.settings.composite.foreignCodeThreshold) {\n          const original = editor.model.mimeType;\n          // this will trigger a side effect of switching language by updating\n          // private language compartment (implementation detail).\n          editor.model.mimeType = mode;\n          overrides.set(editor, original);\n        }\n      }\n    }\n    // restore mode on the editor if it no longer over the threshold\n    // (but only those which belong to this adapter).\n    if (!overrides.has(editor)) {\n      const originalMode = this.originalModes.get(editor);\n      if (originalMode) {\n        editor.model.mimeType = originalMode;\n      }\n    }\n    // add new overrides to remember the original mode\n    for (const [editor, mode] of overrides) {\n      if (!this.originalModes.has(editor)) {\n        this.originalModes.set(editor, mode);\n      }\n    }\n  }\n}\n\nexport namespace SyntaxHighlightingFeature {\n  export interface IOptions extends Feature.IOptions {\n    settings: FeatureSettings<LSPSyntaxHighlightingSettings>;\n    mimeTypeService: IEditorMimeTypeService;\n    editorExtensionRegistry: IEditorExtensionRegistry;\n    languageRegistry: IEditorLanguageRegistry;\n    contextAssembler: ContextAssembler;\n  }\n  export const id = PLUGIN_ID + ':syntax_highlighting';\n}\n\nexport const SYNTAX_HIGHLIGHTING_PLUGIN: JupyterFrontEndPlugin<void> = {\n  id: SyntaxHighlightingFeature.id,\n  requires: [\n    ILSPFeatureManager,\n    IEditorServices,\n    ISettingRegistry,\n    IEditorExtensionRegistry,\n    IEditorLanguageRegistry,\n    ILSPDocumentConnectionManager\n  ],\n  autoStart: true,\n  activate: async (\n    app: JupyterFrontEnd,\n    featureManager: ILSPFeatureManager,\n    editorServices: IEditorServices,\n    settingRegistry: ISettingRegistry,\n    editorExtensionRegistry: IEditorExtensionRegistry,\n    languageRegistry: IEditorLanguageRegistry,\n    connectionManager: ILSPDocumentConnectionManager\n  ) => {\n    const settings = new FeatureSettings<LSPSyntaxHighlightingSettings>(\n      settingRegistry,\n      SyntaxHighlightingFeature.id\n    );\n    await settings.ready;\n    if (settings.composite.disable) {\n      return;\n    }\n    const contextAssembler = new ContextAssembler({\n      app,\n      connectionManager\n    });\n    const feature = new SyntaxHighlightingFeature({\n      settings,\n      connectionManager,\n      editorExtensionRegistry,\n      mimeTypeService: editorServices.mimeTypeService,\n      languageRegistry,\n      contextAssembler\n    });\n    featureManager.register(feature);\n    // return feature;\n  }\n};\n","import { JupyterFrontEndPlugin } from '@jupyterlab/application';\n\nimport {\n  ICodeOverridesRegistry,\n  ILSPCodeOverridesManager,\n  IScopedCodeOverride\n} from './tokens';\n\nexport class CodeOverridesManager implements ILSPCodeOverridesManager {\n  private readonly _overrides: ICodeOverridesRegistry;\n\n  get registry() {\n    return this._overrides;\n  }\n\n  constructor() {\n    this._overrides = {};\n  }\n\n  register(override: IScopedCodeOverride, language: string) {\n    if (!(language in this._overrides)) {\n      this._overrides[language] = { cell: [], line: [] };\n    }\n    let overrides = this._overrides[language];\n    switch (override.scope) {\n      case 'cell':\n        overrides.cell.push(override);\n        break;\n      case 'line':\n        overrides.line.push(override);\n        break;\n    }\n  }\n}\n\nexport const CODE_OVERRIDES_MANAGER: JupyterFrontEndPlugin<ILSPCodeOverridesManager> =\n  {\n    id: ILSPCodeOverridesManager.name,\n    requires: [],\n    activate: app => {\n      return new CodeOverridesManager();\n    },\n    provides: ILSPCodeOverridesManager,\n    autoStart: true\n  };\n","import { ILanguageServerManager, LanguageServerManager } from '@jupyterlab/lsp';\nimport {\n  ISettingRegistry,\n  ISchemaValidator\n} from '@jupyterlab/settingregistry';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport { FormComponent } from '@jupyterlab/ui-components';\nimport { ReadonlyPartialJSONObject } from '@lumino/coreutils';\nimport { IChangeEvent } from '@rjsf/core';\nimport {\n  FieldProps,\n  ObjectFieldTemplateProps,\n  TemplatesType\n} from '@rjsf/utils';\nimport validatorAjv8 from '@rjsf/validator-ajv8';\nimport React, { useState } from 'react';\n\nimport { TLanguageServerId, TLanguageServerSpec } from '../tokens';\n\nimport { ServerLinksList } from './utils';\n\nnamespace LanguageServerSettingsEditor {\n  export interface IProps extends FieldProps {\n    settingRegistry: ISettingRegistry;\n    languageServerManager: ILanguageServerManager;\n    trans: TranslationBundle;\n    validationErrors: ISchemaValidator.IError[];\n  }\n  // TODO\n  export type IState = any;\n}\nexport const renderCollapseConflicts = (props: {\n  conflicts: Record<string, Record<string, any[]>>;\n  trans: TranslationBundle;\n}) => {\n  const conflicts = Object.entries(props.conflicts).map(\n    ([server, serverConflicts]) => {\n      if (Object.keys(serverConflicts).length === 0) {\n        return null;\n      }\n      const listing = Object.entries(serverConflicts).map(([key, values]) => (\n        <li key={'lsp-server-setting-conflict-' + key}>\n          <code>{key}</code>: <code>{JSON.stringify(values)}</code>\n        </li>\n      ));\n      return (\n        <div key={'lsp-server-setting-conflict-' + server}>\n          <h4>{server}</h4>\n          <ul>{listing}</ul>\n        </div>\n      );\n    }\n  );\n  return (\n    <div>\n      {props.trans.__('Multiple distinct values detected for:')}\n      {conflicts}\n      {props.trans.__(\n        'Retaining the last value for each of the settings. Please remove the additional values in JSON Settings Editor.'\n      )}\n    </div>\n  );\n};\n\nexport const renderLanguageServerSettings = (\n  props: LanguageServerSettingsEditor.IProps\n) => {\n  return <LanguageServerSettings {...props} />;\n};\n\nexport class LanguageServerSettings extends React.Component<\n  LanguageServerSettingsEditor.IProps,\n  LanguageServerSettingsEditor.IState\n> {\n  constructor(props: LanguageServerSettingsEditor.IProps) {\n    super(props);\n    this.state = { ...props.formData };\n    this._objectTemplate = TabbedObjectTemplateFactory({\n      baseTemplate: this.props.registry.templates.ObjectFieldTemplate,\n      objectSelector: props => {\n        return (\n          props.title === this.props.schema.title &&\n          props.description === this.props.schema.description\n        );\n      },\n      trans: this.props.trans,\n      languageServerManager: this.props.languageServerManager\n    });\n  }\n\n  render(): JSX.Element {\n    this.props.schema.description = undefined;\n    // hide the boilerplate title/description from schema definitions\n    for (const serverSchema of Object.values(this.props.schema.properties!)) {\n      // note: have to be strings.\n      (serverSchema as any).title = '';\n      (serverSchema as any).description = '';\n    }\n\n    const validationErrors = this.props.validationErrors.map(error => (\n      <li key={'lsp-validation-error-' + error.instancePath}>\n        <b>{error.keyword}</b>: {error.message} in{' '}\n        <code>{error.instancePath}</code>\n        {error.params && 'allowedValues' in error.params\n          ? this.props.trans.__(\n              'allowed values: %1',\n              JSON.stringify(error.params.allowedValues)\n            )\n          : null}\n      </li>\n    ));\n    const templates = {\n      ...this.props.registry.templates,\n      ObjectFieldTemplate: this._objectTemplate\n    };\n    // remove self field to avoid infinite recursion\n    const fields = Object.fromEntries(\n      Object.entries(this.props.registry.fields).filter(\n        f => f[0] != 'language_servers'\n      )\n    );\n\n    return (\n      <div className=\"lsp-ServerSettings\">\n        <h3 className=\"lsp-ServerSettings-title\">\n          {this.props.trans.__('Language servers')}\n        </h3>\n        {validationErrors.length > 0 ? (\n          <div className=\"lsp-ServerSettings-validationError\">\n            <h4>\n              {this.props.trans.__(\n                'Validation of user settings for language server failed'\n              )}\n            </h4>\n            <p>\n              {this.props.trans.__(\n                'Your language server settings do not follow current schema. The LSP configuration graphical interface will run in schema-free mode to enable you to continue using the current settings as-is (in case if the schema is outdated). If this is however an earlier configuration mistake (settings were not validated in earlier versions of jupyterlab-lsp), please correct the following validation errors in JSON Settings Editor, save, and reload application:'\n              )}\n            </p>\n            <ul>{validationErrors}</ul>\n          </div>\n        ) : null}\n        <FormComponent\n          schema={this.props.schema}\n          formData={this.state}\n          validator={validatorAjv8}\n          // note: default JupyterLab `FieldTemplate` cannot correctly distinguish fields\n          // modified relative to programatically populated (transformed) schema >of objects<;\n          // the issue is in lines: https://github.com/jupyterlab/jupyterlab/blob/c2907074e58725942946a73a823fc60e1795da39/packages/settingeditor/src/SettingsFormEditor.tsx#L254-L272\n          // this is because 1) the schemaIds does not include the object key\n          // 2) the code assumes all objects on the same have the same defaults\n          // Probably the solution is to perform modification check on the level of ObjectFieldTemplate instead; this should be implemented upstream in JupyterLab.\n          // TODO\n          templates={templates}\n          uiSchema={this.props.uiSchema}\n          fields={fields}\n          formContext={this.props.formContext}\n          liveValidate\n          idPrefix={this.props.idPrefix + '_language_servers'}\n          onChange={this._onChange.bind(this)}\n        />\n      </div>\n    );\n  }\n\n  private _onChange(event: IChangeEvent<ReadonlyPartialJSONObject>): void {\n    if (event.errors.length) {\n      console.error('Errors in form validation:', event.errors);\n    }\n    this.setState(event.formData, () => this.props.onChange(this.state));\n  }\n\n  private _objectTemplate: React.FC<ObjectFieldTemplateProps>;\n}\n\n/**\n * Template for tabbed interface.\n */\nconst TabbedObjectTemplateFactory = (options: {\n  baseTemplate: TemplatesType['ObjectFieldTemplate'];\n  languageServerManager: ILanguageServerManager;\n  objectSelector: (props: ObjectFieldTemplateProps) => boolean;\n  trans: TranslationBundle;\n}): React.FC<ObjectFieldTemplateProps> => {\n  const factory = (props: ObjectFieldTemplateProps) => {\n    if (!options.objectSelector(props)) {\n      const BaseTemplate = options.baseTemplate;\n      return <BaseTemplate {...props} />;\n    }\n    const [tab, setTab] = useState(\n      props.properties.length > 0 ? props.properties[0].name : null\n    );\n\n    const renderServerLabels = (options: {\n      properties: typeof props.properties;\n      filter: (name: TLanguageServerId) => boolean;\n      title: string;\n    }) => {\n      const retained = options.properties.filter(property =>\n        options.filter(property.name as TLanguageServerId)\n      );\n      if (retained.length == 0) {\n        return null;\n      }\n      return (\n        <>\n          <h4 className={'lsp-ServerSettings-list-group'}>{options.title}</h4>\n          <ul>\n            {retained.map(property => {\n              return (\n                <li\n                  onClick={() => setTab(property.name)}\n                  key={'tab-' + property.name}\n                  data-tab={property.name}\n                  className={property.name === tab ? 'lsp-selected' : undefined}\n                >\n                  {property.name}\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      );\n    };\n    const renderServerMetadata = (spec: TLanguageServerSpec) => {\n      const workspaceConfig = spec.workspace_configuration as Record<\n        string,\n        any\n      >;\n      return (\n        <div>\n          <h4 className={'lsp-ServerSettings-content-name'}>\n            {spec.display_name}\n          </h4>\n          <ServerLinksList specification={spec} />\n          {workspaceConfig ? (\n            <p className={'lsp-ServerSettings-content-specOverrides'}>\n              {trans.__('Default values set programatically for: ') +\n                Object.keys(workspaceConfig).join(', ')}\n            </p>\n          ) : null}\n        </div>\n      );\n    };\n    const manager = options.languageServerManager;\n    const trans = options.trans;\n\n    // TODO: expose `specs` upstream\n    return (\n      <fieldset id={props.idSchema.$id}>\n        <div className={'lsp-ServerSettings-tabs'}>\n          <div className={'lsp-ServerSettings-list'}>\n            {renderServerLabels({\n              properties: props.properties,\n              filter: name => manager.sessions.has(name),\n              title: trans.__('Available')\n            })}\n            {renderServerLabels({\n              properties: props.properties,\n              filter: name => !manager.sessions.has(name),\n              title: trans.__('Not installed')\n            })}\n          </div>\n          <div className={'lsp-ServerSettings-content'}>\n            {(manager as LanguageServerManager).specs.has(\n              tab as TLanguageServerId\n            )\n              ? renderServerMetadata(\n                  (manager as LanguageServerManager).specs.get(\n                    tab as TLanguageServerId\n                  )!\n                )\n              : null}\n            {props.properties\n              .filter(property => property.name === tab)\n              .map(property => property.content)}\n          </div>\n        </div>\n      </fieldset>\n    );\n  };\n  factory.displayName = 'TabbedObjectTemplate';\n  return factory;\n};\n","import { showDialog, Dialog } from '@jupyterlab/apputils';\nimport { ILanguageServerManager, LanguageServerManager } from '@jupyterlab/lsp';\nimport {\n  ISettingRegistry,\n  ISchemaValidator\n} from '@jupyterlab/settingregistry';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport {\n  JSONExt,\n  ReadonlyPartialJSONObject,\n  ReadonlyJSONObject,\n  PromiseDelegate\n} from '@lumino/coreutils';\nimport { Signal, ISignal } from '@lumino/signaling';\nimport { FieldProps } from '@rjsf/utils';\n\nimport { LanguageServers } from './_plugin';\nimport {\n  renderLanguageServerSettings,\n  renderCollapseConflicts\n} from './components/serverSettings';\nimport { ILSPLogConsole } from './tokens';\nimport { collapseToDotted } from './utils';\n\ntype ValueOf<T> = T[keyof T];\ntype ServerSchemaWrapper = ValueOf<\n  Required<LanguageServers>['language_servers']\n>;\n\n/**\n * Only used for TypeScript type coercion, not meant to represent a property fully.\n */\ninterface IJSONProperty {\n  type?: string | string[];\n  description?: string;\n  $ref?: string;\n}\n\nfunction isJSONProperty(obj: unknown): obj is IJSONProperty {\n  return (\n    typeof obj === 'object' && obj !== null && ('type' in obj || '$ref' in obj)\n  );\n}\n\n/**\n * Settings keyed by language server name with values including\n * multiple properties, such as priority or workspace configuration\n */\ntype LanguageServerSettings = Record<string, ServerSchemaWrapper>;\n\n/**\n * Get default values from JSON Schema properties field.\n */\nfunction getDefaults(\n  properties: ReadonlyPartialJSONObject | undefined\n): Record<string, any> {\n  if (properties == null) {\n    return {};\n  }\n  // TODO: also get defaults from ref?\n  const defaults: Record<string, any> = {};\n  const entries = Object.entries(properties)\n    .map(([key, value]) => [key, (value as any)?.default])\n    .filter(([key, value]) => typeof value !== 'undefined');\n  // TODO: use Object.fromEntries once we switch target\n  for (let [key, value] of entries) {\n    defaults[key] = value;\n  }\n  return defaults;\n}\n\n/**\n * Schema and user data that for validation\n */\ninterface IValidationData {\n  rawUserSettings: string;\n  schema: ISettingRegistry.ISchema;\n}\n\n/**\n * Conflicts encountered when dot-collapsing settings\n * organised by server ID, and then as a mapping between\n * (dotted) setting ID and list of encountered values.\n * The last encountered values is preferred for use.\n */\ntype SettingsMergeConflicts = Record<string, Record<string, any[]>>;\n\ninterface ISettingsCollapseResult {\n  settings: LanguageServerSettings;\n  conflicts: SettingsMergeConflicts;\n}\n\nexport class SettingsUIManager {\n  constructor(\n    protected options: {\n      settingRegistry: ISettingRegistry;\n      languageServerManager: ILanguageServerManager;\n      console: ILSPLogConsole;\n      trans: TranslationBundle;\n      schemaValidated: ISignal<\n        SettingsSchemaManager,\n        ISchemaValidator.IError[]\n      >;\n    }\n  ) {\n    options.schemaValidated.connect((_, errors) => {\n      this._validationErrors = errors;\n    });\n    this._validationErrors = [];\n  }\n\n  renderForm(props: FieldProps) {\n    return renderLanguageServerSettings({\n      settingRegistry: this.options.settingRegistry,\n      languageServerManager: this.options.languageServerManager,\n      trans: this.options.trans,\n      validationErrors: this._validationErrors,\n      ...props\n    });\n  }\n\n  private _validationErrors: ISchemaValidator.IError[];\n}\n\n/**\n * Harmonize settings from schema, defaults from specification, and values set by user.\n */\nexport class SettingsSchemaManager {\n  constructor(\n    protected options: {\n      settingRegistry: ISettingRegistry;\n      languageServerManager: ILanguageServerManager;\n      console: ILSPLogConsole;\n      trans: TranslationBundle;\n      /**\n       * Promise resolved when JupyterLab splash screen disappears.\n       */\n      restored: Promise<void>;\n    }\n  ) {\n    this._schemaValidated = new Signal(this);\n    this._defaults = {};\n    this._canonical = null;\n    this._original = null;\n    this._validationAttempt = 0;\n    this._lastValidation = null;\n    this._lastUserServerSettings = null;\n    this._lastUserServerSettingsDoted = null;\n    this._validationErrors = [];\n  }\n\n  get schemaValidated(): ISignal<\n    SettingsSchemaManager,\n    ISchemaValidator.IError[]\n  > {\n    return this._schemaValidated;\n  }\n\n  protected get console(): ILSPLogConsole {\n    return this.options.console;\n  }\n\n  /**\n   * Add schema for individual language servers into JSON schema.\n   * This method has to be called before any other action\n   * is performed on settingRegistry with regard to pluginId.\n   */\n  async setupSchemaTransform(pluginId: string): Promise<void> {\n    const languageServerManager = this.options.languageServerManager;\n    // To populate defaults we require specs to be available, so we need to\n    // wait for until after the `languageServerManager` is ready.\n    await languageServerManager.ready;\n\n    // Transform the plugin object to return different schema than the default.\n    this.options.settingRegistry.transform(pluginId, {\n      fetch: plugin => {\n        // Profiling data (earlier version):\n        // Initial fetch: 61-64 ms\n        // Subsequent without change: <1ms\n        // Session change: 642 ms.\n        // 91% spent on `validateData()` of which 10% in addSchema().\n        // 1.8% spent on `deepCopy()`\n        // 1.79% spend on other tasks in `populate()`\n        // There is a limit on the transformation time, and failing to transform\n        // in the default 1 second means that no settings whatsoever are available.\n        // Therefore validation in `populate()` was moved into an async function;\n        // this means that we need to trigger re-load of settings\n        // if there validation errors.\n\n        // Only store the original schema the first time.\n        if (!this._original) {\n          this._original = JSONExt.deepCopy(plugin.schema);\n        }\n        // Only override the canonical schema the first time (or after reset).\n        if (!this._canonical) {\n          this._canonical = JSONExt.deepCopy(plugin.schema);\n          this._populate(plugin, this._canonical);\n          this._defaultsPopulated.resolve(void 0);\n        }\n\n        return {\n          data: plugin.data,\n          id: plugin.id,\n          raw: plugin.raw,\n          schema: this._validationErrors.length\n            ? this._original\n            : this._canonical,\n          version: plugin.version\n        };\n      }\n    });\n\n    // note: has to be after transform is called for the first time to avoid\n    // race condition, see https://github.com/jupyterlab/jupyterlab/issues/12978\n    languageServerManager.sessionsChanged.connect(async () => {\n      this._canonical = null;\n      this._defaultsPopulated = new PromiseDelegate();\n      await this.options.settingRegistry.reload(pluginId);\n    });\n  }\n\n  /**\n   * Populate the plugin's schema defaults, transform descriptions.\n   */\n  private _populate(\n    plugin: ISettingRegistry.IPlugin,\n    schema: ISettingRegistry.ISchema\n  ) {\n    const languageServerManager = this.options.languageServerManager;\n    const baseServerSchema = (schema.definitions as any)['language-server'] as {\n      description: string;\n      title: string;\n      definitions: Record<string, any>;\n      properties: ServerSchemaWrapper;\n    };\n\n    const defaults: Record<string, any> = {};\n    const knownServersConfig: Record<string, any> = {};\n    // `sharedDefaults` may be empty as we do not define/receive custom\n    // per-property defaults in schema as of the day of writing.\n    const sharedDefaults = getDefaults(\n      schema.properties!.language_servers.properties\n    );\n    const defaultsOverrides = schema.properties!.language_servers.default as\n      | Record<string, any>\n      | undefined;\n\n    // TODO: expose `specs` upstream\n    for (let [serverKey, serverSpec] of (\n      languageServerManager as LanguageServerManager\n    ).specs.entries()) {\n      if ((serverKey as string) === '') {\n        this.console.warn(\n          'Empty server key - skipping transformation for',\n          serverSpec\n        );\n        continue;\n      }\n\n      const configSchema = serverSpec.config_schema;\n      if (!configSchema) {\n        this.console.warn(\n          'No config schema - skipping transformation for',\n          serverKey\n        );\n        continue;\n      }\n      if (!configSchema.properties) {\n        this.console.warn(\n          'No properties in config schema - skipping transformation for',\n          serverKey\n        );\n        continue;\n      }\n\n      // let user know if server not available (installed, etc)\n      if (!languageServerManager.sessions.has(serverKey)) {\n        configSchema.description = this.options.trans.__(\n          'Settings that would be passed to `%1` server (this server was not detected as installed during startup) in `workspace/didChangeConfiguration` notification.',\n          serverSpec.display_name\n        );\n      } else {\n        configSchema.description = this.options.trans.__(\n          'Settings to be passed to %1 in `workspace/didChangeConfiguration` notification.',\n          serverSpec.display_name\n        );\n      }\n      configSchema.title = this.options.trans.__('Workspace Configuration');\n\n      // resolve refs\n      for (let [key, value] of Object.entries(configSchema.properties)) {\n        if (!isJSONProperty(value)) {\n          continue;\n        }\n        if (typeof value.$ref === 'undefined') {\n          continue;\n        }\n        if (value.$ref.startsWith('#/definitions/')) {\n          const definitionID = value['$ref'].substring(14);\n          const definition = configSchema.definitions[definitionID];\n          if (definition == null) {\n            this.console.warn('Definition not found');\n          }\n          for (let [defKey, defValue] of Object.entries(definition)) {\n            configSchema.properties[key][defKey] = defValue;\n          }\n          delete value.$ref;\n        } else {\n          this.console.warn('Unsupported $ref', value['$ref']);\n        }\n      }\n\n      // add default overrides from spec\n      const workspaceConfigurationDefaults =\n        serverSpec.workspace_configuration as Record<string, any> | undefined;\n      if (workspaceConfigurationDefaults) {\n        for (const [key, value] of Object.entries(\n          workspaceConfigurationDefaults\n        )) {\n          if (!configSchema.properties.hasOwnProperty(key)) {\n            this.console.warn(\n              '`workspace_configuration` includes an override for key not in schema',\n              key,\n              serverKey\n            );\n            continue;\n          }\n          configSchema.properties[key].default = value;\n        }\n      }\n      // add server-specific default overrides from overrides.json (and pre-defined in schema)\n      const serverDefaultsOverrides =\n        defaultsOverrides && defaultsOverrides.hasOwnProperty(serverKey)\n          ? defaultsOverrides[serverKey]\n          : {};\n      if (serverDefaultsOverrides.serverSettings) {\n        for (const [key, value] of Object.entries(\n          serverDefaultsOverrides.serverSettings\n        )) {\n          if (!configSchema.properties.hasOwnProperty(key)) {\n            this.console.warn(\n              '`overrides.json` includes an override for key not in schema',\n              key,\n              serverKey\n            );\n            continue;\n          }\n          configSchema.properties[key].default = value;\n        }\n      }\n\n      const defaultMap = getDefaults(configSchema.properties);\n\n      const baseSchemaCopy = JSONExt.deepCopy(baseServerSchema);\n      baseSchemaCopy.properties.serverSettings = configSchema;\n      knownServersConfig[serverKey] = baseSchemaCopy;\n      defaults[serverKey] = {\n        ...sharedDefaults,\n        ...serverDefaultsOverrides,\n        serverSettings: defaultMap\n      };\n    }\n\n    schema.properties!.language_servers.properties = knownServersConfig;\n    schema.properties!.language_servers.default = defaults;\n\n    this._validateSchemaLater(plugin, schema).catch(this.console.warn);\n    this._defaults = defaults;\n  }\n\n  /**\n   * Normalize settings by dotted and nested specs, and merging with defaults.\n   */\n  async normalizeSettings(\n    composite: Required<LanguageServers>\n  ): Promise<Required<LanguageServers>> {\n    await this._defaultsPopulated.promise;\n    // Cache collapsed settings for speed and to only show dialog once.\n    // Note that JupyterLab attempts to transform in \"preload\" step (before splash screen end)\n    // and then again for deferred extensions if the initial transform in preload timed out.\n    // We are hitting the timeout in preload step.\n    if (\n      this._lastUserServerSettings === null ||\n      this._lastUserServerSettingsDoted === null ||\n      !JSONExt.deepEqual(\n        this._lastUserServerSettings,\n        composite.language_servers\n      )\n    ) {\n      this._lastUserServerSettings = composite.language_servers;\n\n      const collapsedDefaults = this._collapseServerSettingsDotted(\n        this._defaults\n      );\n      const collapsedUser = this._collapseServerSettingsDotted(\n        composite.language_servers\n      );\n\n      composite.language_servers = this._mergeByServer(\n        collapsedDefaults.settings,\n        collapsedUser.settings\n      );\n      this._lastUserServerSettingsDoted = composite.language_servers;\n\n      if (Object.keys(collapsedUser.conflicts).length > 0) {\n        this._warnConflicts(\n          collapsedUser.conflicts,\n          'Conflicts in user settings'\n        ).catch(this.console.warn);\n      }\n      if (Object.keys(collapsedDefaults.conflicts).length > 0) {\n        this._warnConflicts(\n          collapsedDefaults.conflicts,\n          'Conflicts in defaults'\n        ).catch(this.console.warn);\n      }\n    } else {\n      composite.language_servers = this._lastUserServerSettingsDoted;\n    }\n\n    // We do not filter out defaults at this level,\n    // as it does not provide an obvious benefit:\n    // - we would need to explicitly save the updated settings\n    //   to get a clean version in JSON Setting Editor.\n    // - if default changed on the LSP server side but schema did not get\n    //   updated, LSP server would be using a different value than communicated\n    //   to the user. It would be optimal to filter out defaults from\n    //   user data and always keep them in composite,\n    // - making Jupyter server-side `workspace_configuration` work would\n    //   be more difficult\n\n    // TODO: trigger update of settings to ensure that UI uses the same settings as collapsed?\n    return composite;\n  }\n\n  private _wasPreviouslyValidated(\n    plugin: ISettingRegistry.IPlugin,\n    schema: ISettingRegistry.ISchema\n  ) {\n    return (\n      this._lastValidation !== null &&\n      this._lastValidation.rawUserSettings === plugin.raw &&\n      JSONExt.deepEqual(this._lastValidation.schema, schema)\n    );\n  }\n\n  /**\n   * Validate user settings from plugin against provided schema,\n   * asynchronously to avoid blocking the main thread.\n   * Stores validation result in `this._validationErrors`.\n   */\n  private async _validateSchemaLater(\n    plugin: ISettingRegistry.IPlugin,\n    schema: ISettingRegistry.ISchema\n  ) {\n    // Ensure the subsequent code runs asynchronously; also reduce the CPU load on startup.\n    await this.options.restored;\n\n    // Do not re-validate if neither schema, nor user settings changed\n    if (this._wasPreviouslyValidated(plugin, schema)) {\n      return;\n    }\n    // Test if we can apply the schema without causing validation error\n    // (is the configuration held by the user compatible with the schema?)\n    this._validationAttempt += 1;\n    // the validator will parse raw plugin data into this object;\n    // we do not do anything with those right now.\n    const parsedData = { composite: {}, user: {} };\n    const validationErrors =\n      this.options.settingRegistry.validator.validateData(\n        {\n          // The plugin schema is cached so we have to provide a dummy ID;\n          // can be simplified once https://github.com/jupyterlab/jupyterlab/issues/12978 is fixed.\n          id: `lsp-validation-attempt-${this._validationAttempt}`,\n          raw: plugin.raw,\n          data: parsedData,\n          version: plugin.version,\n          schema: schema\n        },\n        true\n      );\n\n    this._lastValidation = {\n      rawUserSettings: plugin.raw,\n      schema: schema\n    };\n\n    if (validationErrors) {\n      console.error(\n        'LSP server settings validation failed; graphical interface for settings will run in schema-free mode; errors:',\n        validationErrors\n      );\n      this._validationErrors = validationErrors;\n      this._schemaValidated.emit(validationErrors);\n      if (!this._original) {\n        console.error(\n          'Original language servers schema not available to restore non-transformed values.'\n        );\n      } else {\n        if (!this._original.properties!.language_servers.properties) {\n          delete schema.properties!.language_servers.properties;\n        }\n        if (!this._original.properties!.language_servers.default) {\n          delete schema.properties!.language_servers.default;\n        }\n      }\n\n      // Reload settings to use non-restrictive schema; this requires fixing\n      // https://github.com/jupyterlab/jupyterlab/issues/12978 upstream to work.\n      await this.options.settingRegistry.reload(plugin.id);\n    }\n  }\n\n  private async _warnConflicts(\n    conflicts: SettingsMergeConflicts,\n    title: string\n  ) {\n    // Ensure the subsequent code runs asynchronously, and delay\n    // showing the dialog until the splash screen disappeared.\n    await this.options.restored;\n\n    showDialog({\n      body: renderCollapseConflicts({\n        conflicts: conflicts,\n        trans: this.options.trans\n      }),\n      title: title,\n      buttons: [Dialog.okButton()]\n    }).catch(console.warn);\n  }\n\n  private _collapseServerSettingsDotted(\n    settings: LanguageServerSettings\n  ): ISettingsCollapseResult {\n    const conflicts: Record<string, Record<string, any[]>> = {};\n    const result = JSONExt.deepCopy(settings) as LanguageServerSettings;\n    for (let [serverKey, serverSettingsGroup] of Object.entries(settings)) {\n      if (!serverSettingsGroup || !serverSettingsGroup.serverSettings) {\n        continue;\n      }\n      const collapsed = collapseToDotted(\n        serverSettingsGroup.serverSettings as ReadonlyJSONObject\n      );\n      if (Object.keys(collapsed.conflicts).length) {\n        conflicts[serverKey] = collapsed.conflicts;\n      }\n      result[serverKey]!.serverSettings = collapsed.result;\n    }\n    return {\n      settings: result,\n      conflicts: conflicts\n    };\n  }\n\n  private _mergeByServer(\n    defaults: LanguageServerSettings,\n    userSettings: LanguageServerSettings\n  ): LanguageServerSettings {\n    const result = JSONExt.deepCopy(defaults) as LanguageServerSettings;\n    for (let [serverKey, serverSettingsGroup] of Object.entries(userSettings)) {\n      if (!serverSettingsGroup || !serverSettingsGroup.serverSettings) {\n        continue;\n      }\n      if (typeof result[serverKey] === 'undefined') {\n        // nothing to merge with\n        result[serverKey] = JSONExt.deepCopy(serverSettingsGroup);\n      } else {\n        const merged: Required<ServerSchemaWrapper> = {\n          priority: (result[serverKey].priority ||\n            serverSettingsGroup.priority) as any,\n          // `serverSettings` entries are expected to be flattened to dot notation here.\n          serverSettings: {\n            ...(result[serverKey].serverSettings || {}),\n            ...(serverSettingsGroup.serverSettings || {})\n          }\n        };\n        result[serverKey] = merged;\n      }\n    }\n    return result;\n  }\n\n  private _defaults: LanguageServerSettings;\n  private _defaultsPopulated = new PromiseDelegate();\n  private _validationErrors: ISchemaValidator.IError[];\n  private _schemaValidated: Signal<\n    SettingsSchemaManager,\n    ISchemaValidator.IError[]\n  >;\n  private _validationAttempt: number;\n  private _lastValidation: IValidationData | null;\n  private _lastUserServerSettings: LanguageServerSettings | null;\n  private _lastUserServerSettingsDoted: LanguageServerSettings | null;\n  private _canonical: ISettingRegistry.ISchema | null;\n  private _original: ISettingRegistry.ISchema | null;\n}\n","import { IForeignCodeExtractor } from '@jupyterlab/lsp';\n\nimport { RegExpForeignCodeExtractor } from '../../extractors/regexp';\n\nexport interface IForeignCodeExtractorsRegistry {\n  [host_language: string]: IForeignCodeExtractor[];\n}\n\nexport let foreignCodeExtractors: IForeignCodeExtractorsRegistry = {\n  // general note: to match new lines use [^] instead of dot, unless the target is ES2018, then use /s\n  python: [\n    //\n    // Standalone IPython magics\n    // (script magics are standalone, i.e. consecutive code cells with the same magic create two different namespaces)\n    //\n    new RegExpForeignCodeExtractor({\n      language: 'python',\n      pattern: '^%%(python|python2|python3|pypy)( .*?)?\\n([^]*)',\n      foreignCaptureGroups: [3],\n      isStandalone: true,\n      fileExtension: 'py'\n    }),\n    new RegExpForeignCodeExtractor({\n      language: 'perl',\n      pattern: '^%%(perl)( .*?)?\\n([^]*)',\n      foreignCaptureGroups: [3],\n      isStandalone: true,\n      fileExtension: 'pl'\n    }),\n    new RegExpForeignCodeExtractor({\n      language: 'ruby',\n      pattern: '^%%(ruby)( .*?)?\\n([^]*)',\n      foreignCaptureGroups: [3],\n      isStandalone: true,\n      fileExtension: 'rb'\n    }),\n    new RegExpForeignCodeExtractor({\n      language: 'sh',\n      pattern: '^%%(sh|bash)( .*?)?\\n([^]*)',\n      foreignCaptureGroups: [3],\n      isStandalone: true,\n      fileExtension: 'sh'\n    }),\n    new RegExpForeignCodeExtractor({\n      language: 'html',\n      pattern: '^%%(html --isolated)( .*?)?\\n([^]*)',\n      foreignCaptureGroups: [3],\n      isStandalone: true,\n      fileExtension: 'html'\n    }),\n    //\n    // IPython magics producing continuous documents (non-standalone):\n    //\n    new RegExpForeignCodeExtractor({\n      language: 'javascript',\n      pattern: '^%%(js|javascript)( .*?)?\\n([^]*)',\n      foreignCaptureGroups: [3],\n      isStandalone: false,\n      fileExtension: 'js'\n    }),\n    new RegExpForeignCodeExtractor({\n      language: 'html',\n      pattern: '^%%(?!html --isolated)(html)( .*?)?\\n([^]*)',\n      foreignCaptureGroups: [3],\n      isStandalone: false,\n      fileExtension: 'html'\n    }),\n    new RegExpForeignCodeExtractor({\n      language: 'latex',\n      pattern: '^%%(latex)( .*?)?\\n([^]*)',\n      foreignCaptureGroups: [3],\n      isStandalone: false,\n      fileExtension: 'tex'\n    }),\n    new RegExpForeignCodeExtractor({\n      language: 'markdown',\n      pattern: '^%%(markdown)( .*?)?\\n([^]*)',\n      foreignCaptureGroups: [3],\n      isStandalone: false,\n      fileExtension: 'md'\n    })\n  ]\n};\n","import { IScopedCodeOverride } from '../../overrides/tokens';\n\nfunction escape(x: string) {\n  return x.replace(/([\"\\\\])/g, '\\\\$1');\n}\n\nfunction unescape(x: string) {\n  return x.replace(/\\\\([\\\\\"])/g, '$1');\n}\n\nfunction emptyOrEscaped(x: string) {\n  if (!x) {\n    return '';\n  } else {\n    return escape(x);\n  }\n}\n\n/**\n * Line magics do not have to start with the new line, for example:\n *    x = !ls\n *    x = %ls\n *    x =%ls\n * are all valid.\n *\n * The percent may also appear in strings, e.g. ls('%').\n *\n * IPython allows magics on start of a line or in assignments (but only there!), thus:\n *    x = (!ls)\n * is invalid syntax!\n *\n * Therefore we can require that the match starts with either:\n * - zero or more whitespaces right after the beginning of a line, or\n * - variable then equals (with optional whitespaces)\n *\n * This will not always work: e.g.:\n *    x['a = !ls'] = !ls\n * is perfectly valid IPython, but regular expressions cannot help here.\n *\n * Look behind could be used to avoid capturing the group,\n * but at the time of writing support is only at 77%.\n */\nexport const LINE_MAGIC_PREFIX = '^(\\\\s*|\\\\s*\\\\S+\\\\s*=\\\\s*)';\n\nexport const PYTHON_IDENTIFIER = '([^?\\\\s\\'\"\\\\(\\\\)-\\\\+\\\\/#]+)';\n\nexport let overrides: IScopedCodeOverride[] = [\n  /**\n   * Line magics\n   */\n  // filter out IPython line magics and shell assignments:\n  //  keep the content, keep magic/command name and new line at the end\n  {\n    pattern: LINE_MAGIC_PREFIX + '!([^=\\\\s]+)(.*)(\\n)?',\n    replacement: '$1get_ipython().getoutput(\"$2$3\")$4',\n    scope: 'line',\n    reverse: {\n      pattern: 'get_ipython\\\\(\\\\).getoutput\\\\(\"(.*?)\"\\\\)(\\n)?',\n      replacement: '!$1$2',\n      scope: 'line'\n    }\n  },\n  {\n    // note: assignments of pinfo/pinfo2 are not supported by IPython\n    // and only \"simple\" identifiers are supported, i.e.\n    //    ?x['a']\n    // would not be solved, leading to \"Object `x['a']` not found.\"\n    pattern: '^(\\\\s*)' + '(\\\\?{1,2})' + PYTHON_IDENTIFIER + '(\\n)?$',\n    replacement: (match, prefix, marks, name, lineBreak) => {\n      const cmd = marks == '?' ? 'pinfo' : 'pinfo2';\n      lineBreak = lineBreak || '';\n      // trick: use single quotes to distinguish\n      return `${prefix}get_ipython().run_line_magic(\\'${cmd}\\', \\'${name}\\')${lineBreak}`;\n    },\n    scope: 'line',\n    reverse: {\n      pattern:\n        \"get_ipython\\\\(\\\\).run_line_magic\\\\('(pinfo2?)', '(.*?)'\\\\)(\\n)?\",\n      replacement: (match, cmd, name) => {\n        const marks = cmd == 'pinfo' ? '?' : '??';\n        return `${marks}${name}`;\n      },\n      scope: 'line'\n    }\n  },\n  {\n    pattern: '^(\\\\s*)' + PYTHON_IDENTIFIER + '(\\\\?{1,2})(\\n)?',\n    replacement: (match, prefix, name, marks, lineBreak) => {\n      const cmd = marks == '?' ? 'pinfo' : 'pinfo2';\n      lineBreak = lineBreak || '';\n      // trick: use two spaces to distinguish pinfo using suffix (int?) from the one using prefix (?int)\n      return `${prefix}get_ipython().run_line_magic(\\'${cmd}\\',  \\'${name}\\')${lineBreak}`;\n    },\n    scope: 'line',\n    reverse: {\n      pattern:\n        \"get_ipython\\\\(\\\\).run_line_magic\\\\('(pinfo2?)',  '(.*?)'\\\\)(\\n)?\",\n      replacement: (match, cmd, name) => {\n        const marks = cmd == 'pinfo' ? '?' : '??';\n        return `${name}${marks}`;\n      },\n      scope: 'line'\n    }\n  },\n  {\n    pattern: LINE_MAGIC_PREFIX + '%(\\\\S+)(.*)(\\n)?',\n    replacement: (match, prefix, name, args, lineBreak) => {\n      args = emptyOrEscaped(args);\n      lineBreak = lineBreak || '';\n      return `${prefix}get_ipython().run_line_magic(\"${name}\", \"${args}\")${lineBreak}`;\n    },\n    scope: 'line',\n    reverse: {\n      pattern: 'get_ipython\\\\(\\\\).run_line_magic\\\\(\"(.*?)\", \"(.*?)\"\\\\)(\\n)?',\n      replacement: (match, name, args) => {\n        args = unescape(args);\n        return `%${name}${args}`;\n      },\n      scope: 'line'\n    }\n  },\n  /**\n   * Cell magics\n   */\n  {\n    pattern: '^%%(\\\\S+)(.*\\n)([\\\\s\\\\S]*)',\n    replacement: (match, name, firstLine, content, offset, entire) => {\n      firstLine = emptyOrEscaped(firstLine);\n      if (firstLine) {\n        // remove the new line\n        firstLine = firstLine.slice(0, -1);\n      }\n      content = content.replace(/\"\"\"/g, '\\\\\"\\\\\"\\\\\"');\n      return `get_ipython().run_cell_magic(\"${name}\", \"${firstLine}\", \"\"\"${content}\"\"\")`;\n    },\n    scope: 'cell',\n    reverse: {\n      pattern:\n        '^get_ipython\\\\(\\\\).run_cell_magic\\\\(\"(.*?)\", \"(.*?)\", \"\"\"([\\\\s\\\\S]*)\"\"\"\\\\)',\n      replacement: (match, name, line, content) => {\n        content = content.replace(/\\\\\"\\\\\"\\\\\"/g, '\"\"\"');\n        line = unescape(line);\n        return `%%${name}${line}\\n${content}`;\n      },\n      scope: 'cell'\n    }\n  }\n];\n","import { JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { ILSPCodeExtractorsManager } from '@jupyterlab/lsp';\n\nimport { ILSPCodeOverridesManager } from '../../overrides/tokens';\nimport { PLUGIN_ID } from '../../tokens';\n\nimport { foreignCodeExtractors } from './extractors';\nimport { overrides } from './overrides';\n\nexport const IPYTHON_TRANSCLUSIONS: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID + ':ipython',\n  requires: [ILSPCodeExtractorsManager, ILSPCodeOverridesManager],\n  activate: (\n    app,\n    extractorsManager: ILSPCodeExtractorsManager,\n    overrideManager: ILSPCodeOverridesManager\n  ) => {\n    for (let language of Object.keys(foreignCodeExtractors)) {\n      for (let extractor of foreignCodeExtractors[language]) {\n        extractorsManager.register(extractor, language);\n      }\n    }\n    for (let override of overrides) {\n      overrideManager.register(override, 'python');\n    }\n  },\n  autoStart: true\n};\n","import { RegExpForeignCodeExtractor } from '../../extractors/regexp';\nimport { IForeignCodeExtractorsRegistry } from '../../extractors/types';\n\nexport const SQL_URL_PATTERN = '(?:(?:.*?)://(?:.*))';\n// note: -a/--connection_arguments and -f/--file are not supported yet\nconst singleArgumentOptions = [\n  '--destination_table',\n  '--project',\n  '--use_bqstorage_api',\n  '--use_rest_api',\n  '--use_legacy_sql',\n  '--verbose',\n  '--params'\n];\nconst zeroArgumentOptions = ['-l', '--connections'];\n\nconst COMMAND_PATTERN =\n  '(?:' +\n  (zeroArgumentOptions.join('|') +\n    '|' +\n    singleArgumentOptions.map(command => command + ' \\\\w+').join('|')) +\n  ')';\n\nexport let foreignCodeExtractors: IForeignCodeExtractorsRegistry = {\n  // general note: to match new lines use [^] instead of dot, unless the target is ES2018, then use /s\n  python: [\n    new RegExpForeignCodeExtractor({\n      language: 'sql',\n      pattern: `^%%bigquery(?: (?:${SQL_URL_PATTERN}|${COMMAND_PATTERN}|(?:\\\\w+ << )|(?:\\\\w+@\\\\w+)))?\\n?((?:.+\\n)?(?:[^]*))`,\n      foreignCaptureGroups: [1],\n      isStandalone: true,\n      fileExtension: 'sql'\n    })\n  ]\n};\n","import { JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { ILSPCodeExtractorsManager } from '@jupyterlab/lsp';\n\nimport { PLUGIN_ID } from '../../tokens';\n\nimport { foreignCodeExtractors } from './extractors';\n\n/**\n * Implements extraction of code for IPython Magics for BigQuery, see:\n * https://googleapis.dev/python/bigquery/latest/magics.html.\n */\nexport const IPYTHON_BIGQUERY_TRANSCLUSIONS: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID + ':ipython-bigquery',\n  requires: [ILSPCodeExtractorsManager],\n  activate: (app, extractorsManager: ILSPCodeExtractorsManager) => {\n    for (let language of Object.keys(foreignCodeExtractors)) {\n      for (let extractor of foreignCodeExtractors[language]) {\n        extractorsManager.register(extractor, language);\n      }\n    }\n  },\n  autoStart: true\n};\n","export const RPY2_MAX_ARGS = 10;\n\nexport function extractArgs(args: string[], contentPosition: number) {\n  let inputs = [];\n  let outputs = [];\n  let others = [];\n  for (let i = 0; i < args.length; i = i + 2) {\n    let arg = args[i];\n    let variable = args[i + 1];\n    if (arg == null) {\n      break;\n    } else if (arg === 'i' || arg === '-input') {\n      inputs.push(variable);\n    } else if (arg === 'o' || arg === '-output') {\n      outputs.push(variable);\n    } else {\n      others.push('-' + arg + ' ' + variable);\n    }\n  }\n  return {\n    inputs: inputs,\n    outputs: outputs,\n    rest: args[args.length + contentPosition],\n    others: others\n  };\n}\n\nexport function parseArgs(args: string[], contentPosition: number) {\n  let { inputs, outputs, rest, others } = extractArgs(args, contentPosition);\n  let inputVariables = inputs.join(', ');\n  if (inputVariables) {\n    inputVariables = ', ' + inputVariables;\n  }\n  let outputVariables = outputs.join(', ');\n  if (outputVariables) {\n    outputVariables = outputVariables + ' = ';\n  }\n  return {\n    content: rest,\n    others: others.join(' '),\n    inputs: inputVariables,\n    outputs: outputVariables\n  };\n}\n\nexport function reversePattern(\n  quote = '\"',\n  multiLine = false,\n  magic = 'R'\n): string {\n  return (\n    '(\\\\S+)?' +\n    '(?:, (\\\\S+))?'.repeat(9) +\n    '( = )?rpy2\\\\.ipython\\\\.rmagic\\\\.RMagics.' +\n    magic +\n    '\\\\(' +\n    quote +\n    (multiLine ? '([\\\\s\\\\S]*)' : '(.*?)') +\n    quote +\n    ', \"(.*?)\"' +\n    '(?:, (\\\\S+))?'.repeat(10) +\n    '\\\\)'\n  );\n}\n\nexport function reverseReplacement(match: string, ...args: string[]) {\n  let outputs = [];\n  for (let i = 0; i < 10; i++) {\n    if (args[i] == null) {\n      break;\n    }\n    outputs.push(args[i]);\n  }\n  let inputs = [];\n  for (let i = 13; i < 23; i++) {\n    if (args[i] == null) {\n      break;\n    }\n    inputs.push(args[i]);\n  }\n  let inputVariables = inputs.join(' -i ');\n  if (inputVariables) {\n    inputVariables = ' -i ' + inputVariables;\n  }\n  let outputVariables = outputs.join(' -o ');\n  if (outputVariables) {\n    outputVariables = ' -o ' + outputVariables;\n  }\n  let contents = args[11];\n  let otherArgs = args[12];\n  if (otherArgs) {\n    otherArgs = ' ' + otherArgs;\n  }\n  return {\n    input: inputVariables,\n    output: outputVariables,\n    other: otherArgs,\n    contents: contents\n  };\n}\n\nexport function argsPattern(maxN: number) {\n  return '(?: -(\\\\S+) (\\\\S+))?'.repeat(maxN);\n}\n","import { RegExpForeignCodeExtractor } from '../../extractors/regexp';\nimport { IForeignCodeExtractorsRegistry } from '../../extractors/types';\n\nimport { RPY2_MAX_ARGS, extractArgs, argsPattern } from './rpy2';\n\nfunction createExtractor(stripLeadingSpace: boolean) {\n  function codeExtractor(match: string, ...args: string[]) {\n    let r = extractArgs(args, -3);\n    let code: string;\n    if (r.rest == null) {\n      code = '';\n    } else if (stripLeadingSpace) {\n      code = r.rest.startsWith(' ') ? r.rest.slice(1) : r.rest;\n    } else {\n      code = r.rest;\n    }\n    return code;\n  }\n\n  return codeExtractor;\n}\n\nconst extractorNonStripping = createExtractor(false);\n\nfunction args(match: string, ...args: string[]) {\n  let r = extractArgs(args, -3);\n  // define dummy input variables using empty data frames\n  let inputs = r.inputs.map(i => i + ' <- data.frame();').join(' ');\n  let code = extractorNonStripping(match, ...args);\n  if (inputs !== '' && code) {\n    inputs += ' ';\n  }\n  return inputs;\n}\n\nexport let foreignCodeExtractors: IForeignCodeExtractorsRegistry = {\n  // general note: to match new lines use [^] instead of dot, unless the target is ES2018, then use /s\n  python: [\n    //\n    // R magics (non-standalone: the R code will always be in the same, single R-namespace)\n    //\n    new RegExpForeignCodeExtractor({\n      language: 'r',\n      pattern: '^%%R' + argsPattern(RPY2_MAX_ARGS) + '\\n([^]*)',\n      foreignCaptureGroups: [RPY2_MAX_ARGS * 2 + 1],\n      // it is important to not strip any leading spaces\n      foreignReplacer: extractorNonStripping,\n      extractArguments: args,\n      isStandalone: false,\n      fileExtension: 'R'\n    }),\n    new RegExpForeignCodeExtractor({\n      language: 'r',\n      // it is very important to not include the space which will be trimmed in the capture group,\n      // otherwise the offset will be off by one and the R language server will crash\n      pattern: '(?:^|\\n)%R' + argsPattern(RPY2_MAX_ARGS) + '(?: (.*))?(?:\\n|$)',\n      foreignCaptureGroups: [RPY2_MAX_ARGS * 2 + 1],\n      foreignReplacer: createExtractor(true),\n      extractArguments: args,\n      isStandalone: false,\n      fileExtension: 'R'\n    })\n  ]\n};\n","import { IScopedCodeOverride } from '../../overrides/tokens';\nimport { LINE_MAGIC_PREFIX } from '../ipython/overrides';\n\nimport {\n  RPY2_MAX_ARGS,\n  parseArgs,\n  argsPattern,\n  reversePattern,\n  reverseReplacement\n} from './rpy2';\n\nexport let overrides: IScopedCodeOverride[] = [\n  {\n    // support up to 10 arguments\n    pattern:\n      LINE_MAGIC_PREFIX + '%R' + argsPattern(RPY2_MAX_ARGS) + '( .*)?(\\n|$)',\n    replacement: (match, prefix, ...args) => {\n      let r = parseArgs(args, -4);\n      // note: only supports assignment or -o/--output, not both\n      // TODO assignment like in x = %R 1 should be distinguished from -o\n      return `${prefix}${r.outputs}rpy2.ipython.rmagic.RMagics.R(\"${\n        r.content || ''\n      }\", \"${r.others}\"${r.inputs})`;\n    },\n    scope: 'line',\n    reverse: {\n      pattern: reversePattern(),\n      replacement: (match, ...args) => {\n        let r = reverseReplacement(match, ...args);\n        return '%R' + r.input + r.output + r.other + r.contents;\n      },\n      scope: 'line'\n    }\n  },\n  // rpy2 extension R magic - this should likely go as an example to the user documentation, rather than being a default\n  //   only handles simple one input - one output case\n  {\n    pattern: '^%%R' + argsPattern(RPY2_MAX_ARGS) + '(\\n)?([\\\\s\\\\S]*)',\n    replacement: (match, ...args) => {\n      let r = parseArgs(args, -3);\n      return `${r.outputs}rpy2.ipython.rmagic.RMagics.R(\"\"\"${r.content}\"\"\", \"${r.others}\"${r.inputs})`;\n    },\n    scope: 'cell',\n    reverse: {\n      pattern: reversePattern('\"\"\"', true),\n      replacement: (match, ...args) => {\n        let r = reverseReplacement(match, ...args);\n        return '%%R' + r.input + r.output + r.other + '\\n' + r.contents;\n      },\n      scope: 'cell'\n    }\n  },\n  {\n    pattern: LINE_MAGIC_PREFIX + '%Rdevice( .*)?(\\n|$)',\n    replacement: (match, prefix, ...args) => {\n      return `${prefix}rpy2.ipython.rmagic.RMagics.Rdevice(\"${args[0]}\", \"\")`;\n    },\n    scope: 'line',\n    reverse: {\n      pattern: reversePattern('\"', false, 'Rdevice'),\n      replacement: (match, ...args) => {\n        let r = reverseReplacement(match, ...args);\n        return '%Rdevice' + r.input + r.output + r.other + r.contents;\n      },\n      scope: 'line'\n    }\n  }\n];\n","import { JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { ILSPCodeExtractorsManager } from '@jupyterlab/lsp';\n\nimport { ILSPCodeOverridesManager } from '../../overrides/tokens';\nimport { PLUGIN_ID } from '../../tokens';\n\nimport { foreignCodeExtractors } from './extractors';\nimport { overrides } from './overrides';\n\nexport const IPYTHON_RPY2_TRANSCLUSIONS: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID + ':ipython-rpy2',\n  requires: [ILSPCodeExtractorsManager, ILSPCodeOverridesManager],\n  activate: (\n    app,\n    extractorsMmanager: ILSPCodeExtractorsManager,\n    overridesManager: ILSPCodeOverridesManager\n  ) => {\n    for (let language of Object.keys(foreignCodeExtractors)) {\n      for (let extractor of foreignCodeExtractors[language]) {\n        extractorsMmanager.register(extractor, language);\n      }\n    }\n    for (let override of overrides) {\n      overridesManager.register(override, 'python');\n    }\n  },\n  autoStart: true\n};\n","import { RegExpForeignCodeExtractor } from '../../extractors/regexp';\nimport { IForeignCodeExtractorsRegistry } from '../../extractors/types';\n\nexport const SQL_URL_PATTERN = '(?:(?:.*?)://(?:.*))';\n// note: -a/--connection_arguments and -f/--file are not supported yet\nconst singleArgumentOptions = [\n  '-x',\n  '--close',\n  '-c',\n  '--creator',\n  '-p',\n  '--persist',\n  '--append'\n];\nconst zeroArgumentOptions = ['-l', '--connections'];\n\nconst COMMAND_PATTERN =\n  '(?:' +\n  (zeroArgumentOptions.join('|') +\n    '|' +\n    singleArgumentOptions.map(command => command + ' \\\\w+').join('|')) +\n  ')';\n\nexport let foreignCodeExtractors: IForeignCodeExtractorsRegistry = {\n  // general note: to match new lines use [^] instead of dot, unless the target is ES2018, then use /s\n  python: [\n    new RegExpForeignCodeExtractor({\n      language: 'sql',\n      pattern: `^%%sql(?: (?:${SQL_URL_PATTERN}|${COMMAND_PATTERN}|(?:\\\\w+ << )|(?:\\\\w+@\\\\w+)))?\\n?((?:.+\\n)?(?:[^]*))`,\n      foreignCaptureGroups: [1],\n      isStandalone: true,\n      fileExtension: 'sql'\n    }),\n    new RegExpForeignCodeExtractor({\n      language: 'sql',\n      pattern: `(?:^|\\n)%sql (?:${SQL_URL_PATTERN}|${COMMAND_PATTERN}|(.*))\\n?`,\n      foreignCaptureGroups: [1],\n      isStandalone: false,\n      fileExtension: 'sql'\n    })\n  ]\n};\n","import { JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { ILSPCodeExtractorsManager } from '@jupyterlab/lsp';\n\nimport { PLUGIN_ID } from '../../tokens';\n\nimport { foreignCodeExtractors } from './extractors';\n\n/**\n * Implements extraction of code for ipython-sql, see:\n * https://github.com/catherinedevlin/ipython-sql.\n * No dedicated code overrides are provided (but the default IPython\n * overrides should prevent any syntax errors in the virtual documents)\n */\nexport const IPYTHON_SQL_TRANSCLUSIONS: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID + ':ipython-sql',\n  requires: [ILSPCodeExtractorsManager],\n  activate: (app, extractorsManager: ILSPCodeExtractorsManager) => {\n    for (let language of Object.keys(foreignCodeExtractors)) {\n      for (let extractor of foreignCodeExtractors[language]) {\n        extractorsManager.register(extractor, language);\n      }\n    }\n  },\n  autoStart: true\n};\n","import { JupyterFrontEndPlugin } from '@jupyterlab/application';\n\nimport { IPYTHON_TRANSCLUSIONS } from './ipython';\nimport { IPYTHON_BIGQUERY_TRANSCLUSIONS } from './ipython-bigquery';\nimport { IPYTHON_RPY2_TRANSCLUSIONS } from './ipython-rpy2';\nimport { IPYTHON_SQL_TRANSCLUSIONS } from './ipython-sql';\n\nexport const DEFAULT_TRANSCLUSIONS: JupyterFrontEndPlugin<void>[] = [\n  IPYTHON_RPY2_TRANSCLUSIONS,\n  IPYTHON_SQL_TRANSCLUSIONS,\n  IPYTHON_BIGQUERY_TRANSCLUSIONS,\n  IPYTHON_TRANSCLUSIONS\n];\n","/** The Public API, as exposed in the `main` field of package.json */\n\n/** General public tokens, including lumino Tokens and namespaces */\nexport * from './tokens';\n\n/** Generated JSON Schema types for server responses and settings */\nexport * as SCHEMA from './_schema';\n\n/** Component- and feature-specific APIs */\nexport * from './api';\n\nimport { COMPLETION_THEME_MANAGER } from '@jupyter-lsp/completion-theme';\nimport { plugin as THEME_MATERIAL } from '@jupyter-lsp/theme-material';\nimport { plugin as THEME_VSCODE } from '@jupyter-lsp/theme-vscode';\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ILoggerRegistry } from '@jupyterlab/logconsole';\nimport {\n  ILSPDocumentConnectionManager,\n  DocumentConnectionManager,\n  ILanguageServerManager\n} from '@jupyterlab/lsp';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { IStatusBar } from '@jupyterlab/statusbar';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { IFormRendererRegistry } from '@jupyterlab/ui-components';\n\nimport '../style/index.css';\n\nimport { LanguageServers } from './_plugin';\nimport { FILEEDITOR_ADAPTER_PLUGIN } from './adapters/fileeditor';\nimport { NOTEBOOK_ADAPTER_PLUGIN } from './adapters/notebook';\nimport { StatusButtonExtension } from './components/statusbar';\nimport { COMPLETION_PLUGIN } from './features/completion';\nimport { DIAGNOSTICS_PLUGIN } from './features/diagnostics';\nimport { HIGHLIGHTS_PLUGIN } from './features/highlights';\nimport { HOVER_PLUGIN } from './features/hover';\nimport { JUMP_PLUGIN } from './features/jump_to';\nimport { RENAME_PLUGIN } from './features/rename';\nimport { SIGNATURE_PLUGIN } from './features/signature';\nimport { SYNTAX_HIGHLIGHTING_PLUGIN } from './features/syntax_highlighting';\nimport { CODE_OVERRIDES_MANAGER } from './overrides';\nimport { SettingsUIManager, SettingsSchemaManager } from './settings';\nimport {\n  ILSPLogConsole,\n  PLUGIN_ID as PLUGIN_ID_BASE,\n  TLanguageServerConfigurations\n} from './tokens';\nimport { DEFAULT_TRANSCLUSIONS } from './transclusions/defaults';\nimport { LOG_CONSOLE } from './virtual/console';\n\nconst PLUGIN_ID = PLUGIN_ID_BASE + ':plugin';\n\nexport class LSPExtension {\n  get connectionManager(): ILSPDocumentConnectionManager {\n    return this._connectionManager;\n  }\n  private _connectionManager: DocumentConnectionManager;\n  languageServerManager: ILanguageServerManager;\n  private _settingsSchemaManager: SettingsSchemaManager;\n\n  private _isAnyActive(): boolean {\n    const adapters = [...this._connectionManager.adapters.values()];\n    return (\n      this.app.shell.currentWidget !== null &&\n      adapters.some(adapter => adapter.widget == this.app.shell.currentWidget)\n    );\n  }\n\n  constructor(\n    public app: JupyterFrontEnd,\n    private settingRegistry: ISettingRegistry,\n    connectionManager: DocumentConnectionManager,\n    public console: ILSPLogConsole,\n    public translator: ITranslator,\n    public userConsole: ILoggerRegistry | null,\n    statusBar: IStatusBar | null,\n    formRegistry: IFormRendererRegistry | null\n  ) {\n    const trans = (translator || nullTranslator).load('jupyterlab_lsp');\n    this.languageServerManager = connectionManager.languageServerManager;\n    this._connectionManager = connectionManager;\n\n    const statusButtonExtension = new StatusButtonExtension({\n      languageServerManager: this.languageServerManager,\n      connectionManager: this.connectionManager,\n      translatorBundle: trans,\n      shell: app.shell\n    });\n\n    if (statusBar !== null) {\n      statusBar.registerStatusItem(PLUGIN_ID_BASE + ':language-server-status', {\n        item: statusButtonExtension.createItem(),\n        align: 'left',\n        rank: 1,\n        isActive: () => this._isAnyActive()\n      });\n    } else {\n      app.docRegistry.addWidgetExtension('Notebook', statusButtonExtension);\n    }\n\n    this._settingsSchemaManager = new SettingsSchemaManager({\n      settingRegistry: this.settingRegistry,\n      languageServerManager: this.languageServerManager,\n      trans: trans,\n      console: this.console.scope('SettingsSchemaManager'),\n      restored: app.restored\n    });\n\n    if (formRegistry != null) {\n      const settingsUI = new SettingsUIManager({\n        settingRegistry: this.settingRegistry,\n        console: this.console.scope('SettingsUIManager'),\n        languageServerManager: this.languageServerManager,\n        trans: trans,\n        schemaValidated: this._settingsSchemaManager.schemaValidated\n      });\n      // register custom UI field for `language_servers` property\n      formRegistry.addRenderer(`${PLUGIN_ID}.language_servers`, {\n        fieldRenderer: settingsUI.renderForm.bind(settingsUI)\n      });\n    }\n\n    this._settingsSchemaManager\n      .setupSchemaTransform(plugin.id)\n      .then(this._activate.bind(this))\n      .catch(this._activate.bind(this));\n  }\n\n  private _activate(): void {\n    this.settingRegistry\n      .load(plugin.id)\n      .then(async settings => {\n        await this._updateOptions(settings, false);\n        settings.changed.connect(async () => {\n          await this._updateOptions(settings, true);\n        });\n      })\n      .catch((reason: Error) => {\n        console.error(reason.message);\n      });\n  }\n\n  private async _updateOptions(\n    settings: ISettingRegistry.ISettings,\n    afterInitialization = false\n  ) {\n    const options = await this._settingsSchemaManager.normalizeSettings(\n      settings.composite as Required<LanguageServers>\n    );\n    // Store the initial server settings, to be sent asynchronously\n    // when the servers are initialized.\n    let languageServerSettings = (options.language_servers ||\n      {}) as TLanguageServerConfigurations;\n\n    // Add `configuration` as a copy of `serverSettings` to work with changed name upstream\n    // Add `rank` as a copy of priority for the same reason.\n    languageServerSettings = Object.fromEntries(\n      Object.entries(languageServerSettings).map(([key, value]) => {\n        value.configuration = value.serverSettings;\n        value.rank = value.priority;\n        return [key, value];\n      })\n    );\n\n    const previousInitialConfig = this._connectionManager.initialConfigurations;\n    this._connectionManager.initialConfigurations = languageServerSettings;\n    // TODO: if priorities changed reset connections\n\n    // update the server-independent part of configuration immediately\n    this.connectionManager.updateConfiguration(languageServerSettings);\n    if (afterInitialization) {\n      this.connectionManager.updateServerConfigurations(languageServerSettings);\n    } else {\n      // This would not be needed if we controlled the connection manager, but because\n      // it is now an independent plugin it may have started and finished initialization\n      // earlier, so it potentially sent wrong `initialConfigurations` and we have no way\n      // to avoid this, so we need to send a reconfiguration request instead.\n      //\n      // TODO: this is comparing objects which is always false,\n      // we should have a proper comparison to avoid redundant calls,\n      // but in practice because upstream never populates defaults and\n      // we always do, this means it would be false anyways,\n      // so for now the comparison serves more as a comment than logic.\n      if (previousInitialConfig != languageServerSettings) {\n        this.connectionManager.ready\n          .then(() => {\n            this.connectionManager.updateServerConfigurations(\n              languageServerSettings\n            );\n          })\n          .catch(console.error);\n      }\n    }\n    this._connectionManager.updateLogging(\n      options.logAllCommunication,\n      options.setTrace!\n    );\n  }\n}\n\n/**\n * The plugin registration information.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID,\n  requires: [\n    ISettingRegistry,\n    ILSPDocumentConnectionManager,\n    ILSPLogConsole,\n    ITranslator\n  ],\n  optional: [ILoggerRegistry, IStatusBar, IFormRendererRegistry],\n  activate: (app, ...args) => {\n    new LSPExtension(\n      app,\n      ...(args as [\n        ISettingRegistry,\n        DocumentConnectionManager,\n        ILSPLogConsole,\n        ITranslator,\n        ILoggerRegistry | null,\n        IStatusBar | null,\n        IFormRendererRegistry | null\n      ])\n    );\n  },\n  autoStart: true\n};\n\nconst DEFAULT_FEATURES: JupyterFrontEndPlugin<any>[] = [\n  JUMP_PLUGIN,\n  COMPLETION_PLUGIN,\n  SIGNATURE_PLUGIN,\n  HOVER_PLUGIN,\n  RENAME_PLUGIN,\n  HIGHLIGHTS_PLUGIN,\n  DIAGNOSTICS_PLUGIN,\n  SYNTAX_HIGHLIGHTING_PLUGIN\n];\nconst plugins: JupyterFrontEndPlugin<any>[] = [\n  LOG_CONSOLE,\n  COMPLETION_THEME_MANAGER,\n  THEME_VSCODE,\n  THEME_MATERIAL,\n  CODE_OVERRIDES_MANAGER,\n  NOTEBOOK_ADAPTER_PLUGIN,\n  FILEEDITOR_ADAPTER_PLUGIN,\n  plugin,\n  ...DEFAULT_TRANSCLUSIONS,\n  ...DEFAULT_FEATURES\n];\n\n/**\n * Export the plugins as default.\n */\nexport default plugins;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","i","PLUGIN_ID","ILSPLogConsole","Token","getIndexOfCaptureGroup","expression","matchedString","valueOfCapturedGroup","capturedGroups","exec","console","warn","offsetInMatch","fullMatched","group","slice","indexOf","groupEndOffset","length","RegExpForeignCodeExtractor","constructor","options","cellType","this","language","globalExpression","RegExp","pattern","testExpression","standalone","isStandalone","fileExtension","hasForeignCode","code","result","test","lastIndex","extractForeignCode","lines","split","extracts","Array","hostCodeFragment","chosenReplacer","startedFrom","match","isNewApiReplacer","foreignReplacer","foreignCaptureGroups","join","extractToForeign","positionShift","foreignCodeFragment","replace","prefix","extractArguments","positionAtOffset","endIndex","keepInHost","substring","index","foreignCodeGroupValue","Math","min","foreignGroupIndexInMatch","startOffset","start","end","hostCode","foreignCode","range","virtualShift","finalHostCodeFragment","ILSPCodeOverridesManager","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","OverridesMap","Map","magicOverrides","super","map","m","replacement","_overrideFor","key","value","ReversibleOverridesMap","overrides","reverse","type","filter","override","overrideFor","cell","replaceAll","rawLines","substitutedLines","skipInspect","line","reverseReplaceAll","VirtualDocument","overridesRegistry","cellMagicsOverrides","lineMagicsOverrides","_chooseForeignDocument","decodeCodeBlock","rawCode","cellOverride","prepareCodeBlock","block","editorShift","column","cellCodeKept","foreignDocumentsMap","cellCode","_line","idPath","skip","appendCodeBlock","ceEditor","isDisposed","sourceCellLines","virtualLines","set","lastVirtualLine","editor","sourceLine","lastSourceLine","sourceLines","editorLine","virtualLine","lineBlocks","blankLinesBetweenCells","closeExpiredDocuments","usedDocuments","Set","values","add","virtualDocument","documentIDs","document","foreignDocuments","entries","ids","get","allDocuments","keys","unusedVirtualDocuments","x","has","remainingLifetime","dispose","delete","transformVirtualToRoot","position","editorPosition","transformVirtualToEditor","root","transformFromEditorToRoot","getForeignDocuments","editorAccessor","maps","extractor","foreignDocument","foreignExists","unusedStandalone","unusedStandaloneDocuments","pop","unusedDocuments","openForeign","FileEditorAdapter","editorWidget","createVirtualDocument","foreignCodeExtractors","foreignCodeExtractorsManager","path","documentPath","languageFileExtension","hasLspSupportedFile","codeOverridesManager","registry","FILEEDITOR_ADAPTER_PLUGIN","description","requires","IEditorTracker","ILSPDocumentConnectionManager","ILSPFeatureManager","ILSPCodeExtractorsManager","activate","app","editors","connectionManager","featureManager","extractorManager","widgetAdded","connect","async","_","adapter","docRegistry","registerAdapter","context","autoStart","NotebookAdapter","_blockUpdates","onForeignDocumentOpened","updateDocuments","Promise","resolve","NOTEBOOK_ADAPTER_PLUGIN","INotebookTracker","notebooks","codeExtractorManager","notebook","externalLink","url","label","href","target","rel","className","SERVER_EXTENSION_404","codeWarningIcon","LabIcon","name","svgstr","codeClockIcon","codeCheckIcon","DocumentLocator","props","hasMultipleEditors","firstLine","breadcrumbs","trans","collapse","nullTranslator","load","ancestry","parent","endsWith","fullPath","parts","uri","title","size","lastLine","firstCell","getEditorIndex","lastCell","cellLocator","__","e","getBreadcrumbs","onClick","accessor","reveal","getEditor","focus","focusEditor","ServerLinksList","Object","specification","urls","serverId","okButton","Dialog","ServerStatus","list","server","spec","languages","display_name","CollapsibleList","handleClick","setState","state","isCollapsed","startCollapsed","render","collapseExpandIcon","caretDownIcon","caretUpIcon","react","tag","LanguageServerInfo","specs","troubleshoot","install","command","HelpButton","showDialog","body","servers","_n","buttons","catch","LSPPopup","VDomRenderer","model","addClass","serversAvailable","serversAvailableNotInUse","session","runningServers","documentsByLanguage","documentsByServer","documentsHtml","documents","connection","connections","status","isInitialized","isConnected","icon","circleIcon","circleEmptyIcon","elementSize","missingLanguages","specsForMissing","languageServerManager","getMatchingSpecs","LSPStatus","displayText","shell","Model","_popup","showPopup","anchor","align","hasDynamicSize","caption","GroupItem","spacing","longMessage","statusIcon","top","stylesheet","TextItem","source","shortMessage","StatusButtonExtension","createItem","statusBarItem","translatorBundle","createNew","panel","item","toolbar","insertAfter","classByStatus","noServerExtension","waiting","initialized","initializing","initializedButSomeMissing","connecting","iconByStatus","VDomModel","_shell","_onChange","stateChanged","emit","_shortMessageByStatus","availableServers","sessions","supportedLanguages","toLocaleLowerCase","_isServerRunning","detectedLanguages","matchedServers","getMatchingServers","data","mainDocument","collectDocuments","serverIds","_connectionManager","documentsMap","collectLanguages","detectedDocuments","detectedDocumentsSet","doc","connectedDocuments","initializedDocuments","absentDocuments","documentsWithAvailableServers","documentsWithKnownServers","forEach","openConnections","statusCode","bindprops","stopIcon","msg","uninitialized","_np","unconnected","connected","adapters","find","widget","currentWidget","disconnect","disconnected","closed","documentsChanged","DiagnosticSeverity","DiagnosticTag","CompletionItemTag","CompletionItemKind","DocumentHighlightKind","CompletionTriggerKind","AdditionalCompletionTriggerKinds","Languages","Feature","FeatureSettings","settingRegistry","featureID","_ready","PromiseDelegate","changed","Signal","plugins","then","settings","reject","ready","promise","composite","setting","PositionConverter","static","ch","character","documentAtRootPosition","rootAsSource","Error","documentAtSourcePosition","editorAtRootPosition","getEditorAtSourceLine","rootPositionToVirtualPosition","virtualPositionAtDocument","rootPositionToEditorPosition","transformSourceToEditor","editorPositionToRootPosition","rangeToEditorRange","lsp_to_cm","startInRoot","prototype","call","candidate","EnhancedContextCompleterProvider","ContextCompleterProvider","request","fetch","items","order","iconFor","undefined","sortText","String","fromCharCode","iconsThemeManager","getIcon","EnhancedKernelCompleterProvider","KernelCompleterProvider","KernelKind","upstream","isApplicable","manager","error","ce_to_cm","getCursorPosition","rootPosition","args","arg","textual","JSON","stringify","k","FloatingConsole","scope","element","createElement","appendChild","bindThis","remove","append","text","kind","entry","innerHTML","scrollTop","scrollHeight","debug","log","BrowserConsole","window","bind","ConsoleWrapper","singleton","_scope","_rebindFunctions","noOp","bindArg","implementation","verbosity","ConsoleSingleton","updateSettings","loggingConsole","loggingLevel","LOG_CONSOLE","ISettingRegistry","provides","CompletionItem","isDocumentationMarkdown","_isDocumentationMarkdown","_setDocumentation","documentation","_resolved","_detail","detail","_match","self","makeGetterEnumerable","insertText","_currentInsertText","_currentSortText","filterText","needsResolution","_supportsResolution","isResolved","resolvedCompletionItem","clientRequests","_documentation","deprecated","tags","some","Deprecated","is","serverCapabilities","completionProvider","resolveProvider","instance","generatedDescriptor","desc","getOwnPropertyDescriptor","getPrototypeOf","findDescriptor","defineProperty","enumerable","escapeHTML","node","textContent","GenericCompleterModel","CompleterModel","defaultOptions","completionItems","query","unfilteredItems","harmoniseItem","_sortAndFilter","setCompletionItems","newValue","current","cursor","original","queryRange","trim","linePrefix","trimmedQuotes","startsWith","preFilterMatches","_markFragment","getFilterText","getHighlightableLabelRegion","createPatch","patch","subsetMatch","results","matched","filterMatch","lowerCaseQuery","toLowerCase","caseSensitive","StringExt","matchSumOfSquares","includePerfectMatches","score","labelMatch","labelPrefix","highlight","indices","itemClone","create","getOwnPropertyDescriptors","sort","compareMatches","a","b","delta","localeCompare","kernelCompletionsFirst","LSPCompleterModel","sourceOrder","LSP","kernel","LSPCompletionRenderer","Completer","Renderer","ITEM_PLACEHOLDER_CLASS","EXTRA_INFO_CLASS","LABEL_CLASS","elementToItem","WeakMap","visibilityObserver","IntersectionObserver","isIntersecting","li","threshold","getExtraInfo","labelExtra","updateExtraInfo","extraText","getElementsByClassName","_elideMark","createCompletionItemNode","orderedTypes","lspItem","observe","labelElement","originalHTMLLabel","childNodes","hasMark","HTMLElement","tagName","elidableElement","setAttribute","replaceChildren","classList","wrapper","createDocumentationNode","markdownRenderer","renderModel","trusted","metadata","setData","latexTypesetter","includes","typeset","itemWidthHeuristic","labelSize","extraTextSize","layout","max","CompletionProvider","identifier","rank","modelFactory","renderMimeRegistry","createRenderer","renderer","completionItem","shouldShowContinuousHint","completerIsVisible","triggerCharacters","sourceChange","token","getTokenAtCursor","continuousHinting","suppressContinuousHintingIn","suppressTriggerCharacterIn","trigger","getPositionAt","offset","getTokenAt","positionInToken","typedCharacter","virtualPosition","lspCompletionReply","textDocument","documentInfo","triggerKind","Invoked","triggerCharacter","TriggerCharacter","lspCompletionItems","createCompletionItem","suffix","anyPrefixed","intendedText","pathPrefix","response","transformLSPCompletions","isArray","isIncomplete","disable","CompletionFeature","capabilities","completion","dynamicRegistration","snippetSupport","commitCharactersSupport","documentationFormat","deprecatedSupport","preselectSupport","tagSupport","valueSet","contextSupport","_configure","provider","completionProviderManager","registerProvider","completionThemeManager","setTheme","dataset","lspCompleterLayout","theme","setIconsOverrides","typesMap","COMPLETION_PLUGIN","ICompletionProviderManager","ILSPCompletionThemeManager","IRenderMimeRegistry","feature","register","ContextAssembler","_wasOverToken","getContext","getContextFromContextMenu","_contextFromActiveDocument","message","isContextMenuOverToken","getOffsetAt","cm_to_ce","isOverToken","activeEditor","ceCursor","cmCursor","_contextFromRoot","adapterFromNode","leafNode","contains","positionFromCoordinates","left","editorPositionFromCoordinates","getPositionForCoordinate","right","bottom","y","width","height","editorFromNode","cmContent","closest","cmView","view","contextMenuHitTest","getBoundingClientRect","event","_contextMenuEvent","clientX","clientY","stopPropagation","accessorFromNode","RE_PATH_ANCHOR","getModifierState","modifierKey","shiftKey","altKey","ctrlKey","metaKey","DefaultMap","defaultFactory","getOrCreate","v","urisEqual","isWinPath","normalizeWinPath","decodeURI","it","collapseToDotted","obj","conflicts","hasOwnProperty","escapeMarkdown","span","jumpToIcon","jumpBackIcon","NavigationFeature","declaration","linkSupport","definition","typeDefinition","_trans","contextAssembler","editorExtensionRegistry","addExtension","factory","clickListener","EditorView","domEventHandlers","mouseup","_jumpOnMouseUp","EditorExtensionRegistry","createImmutableExtension","_jumpers","fileEditorTracker","notebookTracker","documentManager","content","CodeMirrorEditor","jumper","FileEditorJumper","NotebookJumper","getJumper","_jumpToDefinitionOrRefernce","addEventListener","mouseUpEvent","once","button","positionParams","targets","handleJump","includeDeclaration","preventDefault","_harmonizeLocations","locationData","locationOrLink","targetUri","targetRange","location","locations","choices","_resolvePath","getItemOptions","okLabel","choice","InputDialog","getItem","choiceIndex","contentsPath","child","PageConfig","getOption","decodeURIComponent","targetInfo","_chooseTarget","Notification","info","autoClose","editorIndex","findIndex","ProtocolCoordinates","isWithinRange","globalJump","isSymlink","sourcePosition","jumpData","services","contents","err","URLExt","CommandIDs","jumpToDefinition","jumpToReference","jumpBack","JUMP_PLUGIN","IDocumentManager","IEditorExtensionRegistry","optional","ICommandPalette","ITranslator","palette","translator","commands","addCommand","execute","warning","isEnabled","globalJumpBack","commandID","contextMenu","addItem","selector","category","DIAGNOSTICS_LISTING_CLASS","DIAGNOSTICS_PLACEHOLDER_CLASS","DiagnosticsDatabase","all","concat","apply","Column","isVisible","renderCell","isAvailable","renderHeader","listing","SortableTH","isSortKey","sortKey","sortIcon","sortDirection","DiagnosticsListing","severityTranslations","Warning","Information","Hint","columns","row","db","diagnostic","codeString","messageWithoutCode","severity","cellNumber","update","diagnosticsDatabase","diagnostics","byDocument","from","diagnosticData","flattened","_diagnostics","sortedColumn","sorter","sorted","columnsToDisplay","elements","cells","jumpTo","columnsHeaders","getDiagnostic","setCursorPosition","diagnosticsIcon","CMD_COLUMN_VISIBILITY","CMD_JUMP_TO_DIAGNOSTIC","CMD_COPY_DIAGNOSTIC","CMD_IGNORE_DIAGNOSTIC_CODE","CMD_IGNORE_DIAGNOSTIC_MSG","diagnosticsPanel","_content","_widget","isRegistered","initWidget","MainAreaWidget","closable","isAttached","getColumn","columnsMenu","Menu","isToggled","submenu","ignoreDiagnosticsMenu","getRow","tr","ignoreCodes","refreshDiagnostics","ignoreMessagesPatterns","string","navigator","clipboard","writeText","prompt","copyIcon","underline","color","attrs","encodeURIComponent","svg","SeverityMap","DiagnosticsFeature","publishDiagnostics","Unnecessary","_firstResponseReceived","_diagnosticsDatabases","switchDiagnosticsPanelSource","getDiagnosticsDB","handleDiagnostic","_lastResponse","_lastDocument","_lastAdapter","setDiagnostics","done","setTimeout","_styleElement","connectionData","serverNotifications","foreignDocumentClosed","clearDocumentDiagnostics","_invalidate","StateEffect","define","_invalidationCounter","StateField","effects","currentChanged","attemptsLeft","retry","themeManager","_reconfigureTheme","head","themeChanged","extensions","contentDOM","field","updateFinished","database","editorDiagnostics","editorDiagnostic","lastLineLength","to","classNames","markClass","delay","debounceDelay","needsRefresh","startState","gutter","style","getComputedStyle","lintTheme","backgroundImage","getPropertyValue","getRules","diagnosticsByRange","rangeIdToRange","rangeIdToDiagnostics","rangeId","getRangeId","rangeDiagnostics","defaultSeverity","filterDiagnostics","ignoredDiagnosticsCodes","ignoredSeverities","ignoreSeverities","severityName","ignoredMessagesRegExp","toString","diagnosticsList","lastLineNumber","getEditorAtVirtualLine","startInEditor","endInEditor","diagnosticsDB","previousList","editorsWhichHadDiagnostics","d","editorsWithDiagnostics","dispatch","of","showPanel","DIAGNOSTICS_PLUGIN","ILayoutRestorer","IThemeManager","restorer","assembler","namespace","tracker","WidgetTracker","ref","widgetId","panelWidget","mode","activateById","save","restore","Private","createMarkManager","specId","specCounter","kindToMark","fromEntries","Decoration","mark","_id","addMark","change","mapPos","removeMark","markField","none","marks","changes","newDoc","provide","f","decorations","views","putMarks","positions","appendConfig","clearAllMarks","clearEditorMarks","clear","HighlightsFeature","documentHighlight","_lastToken","requestHighlights","isReady","documentHighlightProvider","_versionSent","version","markManager","Text","class","Read","Write","_debouncedGetHighlight","createDebouncer","updateListener","viewUpdate","docChanged","selectionSet","focusChanged","dom","onCursorActivity","eventListeners","blur","onBlur","currentTarget","keydown","removeOnBlur","handleHighlight","highlightsByEditor","optionsList","markerDefinitions","editorView","Debouncer","debouncerDelay","updateManager","updateDone","_virtualPosition","highlights","invoke","versionAfter","HIGHLIGHTS_PLUGIN","FreeTooltip","Tooltip","_setGeometry","setBundle","bundle","MimeModel","handleEvent","isHidden","keyCode","hideOnKeyPress","_editor","alignment","getLine","tokens","last","getCoordinateForPosition","paddingLeft","parseInt","host","HoverBox","setGeometry","maxHeight","minHeight","horizontal","privilege","outOfViewDisplay","setPosition","markupToBundle","markup","EditorTooltipManager","rendermimeRegistry","currentTooltip","currentOptions","tooltip","rendermime","Widget","attach","showOrCreate","samePosition","isEqual","sameMarkup","show","isShown","hide","ResponseCache","_data","maxSize","store","previousIndex","previous","editorRange","shift","clean","toMarkup","HoverFeature","hover","contentFormat","lastHoverCharacter","hasMarker","_previousHoverRequest","onKeyDown","responseData","restoreFromCache","handleResponse","onMouseLeave","removeRangeHighlight","maybeHideTooltip","getHover","hoverProvider","_getEditorRange","_addRange","showTooltip","lastHoverResponse","getMarkupForHover","tooltipManager","updateUnderlineAndTooltip","_updateUnderlineAndTooltip","cache","afterChange","mousemove","keepTooltip","mouseleave","debouncedGetHover","createThrottler","cacheSize","Throttler","limit","throttlerDelay","edge","isHoverAutomatic","autoActivate","matchingItems","cacheItem","mouseEvent","what","who","cushion","relatedTarget","whatRect","isCloseTo","markups","every","isTokenEmpty","isEventInsideVisible","isResponseUseful","race","delayMilliseconds","editorEange","cm_to_lsp","HOVER_PLUGIN","offsetFromLsp","offsetAtPosition","lsp_to_ce","EditApplicator","workspaceEdit","currentUri","documentChanges","edits","toDocumentChanges","appliedChanges","editedCells","isWholeDocumentEdit","errors","edit","_isWholeDocumentEdit","editsByOffset","oldToNewLine","newText","lastEnd","currentOldLine","currentNewLine","startOffsets","replacedFragment","assert","_applySingleEdit","allEmpty","modifiedCells","wasGranular","_replaceFragment","fragmentStart","fragmentEnd","newFragmentText","rawValue","sharedModel","oldValue","upToOffset","fromOffset","updateSource","setSelection","startEditor","lastEditor","recentlyReplaced","IDiagnosticsFeature","renameIcon","FEATURE_ID","RenameFeature","rename","prepareSupport","honorsChangeAnnotations","outcome","applicator","applyEdit","changeText","renameSymbol","RENAME_PLUGIN","handleFailure","hasIndexError","direPythonErrors","direErrors","guessFailureReason","dialogValue","getText","cancelLabel","accept","newName","handleRename","TOOLTIP_ID","getMarkdown","highlightCode","parameter","pre","callback","tree","parser","parse","pos","highlightTree","jupyterHighlightStyle","runMode","populated","createTextNode","innerText","outerHTML","SignatureFeature","signatureHelp","signatureInformation","languageRegistry","focusListener","_closeCharacters","closeCharacters","isSignatureShown","_removeTooltip","newEditorPosition","initialPosition","_requestSignature","getMarkupForSignatureHelp","signatures","activeSignature","signatureToMarkdown","activeParameter","markdown","activeParameterFallback","codeHighlighter","logger","maxLinesBeforeCollapse","parameters","details","plainTextDocumentation","leadLines","splitOnParagraph","leadCandidate","search","lead","remainder","extractLead","maxLines","_hideTooltip","handleSignature","positionAtRequest","displayPosition","signatureCharacters","signatureHelpProvider","signatureCharacter","hasFocus","editorLanguage","findByMIME","mimeType","support","getSource","subset","lastTriggerCharacterOffset","lastIndexOf","lastCharacter","iterChanges","fromA","toA","fromB","toB","inserted","sliceString","extractLastCharacter","previousPosition","help","SIGNATURE_PLUGIN","IEditorLanguageRegistry","SyntaxHighlightingFeature","originalModes","intialized","updateHandler","awaitUpdate","updateMode","getMode","mimetype","mimeTypeService","getMimeTypeByLanguage","topDocument","totalArea","coverage","foreignCodeThreshold","originalMode","SYNTAX_HIGHLIGHTING_PLUGIN","IEditorServices","editorServices","CodeOverridesManager","_overrides","CODE_OVERRIDES_MANAGER","renderCollapseConflicts","serverConflicts","LanguageServerSettings","formData","_objectTemplate","TabbedObjectTemplateFactory","baseTemplate","templates","ObjectFieldTemplate","objectSelector","schema","serverSchema","properties","validationErrors","instancePath","keyword","params","allowedValues","fields","FormComponent","validator","uiSchema","formContext","liveValidate","idPrefix","onChange","BaseTemplate","tab","setTab","useState","renderServerLabels","retained","property","idSchema","$id","workspaceConfig","workspace_configuration","renderServerMetadata","displayName","getDefaults","defaults","default","SettingsUIManager","schemaValidated","_validationErrors","renderForm","renderLanguageServerSettings","SettingsSchemaManager","_defaultsPopulated","_schemaValidated","_defaults","_canonical","_original","_validationAttempt","_lastValidation","_lastUserServerSettings","_lastUserServerSettingsDoted","pluginId","transform","plugin","JSONExt","deepCopy","_populate","raw","sessionsChanged","reload","baseServerSchema","definitions","knownServersConfig","sharedDefaults","language_servers","defaultsOverrides","serverKey","serverSpec","configSchema","config_schema","$ref","definitionID","defKey","defValue","workspaceConfigurationDefaults","serverDefaultsOverrides","serverSettings","defaultMap","baseSchemaCopy","_validateSchemaLater","deepEqual","collapsedDefaults","_collapseServerSettingsDotted","collapsedUser","_mergeByServer","_warnConflicts","_wasPreviouslyValidated","rawUserSettings","restored","validateData","user","serverSettingsGroup","collapsed","userSettings","merged","priority","python","emptyOrEscaped","LINE_MAGIC_PREFIX","PYTHON_IDENTIFIER","lineBreak","cmd","entire","IPYTHON_TRANSCLUSIONS","extractorsManager","overrideManager","COMMAND_PATTERN","IPYTHON_BIGQUERY_TRANSCLUSIONS","extractArgs","contentPosition","inputs","outputs","others","variable","rest","parseArgs","inputVariables","outputVariables","reversePattern","quote","multiLine","magic","repeat","reverseReplacement","otherArgs","input","output","other","argsPattern","maxN","createExtractor","stripLeadingSpace","r","extractorNonStripping","RPY2_MAX_ARGS","IPYTHON_RPY2_TRANSCLUSIONS","extractorsMmanager","overridesManager","DEFAULT_TRANSCLUSIONS","LSPExtension","_isAnyActive","userConsole","statusBar","formRegistry","statusButtonExtension","registerStatusItem","isActive","addWidgetExtension","_settingsSchemaManager","settingsUI","addRenderer","fieldRenderer","setupSchemaTransform","_activate","_updateOptions","reason","afterInitialization","normalizeSettings","languageServerSettings","configuration","previousInitialConfig","initialConfigurations","updateConfiguration","updateServerConfigurations","updateLogging","logAllCommunication","setTrace","ILoggerRegistry","IStatusBar","IFormRendererRegistry","DEFAULT_FEATURES","COMPLETION_THEME_MANAGER"],"sourceRoot":""}